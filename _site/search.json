[
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-Lesson Learning Site",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.\nWebsite owner: Chang Fang Yu\nOn this website, you will find her learning journey in ISSS608 Visual Analytics and Applications.\n\n\n\nThe picture sources from zh.pngtree.com"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-ridgeline-plot",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-ridgeline-plot",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)               \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)      \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)     \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "p &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactivity",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactivity",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "exam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)               \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)      \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)     \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "DT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on Exercise 3",
    "section": "Getting started",
    "text": "Getting started\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\nImporting the data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on Exercise 3",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\nBuilding a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\nBuilding the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "title": "Hands-on Exercise 3",
    "section": "Animated Data Visualisation: plotly",
    "text": "Animated Data Visualisation: plotly\n\nBuilding an animated bubble plot: ggplotly() method\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\nBuilding an animated bubble plot: plot_ly() method\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-1",
    "title": "Hands-on Exercise 4",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstalling and launching R packages\n\npacman::p_load(ggstatsplot, tidyverse, qqplotr)\n\n\n\nImporting data\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\nSignificant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\n\nSignificant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-2",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-2",
    "title": "Hands-on Exercise 4",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(readxl, performance, parameters, see)\n\n\nImporting Excel file: readxl methods\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\n\nMultiple Regression Model using lm()\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nModel Diagnostic: checking for multicolinearity:\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: checking normality assumption\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\ncheck_n &lt;- check_normality(model1)\nplot(check_n)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: Check model for homogeneity of variances\n\ncheck_h &lt;- check_heteroscedasticity(model1)\nplot(check_h)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: Complete check\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\n\n\nVisualising Regression Parameters: see methods\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\n\nVisualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-3",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-3",
    "title": "Hands-on Exercise 4",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstalling and loading the packages\n\npacman::p_load(plotly, crosstalk, DT, \n               ggdist, ggridges, colorspace,\n               gganimate, tidyverse)\n\n\n\nData import\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\nThe plotThe code\n\n\n\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n\n\nPlotting standard error bars of point estimates\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"cadetblue4\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\nPlotting confidence interval of point estimates\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"cadetblue4\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates with interactive error bars\n\nOriginal ExerciseSelf-Exercising\n\n\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"cadetblue4\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"coral2\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1), plot.title = element_text(size = 9, face = \"bold\")) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntransposed &lt;- my_sum %&gt;%\n  pivot_longer(cols = -RACE, names_to = \"Metric\", values_to = \"Value\") %&gt;%\n  pivot_wider(names_from = RACE, values_from = Value)\n\nggplotly(\n  ggplot(shared_df) +\n    geom_errorbar(aes(\n      x = reorder(RACE, -mean),\n      ymin = mean - 2.58 * se, \n      ymax = mean + 2.58 * se), \n      width = 0.2, \n      colour = \"cadetblue4\", \n      alpha = 0.9, \n      size = 0.5) +\n    geom_point(aes(\n      x = RACE, \n      y = mean, \n      text = paste(\"Race:\", `RACE`, \n                   \"&lt;br&gt;N:\", `n`,\n                   \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                   \"&lt;br&gt;99% CI:[\", \n                   round((mean - 2.58 * se), digits = 2), \",\",\n                   round((mean + 2.58 * se), digits = 2), \"]\")),\n      stat = \"identity\", \n      color = \"coral2\", \n      size = 1.5, \n      alpha = 1) + \n    xlab(\"Race\") + \n    ylab(\"Average Scores\") + \n    theme_minimal() +\n    theme(\n      axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1),\n      plot.title = element_text(size = 9, face = \"bold\")) +\n    ggtitle(\"99% Confidence interval of average maths scores by race\"), \n  tooltip = \"text\"\n)\n\n\n\n\ndatatable(transposed,\n          rownames = FALSE,\n          options = list(pageLength = 5, scrollX = TRUE))"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-ggdist-package",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-ggdist-package",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Uncertainty: ggdist package",
    "text": "Visualising Uncertainty: ggdist package\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_halfeye() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot + Halfeye\")\n\n\n\n\n\n\n\n\n\n95% Confidence level99% Confidence level\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS, color = RACE)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi, point_color = \"coral2\") +\n  labs(\n    title = \"Visualising 95% confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS, color = RACE)) +\n  stat_pointinterval(.width = 0.99,\n  .point = median,\n  .interval = qi, point_color = \"coral2\") +\n  labs(\n    title = \"Visualising 99% confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_eye(\n    show.legend = FALSE, slab_alpha = 0.5  ) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\ndevtools::install_github(\"wilkelab/ungeviz\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nset.seed(123) \n\nsummary_data &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarize(yintercept = mean(MATHS))\n\nggplot(data = exam, aes(x = factor(RACE), y = MATHS)) +\n  geom_point(position = position_jitter(height = 0.3, width = 0.05),\n             size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hline(data = summary_data, aes(yintercept = yintercept, group = RACE),\n             color = \"#D55E00\", size = 1) +\n  theme_bw() +\n  transition_states(RACE, transition_length = 1, state_length = 3)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#installing-and-launching-r-packages-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#installing-and-launching-r-packages-1",
    "title": "Hands-on Exercise 4",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods",
    "text": "FunnelPlotR methods\n\nFunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05)   \n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on Exercise 4",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods-1",
    "title": "Hands-on Exercise 4",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nPlotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position.inside = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html",
    "title": "In-class exercise 4",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidymodels, ggstatsplot, tidyverse) \n\n\n#| message: false\n#| warning: false\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = FALSE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#getting-started",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#getting-started",
    "title": "In-class exercise 4",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidymodels, ggstatsplot, tidyverse) \n\n\n#| message: false\n#| warning: false\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = FALSE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In this exercise, we are going to utilize The Ship Performance Clustering Dataset to perform a clustering analysis. This dataset comproses numerical and categorical features representing different ship types, operational characteristics and other facters, enabling the segmentation of vessels based on key performance metrics, providing insights into their efficiency, cost-effectiveness and operational behaviors.\n\n\nThis analysis was conducted by R Studio, leveraging various statistical and visualization packages to facilitate data preprocessing, clustering, and result interpretation. The following R packages were employed:\n\n\n\nThe Ship Performance Clustering\n\n\n\n\n\n\nGlimpse() shows it consists of 2736 rows and 18 columns, including 1 date type, 5 categorical type, and 12 numerical type. By Datatable, We can check the detail of the dataset.\n\nDatatable\n\n\n\n\n&lt;div style=\"max-height: 200px; overflow-y: auto;\"&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nChecking for Duplicates and Missing Values Duplicates\n\n\n# A tibble: 0 × 18\n# ℹ 18 variables: Date &lt;date&gt;, Ship_Type &lt;chr&gt;, Route_Type &lt;chr&gt;,\n#   Engine_Type &lt;chr&gt;, Maintenance_Status &lt;chr&gt;, Speed_Over_Ground_knots &lt;dbl&gt;,\n#   Engine_Power_kW &lt;dbl&gt;, Distance_Traveled_nm &lt;dbl&gt;, Draft_meters &lt;dbl&gt;,\n#   Weather_Condition &lt;chr&gt;, Cargo_Weight_tons &lt;dbl&gt;,\n#   Operational_Cost_USD &lt;dbl&gt;, Revenue_per_Voyage_USD &lt;dbl&gt;,\n#   Turnaround_Time_hours &lt;dbl&gt;, Efficiency_nm_per_kWh &lt;dbl&gt;,\n#   Seasonal_Impact_Score &lt;dbl&gt;, Weekly_Voyage_Count &lt;dbl&gt;, …\n\n\nMissing Values\n\n\n[1] 0\n\n\n\n\n\n\n\nThe Distribution of Numerical VariablesBox Plot of Numerical VariablesDistribution iof Categorical Variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsight: From the box plot, we can check there is no outliers existng in the data set.\n\n\n\nOperational Cost(USD) vs. Engine TypeOperational Cost(USD) vs. Route TypeRevnue per Voyage(USD) vs. Route TypeRevnue per Voyage(USD) vs. Ship Type\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDrop ‘Date’ variable.\n\n\nOne-hot encoding ‘Engine_Type, ’Route_Type’, ‘Ship_Type’, ‘Maintenance_Status’\n\n\n\n[1] 0\n\n\n[1] 0\n\n\n[1] 0\n\n\n\nCheck Result\n\n\n\ntibble [2,736 × 29] (S3: tbl_df/tbl/data.frame)\n $ Speed_Over_Ground_knots         : num [1:2736] 12.6 10.4 20.7 21.1 13.7 ...\n $ Engine_Power_kW                 : num [1:2736] 2063 1796 1649 915 1090 ...\n $ Distance_Traveled_nm            : num [1:2736] 1031 1060 659 1127 1445 ...\n $ Draft_meters                    : num [1:2736] 14.13 14.65 7.2 11.79 9.73 ...\n $ Cargo_Weight_tons               : num [1:2736] 1959 162 178 1737 261 ...\n $ Operational_Cost_USD            : num [1:2736] 483832 483388 448543 261350 287718 ...\n $ Revenue_per_Voyage_USD          : num [1:2736] 292183 883766 394019 87551 676121 ...\n $ Turnaround_Time_hours           : num [1:2736] 25.9 63.2 49.4 22.4 64.2 ...\n $ Efficiency_nm_per_kWh           : num [1:2736] 1.455 0.29 0.5 0.703 1.331 ...\n $ Seasonal_Impact_Score           : num [1:2736] 1.416 0.886 1.406 1.371 0.583 ...\n $ Weekly_Voyage_Count             : num [1:2736] 1 6 9 1 8 7 3 6 8 2 ...\n $ Average_Load_Percentage         : num [1:2736] 93.8 93.9 96.2 66.2 80 ...\n $ Engine_Type_Heavy Fuel Oil (HFO): int [1:2736] 1 0 0 0 0 1 1 0 1 0 ...\n $ Engine_Type_None                : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Engine_Type_Steam Turbine       : int [1:2736] 0 1 0 1 0 0 0 0 0 0 ...\n $ Route_Type_Long-haul            : int [1:2736] 0 0 1 0 0 1 0 0 0 1 ...\n $ Route_Type_None                 : int [1:2736] 1 0 0 0 0 0 0 0 0 0 ...\n $ Route_Type_Short-haul           : int [1:2736] 0 1 0 0 0 0 0 1 0 0 ...\n $ Route_Type_Transoceanic         : int [1:2736] 0 0 0 1 1 0 1 0 0 0 ...\n $ Ship_Type_Container Ship        : int [1:2736] 1 0 1 0 0 0 0 1 0 1 ...\n $ Ship_Type_Fish Carrier          : int [1:2736] 0 1 0 0 1 1 1 0 0 0 ...\n $ Ship_Type_None                  : int [1:2736] 0 0 0 0 0 0 0 0 1 0 ...\n $ Ship_Type_Tanker                : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Weather_Condition_Moderate      : int [1:2736] 1 0 1 1 1 0 0 1 1 0 ...\n $ Weather_Condition_None          : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Weather_Condition_Rough         : int [1:2736] 0 1 0 0 0 1 1 0 0 0 ...\n $ Maintenance_Status_Fair         : int [1:2736] 0 0 1 1 1 1 0 0 0 1 ...\n $ Maintenance_Status_Good         : int [1:2736] 0 1 0 0 0 0 0 0 1 0 ...\n $ Maintenance_Status_None         : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n\n\n Speed_Over_Ground_knots Engine_Power_kW Distance_Traveled_nm  Draft_meters   \n Min.   :10.01           Min.   : 501    Min.   :  50.43      Min.   : 5.002  \n 1st Qu.:13.93           1st Qu.:1148    1st Qu.: 548.51      1st Qu.: 7.437  \n Median :17.71           Median :1757    Median :1037.82      Median : 9.919  \n Mean   :17.60           Mean   :1758    Mean   :1036.41      Mean   : 9.929  \n 3rd Qu.:21.28           3rd Qu.:2383    3rd Qu.:1540.93      3rd Qu.:12.413  \n Max.   :25.00           Max.   :2999    Max.   :1998.34      Max.   :14.993  \n Cargo_Weight_tons Operational_Cost_USD Revenue_per_Voyage_USD\n Min.   :  50.23   Min.   : 10092       Min.   : 50352        \n 1st Qu.: 553.98   1st Qu.:131293       1st Qu.:290346        \n Median :1043.21   Median :257158       Median :520177        \n Mean   :1032.57   Mean   :255143       Mean   :521362        \n 3rd Qu.:1527.72   3rd Qu.:381797       3rd Qu.:750073        \n Max.   :1999.13   Max.   :499735       Max.   :999917        \n Turnaround_Time_hours Efficiency_nm_per_kWh Seasonal_Impact_Score\n Min.   :12.02         Min.   :0.1002        Min.   :0.500        \n 1st Qu.:26.17         1st Qu.:0.4636        1st Qu.:0.758        \n Median :41.59         Median :0.7899        Median :1.009        \n Mean   :41.75         Mean   :0.7987        Mean   :1.004        \n 3rd Qu.:57.36         3rd Qu.:1.1474        3rd Qu.:1.253        \n Max.   :71.97         Max.   :1.4993        Max.   :1.499        \n Weekly_Voyage_Count Average_Load_Percentage Engine_Type_Heavy Fuel Oil (HFO)\n Min.   :1.000       Min.   : 50.01          Min.   :0.0000                  \n 1st Qu.:3.000       1st Qu.: 62.70          1st Qu.:0.0000                  \n Median :5.000       Median : 75.50          Median :0.0000                  \n Mean   :4.915       Mean   : 75.22          Mean   :0.3118                  \n 3rd Qu.:7.000       3rd Qu.: 87.72          3rd Qu.:1.0000                  \n Max.   :9.000       Max.   :100.00          Max.   :1.0000                  \n Engine_Type_None  Engine_Type_Steam Turbine Route_Type_Long-haul\n Min.   :0.00000   Min.   :0.0000            Min.   :0.0000      \n 1st Qu.:0.00000   1st Qu.:0.0000            1st Qu.:0.0000      \n Median :0.00000   Median :0.0000            Median :0.0000      \n Mean   :0.04971   Mean   :0.3125            Mean   :0.2507      \n 3rd Qu.:0.00000   3rd Qu.:1.0000            3rd Qu.:1.0000      \n Max.   :1.00000   Max.   :1.0000            Max.   :1.0000      \n Route_Type_None   Route_Type_Short-haul Route_Type_Transoceanic\n Min.   :0.00000   Min.   :0.0000        Min.   :0.0000         \n 1st Qu.:0.00000   1st Qu.:0.0000        1st Qu.:0.0000         \n Median :0.00000   Median :0.0000        Median :0.0000         \n Mean   :0.04971   Mean   :0.2288        Mean   :0.2332         \n 3rd Qu.:0.00000   3rd Qu.:0.0000        3rd Qu.:0.0000         \n Max.   :1.00000   Max.   :1.0000        Max.   :1.0000         \n Ship_Type_Container Ship Ship_Type_Fish Carrier Ship_Type_None   \n Min.   :0.0000           Min.   :0.0000         Min.   :0.00000  \n 1st Qu.:0.0000           1st Qu.:0.0000         1st Qu.:0.00000  \n Median :0.0000           Median :0.0000         Median :0.00000  \n Mean   :0.2321           Mean   :0.2387         Mean   :0.04971  \n 3rd Qu.:0.0000           3rd Qu.:0.0000         3rd Qu.:0.00000  \n Max.   :1.0000           Max.   :1.0000         Max.   :1.00000  \n Ship_Type_Tanker Weather_Condition_Moderate Weather_Condition_None\n Min.   :0.000    Min.   :0.0000             Min.   :0.00000       \n 1st Qu.:0.000    1st Qu.:0.0000             1st Qu.:0.00000       \n Median :0.000    Median :0.0000             Median :0.00000       \n Mean   :0.235    Mean   :0.3257             Mean   :0.04971       \n 3rd Qu.:0.000    3rd Qu.:1.0000             3rd Qu.:0.00000       \n Max.   :1.000    Max.   :1.0000             Max.   :1.00000       \n Weather_Condition_Rough Maintenance_Status_Fair Maintenance_Status_Good\n Min.   :0.0000          Min.   :0.0000          Min.   :0.0000         \n 1st Qu.:0.0000          1st Qu.:0.0000          1st Qu.:0.0000         \n Median :0.0000          Median :0.0000          Median :0.0000         \n Mean   :0.2982          Mean   :0.3169          Mean   :0.3191         \n 3rd Qu.:1.0000          3rd Qu.:1.0000          3rd Qu.:1.0000         \n Max.   :1.0000          Max.   :1.0000          Max.   :1.0000         \n Maintenance_Status_None\n Min.   :0.00000        \n 1st Qu.:0.00000        \n Median :0.00000        \n Mean   :0.04971        \n 3rd Qu.:0.00000        \n Max.   :1.00000        \n\n\n\nPerform Normalization\n\n\n\n[1] 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nElbow MethodSilhouette Method\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFind the best k value =3\n\n\n\nResult\n\n\nImportance of components:\n                           PC1     PC2    PC3     PC4     PC5     PC6     PC7\nStandard deviation     1.24147 1.22404 1.2053 1.16804 1.15556 1.14377 1.12295\nProportion of Variance 0.05315 0.05166 0.0501 0.04705 0.04605 0.04511 0.04348\nCumulative Proportion  0.05315 0.10481 0.1549 0.20195 0.24800 0.29311 0.33659\n                           PC8     PC9    PC10    PC11    PC12    PC13    PC14\nStandard deviation     1.08146 1.06935 1.06292 1.04270 1.03616 1.02922 1.02355\nProportion of Variance 0.04033 0.03943 0.03896 0.03749 0.03702 0.03653 0.03613\nCumulative Proportion  0.37692 0.41635 0.45531 0.49280 0.52982 0.56635 0.60248\n                         PC15    PC16    PC17    PC18    PC19    PC20   PC21\nStandard deviation     1.0118 1.00777 0.99960 0.98735 0.98305 0.97878 0.9664\nProportion of Variance 0.0353 0.03502 0.03446 0.03362 0.03332 0.03303 0.0322\nCumulative Proportion  0.6378 0.67280 0.70725 0.74087 0.77419 0.80723 0.8394\n                         PC22    PC23    PC24    PC25    PC26    PC27    PC28\nStandard deviation     0.9572 0.94582 0.94161 0.68200 0.67419 0.65242 0.55855\nProportion of Variance 0.0316 0.03085 0.03057 0.01604 0.01567 0.01468 0.01076\nCumulative Proportion  0.8710 0.90187 0.93245 0.94848 0.96416 0.97884 0.98959\n                          PC29\nStandard deviation     0.54935\nProportion of Variance 0.01041\nCumulative Proportion  1.00000\n\n\nScreeplot\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the PCA results, we selected the top 20 components and transformed the data into a new dimension-reduced dataset. K = 3 We only show PC4 vs. PC5 which has better clustering effect.\n\n\n\n\n\n\n\n\n\n\n\n\n[1] \"data.frame\"\n\n\n'data.frame':   2736 obs. of  21 variables:\n $ PC1    : num  -1.618 2.303 -1.906 -0.659 -0.748 ...\n $ PC2    : num  -0.0134 0.1581 -1.7757 -2.262 -1.5602 ...\n $ PC3    : num  -1.614 -0.486 0.561 0.893 -0.377 ...\n $ PC4    : num  -1.29 1.56 -1.73 1.01 1.09 ...\n $ PC5    : num  0.404 -0.536 -0.407 1.041 2.203 ...\n $ PC6    : num  -0.96 1.812 0.079 -0.913 0.682 ...\n $ PC7    : num  1.057 1.459 0.535 -0.742 -0.909 ...\n $ PC8    : num  2.058 -1.465 0.66 0.256 1.098 ...\n $ PC9    : num  -0.606 -0.384 0.438 0.212 -0.327 ...\n $ PC10   : num  1.141 -1.265 -0.661 -0.758 -0.473 ...\n $ PC11   : num  -2.053 1.025 0.773 -0.427 1.428 ...\n $ PC12   : num  0.966 -0.285 -0.117 0.762 0.114 ...\n $ PC13   : num  1.661 -1.075 -0.494 0.452 -0.832 ...\n $ PC14   : num  -0.773 -1.663 -0.626 0.786 0.347 ...\n $ PC15   : num  -0.966 -2.056 -1.999 1.5 -0.49 ...\n $ PC16   : num  -3.661 -1.482 1.592 -0.655 -0.43 ...\n $ PC17   : num  -1.07 -0.515 0.201 -0.833 0.294 ...\n $ PC18   : num  0.281 0.361 0.249 1.873 -0.798 ...\n $ PC19   : num  -1.247 0.226 -0.51 -0.435 2.02 ...\n $ PC20   : num  -0.51 -1.383 -0.688 1.241 -1.5 ...\n $ Cluster: Factor w/ 3 levels \"1\",\"2\",\"3\": 2 1 2 3 3 2 3 1 2 2 ...\n\n\nNext, by PCA Loading plot, we can interpret the importance of features in reducing dimensionality while retaining essential information. The first 5 principal components (PCs) are selected ([, 1:5]), which means only the top five components are retained.\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we are going to figure out the characteristics of 3 cluster.\nFirst, calculate the mean of each cluster in PCA.\n\n\n# A tibble: 3 × 41\n  Cluster PC1_mean PC1_sd PC2_mean PC2_sd PC3_mean PC3_sd PC4_mean PC4_sd\n  &lt;fct&gt;      &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n1 1        -0.457    1.16  0.305     1.19 -0.518     1.16    1.11   0.808\n2 2        -0.0120   1.20 -0.00278   1.22  0.222     1.18   -0.561  1.06 \n3 3         0.475    1.24 -0.293     1.19 -0.00483   1.14    0.203  0.815\n# ℹ 32 more variables: PC5_mean &lt;dbl&gt;, PC5_sd &lt;dbl&gt;, PC6_mean &lt;dbl&gt;,\n#   PC6_sd &lt;dbl&gt;, PC7_mean &lt;dbl&gt;, PC7_sd &lt;dbl&gt;, PC8_mean &lt;dbl&gt;, PC8_sd &lt;dbl&gt;,\n#   PC9_mean &lt;dbl&gt;, PC9_sd &lt;dbl&gt;, PC10_mean &lt;dbl&gt;, PC10_sd &lt;dbl&gt;,\n#   PC11_mean &lt;dbl&gt;, PC11_sd &lt;dbl&gt;, PC12_mean &lt;dbl&gt;, PC12_sd &lt;dbl&gt;,\n#   PC13_mean &lt;dbl&gt;, PC13_sd &lt;dbl&gt;, PC14_mean &lt;dbl&gt;, PC14_sd &lt;dbl&gt;,\n#   PC15_mean &lt;dbl&gt;, PC15_sd &lt;dbl&gt;, PC16_mean &lt;dbl&gt;, PC16_sd &lt;dbl&gt;,\n#   PC17_mean &lt;dbl&gt;, PC17_sd &lt;dbl&gt;, PC18_mean &lt;dbl&gt;, PC18_sd &lt;dbl&gt;, …\n\n\nBelow, we visualize the mean and standard deviation of each principal component (PC). ### Plot PC by mean and Std\n\n\n [1] \"Cluster\"   \"PC1_mean\"  \"PC1_sd\"    \"PC2_mean\"  \"PC2_sd\"    \"PC3_mean\" \n [7] \"PC3_sd\"    \"PC4_mean\"  \"PC4_sd\"    \"PC5_mean\"  \"PC5_sd\"    \"PC6_mean\" \n[13] \"PC6_sd\"    \"PC7_mean\"  \"PC7_sd\"    \"PC8_mean\"  \"PC8_sd\"    \"PC9_mean\" \n[19] \"PC9_sd\"    \"PC10_mean\" \"PC10_sd\"   \"PC11_mean\" \"PC11_sd\"   \"PC12_mean\"\n[25] \"PC12_sd\"   \"PC13_mean\" \"PC13_sd\"   \"PC14_mean\" \"PC14_sd\"   \"PC15_mean\"\n[31] \"PC15_sd\"   \"PC16_mean\" \"PC16_sd\"   \"PC17_mean\" \"PC17_sd\"   \"PC18_mean\"\n[37] \"PC18_sd\"   \"PC19_mean\" \"PC19_sd\"   \"PC20_mean\" \"PC20_sd\"  \n\n\n\n\n\n\n\n\n\n\n\n\nBelow is a visualization where we can observe the distribution of categorical variables in each cluster."
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"coral3\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#preparing-the-data",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#preparing-the-data",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-ternary-diagram-with-r",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-ternary-diagram-with-r",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"coral3\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-1",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-1",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set",
    "title": "Hands-on Exercise 5",
    "section": "Importing and Preparing The Data Set",
    "text": "Importing and Preparing The Data Set\n\nImporting Data\n\nwine &lt;- read_csv(\"data/wine_quality.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#static-heatmap",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#static-heatmap",
    "title": "Hands-on Exercise 5",
    "section": "Static Heatmap",
    "text": "Static Heatmap\n\nheatmap() of R Stats\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#creating-interactive-heatmap",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#creating-interactive-heatmap",
    "title": "Hands-on Exercise 5",
    "section": "Creating Interactive Heatmap",
    "text": "Creating Interactive Heatmap\n\nWorking with heatmaply\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\n\n\nData trasformation\nScaling method\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\nNormalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\nPercentising method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\nManual approach\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\n\nStatistical approach\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)\n\n\n\n\n\n\n\nSeriation\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")\n\n\n\n\n\n\n\nWorking with colour palettes\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Blues)\n\n\n\n\n\n\n\nThe finishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-2",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-2",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-on Exercise 5",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-static-parallel-coordinates-plot",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-static-parallel-coordinates-plot",
    "title": "Hands-on Exercise 5",
    "section": "Plotting Static Parallel Coordinates Plot",
    "text": "Plotting Static Parallel Coordinates Plot\n\nPlotting a simple parallel coordinates\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\n\n\n\n\n\nPlotting a parallel coordinates with boxplot\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\n\n\n\n\n\n\nParallel coordinates with facet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\n\n\n\n\n\nRotating x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\n\n\nAdjusting the rotated x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "title": "Hands-on Exercise 5",
    "section": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods",
    "text": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods\n\nThe basic plot\n\nwh &lt;- wh %&gt;%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\n\nRotate axis label\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nChanging the colour scheme\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nParallel coordinates plot with histogram\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-3",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-3",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(GGally, parallelPlot, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling",
    "title": "Hands-on Exercise 5",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nImporting the data set\n\nrealis2018 &lt;- read_csv(\"data/realis2018.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling-and-manipulation",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling-and-manipulation",
    "title": "Hands-on Exercise 5",
    "section": "Data Wrangling and Manipulation",
    "text": "Data Wrangling and Manipulation\n\nGrouped summaries without the Pipe\n\nrealis2018_grouped &lt;- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised &lt;- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\n\nGrouped summaries with the pipe\n\nrealis2018_summarised &lt;- realis2018 %&gt;% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %&gt;%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-with-treemap-package",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-with-treemap-package",
    "title": "Hands-on Exercise 5",
    "section": "Designing Treemap with treemap Package",
    "text": "Designing Treemap with treemap Package\n\nDesigning a static treemap\n\nrealis2018_selected &lt;- realis2018_summarised %&gt;%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")\n\n\n\nUsing the basic arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nWorking with vColor and type arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type = \"value\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThe “value” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThe “manual” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nWorking with algorithm argument\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"squarified\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nUsing sortID\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-using-treemapify-package",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-using-treemapify-package",
    "title": "Hands-on Exercise 5",
    "section": "Designing Treemap using treemapify Package",
    "text": "Designing Treemap using treemapify Package\n\nDesigning a basic treemap\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`),\n       layout = \"scol\",\n       start = \"bottomleft\") + \n  geom_treemap() +\n  scale_fill_gradient(low = \"light blue\", high = \"blue\")\n\n\n\n\n\n\n\n\n\n\nDefining hierarchy\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`),\n       start = \"topleft\") + \n  geom_treemap()\n\n\n\n\n\n\n\n\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap()\n\n\n\n\n\n\n\n\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"gray40\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"gray20\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-interactive-treemap-using-d3treer",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-interactive-treemap-using-d3treer",
    "title": "Hands-on Exercise 5",
    "section": "Designing Interactive Treemap using d3treeR",
    "text": "Designing Interactive Treemap using d3treeR\n\nInstalling d3treeR package\n\nlibrary(devtools)\ninstall_github(\"timelyportfolio/d3treeR\")\n\n\nlibrary(d3treeR)\n\n\n\nDesigning An Interactive Treemap\n\ntm &lt;- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\nd3tree(tm,rootname = \"Singapore\" )"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#overview",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#overview",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In this exercise, we are going to utilize The Ship Performance Clustering Dataset to perform a clustering analysis. This dataset comproses numerical and categorical features representing different ship types, operational characteristics and other facters, enabling the segmentation of vessels based on key performance metrics, providing insights into their efficiency, cost-effectiveness and operational behaviors.\n\n\nThis analysis was conducted by R Studio, leveraging various statistical and visualization packages to facilitate data preprocessing, clustering, and result interpretation. The following R packages were employed:\n\n\n\nThe Ship Performance Clustering"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#data-pre-processing",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#data-pre-processing",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Glimpse() shows it consists of 2736 rows and 18 columns, including 1 date type, 5 categorical type, and 12 numerical type. By Datatable, We can check the detail of the dataset.\n\nDatatable\n\n\n\n\n&lt;div style=\"max-height: 200px; overflow-y: auto;\"&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nChecking for Duplicates and Missing Values Duplicates\n\n\n# A tibble: 0 × 18\n# ℹ 18 variables: Date &lt;date&gt;, Ship_Type &lt;chr&gt;, Route_Type &lt;chr&gt;,\n#   Engine_Type &lt;chr&gt;, Maintenance_Status &lt;chr&gt;, Speed_Over_Ground_knots &lt;dbl&gt;,\n#   Engine_Power_kW &lt;dbl&gt;, Distance_Traveled_nm &lt;dbl&gt;, Draft_meters &lt;dbl&gt;,\n#   Weather_Condition &lt;chr&gt;, Cargo_Weight_tons &lt;dbl&gt;,\n#   Operational_Cost_USD &lt;dbl&gt;, Revenue_per_Voyage_USD &lt;dbl&gt;,\n#   Turnaround_Time_hours &lt;dbl&gt;, Efficiency_nm_per_kWh &lt;dbl&gt;,\n#   Seasonal_Impact_Score &lt;dbl&gt;, Weekly_Voyage_Count &lt;dbl&gt;, …\n\n\nMissing Values\n\n\n[1] 0"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysiseda",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysiseda",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The Distribution of Numerical VariablesBox Plot of Numerical VariablesDistribution iof Categorical Variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsight: From the box plot, we can check there is no outliers existng in the data set.\n\n\n\nOperational Cost(USD) vs. Engine TypeOperational Cost(USD) vs. Route TypeRevnue per Voyage(USD) vs. Route TypeRevnue per Voyage(USD) vs. Ship Type"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#prepare-data-for-clustering-analysis",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#prepare-data-for-clustering-analysis",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Drop ‘Date’ variable.\n\n\nOne-hot encoding ‘Engine_Type, ’Route_Type’, ‘Ship_Type’, ‘Maintenance_Status’\n\n\n\n[1] 0\n\n\n[1] 0\n\n\n[1] 0\n\n\n\nCheck Result\n\n\n\ntibble [2,736 × 29] (S3: tbl_df/tbl/data.frame)\n $ Speed_Over_Ground_knots         : num [1:2736] 12.6 10.4 20.7 21.1 13.7 ...\n $ Engine_Power_kW                 : num [1:2736] 2063 1796 1649 915 1090 ...\n $ Distance_Traveled_nm            : num [1:2736] 1031 1060 659 1127 1445 ...\n $ Draft_meters                    : num [1:2736] 14.13 14.65 7.2 11.79 9.73 ...\n $ Cargo_Weight_tons               : num [1:2736] 1959 162 178 1737 261 ...\n $ Operational_Cost_USD            : num [1:2736] 483832 483388 448543 261350 287718 ...\n $ Revenue_per_Voyage_USD          : num [1:2736] 292183 883766 394019 87551 676121 ...\n $ Turnaround_Time_hours           : num [1:2736] 25.9 63.2 49.4 22.4 64.2 ...\n $ Efficiency_nm_per_kWh           : num [1:2736] 1.455 0.29 0.5 0.703 1.331 ...\n $ Seasonal_Impact_Score           : num [1:2736] 1.416 0.886 1.406 1.371 0.583 ...\n $ Weekly_Voyage_Count             : num [1:2736] 1 6 9 1 8 7 3 6 8 2 ...\n $ Average_Load_Percentage         : num [1:2736] 93.8 93.9 96.2 66.2 80 ...\n $ Engine_Type_Heavy Fuel Oil (HFO): int [1:2736] 1 0 0 0 0 1 1 0 1 0 ...\n $ Engine_Type_None                : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Engine_Type_Steam Turbine       : int [1:2736] 0 1 0 1 0 0 0 0 0 0 ...\n $ Route_Type_Long-haul            : int [1:2736] 0 0 1 0 0 1 0 0 0 1 ...\n $ Route_Type_None                 : int [1:2736] 1 0 0 0 0 0 0 0 0 0 ...\n $ Route_Type_Short-haul           : int [1:2736] 0 1 0 0 0 0 0 1 0 0 ...\n $ Route_Type_Transoceanic         : int [1:2736] 0 0 0 1 1 0 1 0 0 0 ...\n $ Ship_Type_Container Ship        : int [1:2736] 1 0 1 0 0 0 0 1 0 1 ...\n $ Ship_Type_Fish Carrier          : int [1:2736] 0 1 0 0 1 1 1 0 0 0 ...\n $ Ship_Type_None                  : int [1:2736] 0 0 0 0 0 0 0 0 1 0 ...\n $ Ship_Type_Tanker                : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Weather_Condition_Moderate      : int [1:2736] 1 0 1 1 1 0 0 1 1 0 ...\n $ Weather_Condition_None          : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Weather_Condition_Rough         : int [1:2736] 0 1 0 0 0 1 1 0 0 0 ...\n $ Maintenance_Status_Fair         : int [1:2736] 0 0 1 1 1 1 0 0 0 1 ...\n $ Maintenance_Status_Good         : int [1:2736] 0 1 0 0 0 0 0 0 1 0 ...\n $ Maintenance_Status_None         : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n\n\n Speed_Over_Ground_knots Engine_Power_kW Distance_Traveled_nm  Draft_meters   \n Min.   :10.01           Min.   : 501    Min.   :  50.43      Min.   : 5.002  \n 1st Qu.:13.93           1st Qu.:1148    1st Qu.: 548.51      1st Qu.: 7.437  \n Median :17.71           Median :1757    Median :1037.82      Median : 9.919  \n Mean   :17.60           Mean   :1758    Mean   :1036.41      Mean   : 9.929  \n 3rd Qu.:21.28           3rd Qu.:2383    3rd Qu.:1540.93      3rd Qu.:12.413  \n Max.   :25.00           Max.   :2999    Max.   :1998.34      Max.   :14.993  \n Cargo_Weight_tons Operational_Cost_USD Revenue_per_Voyage_USD\n Min.   :  50.23   Min.   : 10092       Min.   : 50352        \n 1st Qu.: 553.98   1st Qu.:131293       1st Qu.:290346        \n Median :1043.21   Median :257158       Median :520177        \n Mean   :1032.57   Mean   :255143       Mean   :521362        \n 3rd Qu.:1527.72   3rd Qu.:381797       3rd Qu.:750073        \n Max.   :1999.13   Max.   :499735       Max.   :999917        \n Turnaround_Time_hours Efficiency_nm_per_kWh Seasonal_Impact_Score\n Min.   :12.02         Min.   :0.1002        Min.   :0.500        \n 1st Qu.:26.17         1st Qu.:0.4636        1st Qu.:0.758        \n Median :41.59         Median :0.7899        Median :1.009        \n Mean   :41.75         Mean   :0.7987        Mean   :1.004        \n 3rd Qu.:57.36         3rd Qu.:1.1474        3rd Qu.:1.253        \n Max.   :71.97         Max.   :1.4993        Max.   :1.499        \n Weekly_Voyage_Count Average_Load_Percentage Engine_Type_Heavy Fuel Oil (HFO)\n Min.   :1.000       Min.   : 50.01          Min.   :0.0000                  \n 1st Qu.:3.000       1st Qu.: 62.70          1st Qu.:0.0000                  \n Median :5.000       Median : 75.50          Median :0.0000                  \n Mean   :4.915       Mean   : 75.22          Mean   :0.3118                  \n 3rd Qu.:7.000       3rd Qu.: 87.72          3rd Qu.:1.0000                  \n Max.   :9.000       Max.   :100.00          Max.   :1.0000                  \n Engine_Type_None  Engine_Type_Steam Turbine Route_Type_Long-haul\n Min.   :0.00000   Min.   :0.0000            Min.   :0.0000      \n 1st Qu.:0.00000   1st Qu.:0.0000            1st Qu.:0.0000      \n Median :0.00000   Median :0.0000            Median :0.0000      \n Mean   :0.04971   Mean   :0.3125            Mean   :0.2507      \n 3rd Qu.:0.00000   3rd Qu.:1.0000            3rd Qu.:1.0000      \n Max.   :1.00000   Max.   :1.0000            Max.   :1.0000      \n Route_Type_None   Route_Type_Short-haul Route_Type_Transoceanic\n Min.   :0.00000   Min.   :0.0000        Min.   :0.0000         \n 1st Qu.:0.00000   1st Qu.:0.0000        1st Qu.:0.0000         \n Median :0.00000   Median :0.0000        Median :0.0000         \n Mean   :0.04971   Mean   :0.2288        Mean   :0.2332         \n 3rd Qu.:0.00000   3rd Qu.:0.0000        3rd Qu.:0.0000         \n Max.   :1.00000   Max.   :1.0000        Max.   :1.0000         \n Ship_Type_Container Ship Ship_Type_Fish Carrier Ship_Type_None   \n Min.   :0.0000           Min.   :0.0000         Min.   :0.00000  \n 1st Qu.:0.0000           1st Qu.:0.0000         1st Qu.:0.00000  \n Median :0.0000           Median :0.0000         Median :0.00000  \n Mean   :0.2321           Mean   :0.2387         Mean   :0.04971  \n 3rd Qu.:0.0000           3rd Qu.:0.0000         3rd Qu.:0.00000  \n Max.   :1.0000           Max.   :1.0000         Max.   :1.00000  \n Ship_Type_Tanker Weather_Condition_Moderate Weather_Condition_None\n Min.   :0.000    Min.   :0.0000             Min.   :0.00000       \n 1st Qu.:0.000    1st Qu.:0.0000             1st Qu.:0.00000       \n Median :0.000    Median :0.0000             Median :0.00000       \n Mean   :0.235    Mean   :0.3257             Mean   :0.04971       \n 3rd Qu.:0.000    3rd Qu.:1.0000             3rd Qu.:0.00000       \n Max.   :1.000    Max.   :1.0000             Max.   :1.00000       \n Weather_Condition_Rough Maintenance_Status_Fair Maintenance_Status_Good\n Min.   :0.0000          Min.   :0.0000          Min.   :0.0000         \n 1st Qu.:0.0000          1st Qu.:0.0000          1st Qu.:0.0000         \n Median :0.0000          Median :0.0000          Median :0.0000         \n Mean   :0.2982          Mean   :0.3169          Mean   :0.3191         \n 3rd Qu.:1.0000          3rd Qu.:1.0000          3rd Qu.:1.0000         \n Max.   :1.0000          Max.   :1.0000          Max.   :1.0000         \n Maintenance_Status_None\n Min.   :0.00000        \n 1st Qu.:0.00000        \n Median :0.00000        \n Mean   :0.04971        \n 3rd Qu.:0.00000        \n Max.   :1.00000        \n\n\n\nPerform Normalization\n\n\n\n[1] 0"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#perform-clustering-analysis",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#perform-clustering-analysis",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Elbow MethodSilhouette Method\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFind the best k value =3\n\n\n\nResult\n\n\nImportance of components:\n                           PC1     PC2    PC3     PC4     PC5     PC6     PC7\nStandard deviation     1.24147 1.22404 1.2053 1.16804 1.15556 1.14377 1.12295\nProportion of Variance 0.05315 0.05166 0.0501 0.04705 0.04605 0.04511 0.04348\nCumulative Proportion  0.05315 0.10481 0.1549 0.20195 0.24800 0.29311 0.33659\n                           PC8     PC9    PC10    PC11    PC12    PC13    PC14\nStandard deviation     1.08146 1.06935 1.06292 1.04270 1.03616 1.02922 1.02355\nProportion of Variance 0.04033 0.03943 0.03896 0.03749 0.03702 0.03653 0.03613\nCumulative Proportion  0.37692 0.41635 0.45531 0.49280 0.52982 0.56635 0.60248\n                         PC15    PC16    PC17    PC18    PC19    PC20   PC21\nStandard deviation     1.0118 1.00777 0.99960 0.98735 0.98305 0.97878 0.9664\nProportion of Variance 0.0353 0.03502 0.03446 0.03362 0.03332 0.03303 0.0322\nCumulative Proportion  0.6378 0.67280 0.70725 0.74087 0.77419 0.80723 0.8394\n                         PC22    PC23    PC24    PC25    PC26    PC27    PC28\nStandard deviation     0.9572 0.94582 0.94161 0.68200 0.67419 0.65242 0.55855\nProportion of Variance 0.0316 0.03085 0.03057 0.01604 0.01567 0.01468 0.01076\nCumulative Proportion  0.8710 0.90187 0.93245 0.94848 0.96416 0.97884 0.98959\n                          PC29\nStandard deviation     0.54935\nProportion of Variance 0.01041\nCumulative Proportion  1.00000\n\n\nScreeplot\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the PCA results, we selected the top 20 components and transformed the data into a new dimension-reduced dataset. K = 3 We only show PC4 vs. PC5 which has better clustering effect.\n\n\n\n\n\n\n\n\n\n\n\n\n[1] \"data.frame\"\n\n\n'data.frame':   2736 obs. of  21 variables:\n $ PC1    : num  -1.618 2.303 -1.906 -0.659 -0.748 ...\n $ PC2    : num  -0.0134 0.1581 -1.7757 -2.262 -1.5602 ...\n $ PC3    : num  -1.614 -0.486 0.561 0.893 -0.377 ...\n $ PC4    : num  -1.29 1.56 -1.73 1.01 1.09 ...\n $ PC5    : num  0.404 -0.536 -0.407 1.041 2.203 ...\n $ PC6    : num  -0.96 1.812 0.079 -0.913 0.682 ...\n $ PC7    : num  1.057 1.459 0.535 -0.742 -0.909 ...\n $ PC8    : num  2.058 -1.465 0.66 0.256 1.098 ...\n $ PC9    : num  -0.606 -0.384 0.438 0.212 -0.327 ...\n $ PC10   : num  1.141 -1.265 -0.661 -0.758 -0.473 ...\n $ PC11   : num  -2.053 1.025 0.773 -0.427 1.428 ...\n $ PC12   : num  0.966 -0.285 -0.117 0.762 0.114 ...\n $ PC13   : num  1.661 -1.075 -0.494 0.452 -0.832 ...\n $ PC14   : num  -0.773 -1.663 -0.626 0.786 0.347 ...\n $ PC15   : num  -0.966 -2.056 -1.999 1.5 -0.49 ...\n $ PC16   : num  -3.661 -1.482 1.592 -0.655 -0.43 ...\n $ PC17   : num  -1.07 -0.515 0.201 -0.833 0.294 ...\n $ PC18   : num  0.281 0.361 0.249 1.873 -0.798 ...\n $ PC19   : num  -1.247 0.226 -0.51 -0.435 2.02 ...\n $ PC20   : num  -0.51 -1.383 -0.688 1.241 -1.5 ...\n $ Cluster: Factor w/ 3 levels \"1\",\"2\",\"3\": 2 1 2 3 3 2 3 1 2 2 ...\n\n\nNext, by PCA Loading plot, we can interpret the importance of features in reducing dimensionality while retaining essential information. The first 5 principal components (PCs) are selected ([, 1:5]), which means only the top five components are retained.\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we are going to figure out the characteristics of 3 cluster.\nFirst, calculate the mean of each cluster in PCA.\n\n\n# A tibble: 3 × 41\n  Cluster PC1_mean PC1_sd PC2_mean PC2_sd PC3_mean PC3_sd PC4_mean PC4_sd\n  &lt;fct&gt;      &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n1 1        -0.457    1.16  0.305     1.19 -0.518     1.16    1.11   0.808\n2 2        -0.0120   1.20 -0.00278   1.22  0.222     1.18   -0.561  1.06 \n3 3         0.475    1.24 -0.293     1.19 -0.00483   1.14    0.203  0.815\n# ℹ 32 more variables: PC5_mean &lt;dbl&gt;, PC5_sd &lt;dbl&gt;, PC6_mean &lt;dbl&gt;,\n#   PC6_sd &lt;dbl&gt;, PC7_mean &lt;dbl&gt;, PC7_sd &lt;dbl&gt;, PC8_mean &lt;dbl&gt;, PC8_sd &lt;dbl&gt;,\n#   PC9_mean &lt;dbl&gt;, PC9_sd &lt;dbl&gt;, PC10_mean &lt;dbl&gt;, PC10_sd &lt;dbl&gt;,\n#   PC11_mean &lt;dbl&gt;, PC11_sd &lt;dbl&gt;, PC12_mean &lt;dbl&gt;, PC12_sd &lt;dbl&gt;,\n#   PC13_mean &lt;dbl&gt;, PC13_sd &lt;dbl&gt;, PC14_mean &lt;dbl&gt;, PC14_sd &lt;dbl&gt;,\n#   PC15_mean &lt;dbl&gt;, PC15_sd &lt;dbl&gt;, PC16_mean &lt;dbl&gt;, PC16_sd &lt;dbl&gt;,\n#   PC17_mean &lt;dbl&gt;, PC17_sd &lt;dbl&gt;, PC18_mean &lt;dbl&gt;, PC18_sd &lt;dbl&gt;, …\n\n\nBelow, we visualize the mean and standard deviation of each principal component (PC). ### Plot PC by mean and Std\n\n\n [1] \"Cluster\"   \"PC1_mean\"  \"PC1_sd\"    \"PC2_mean\"  \"PC2_sd\"    \"PC3_mean\" \n [7] \"PC3_sd\"    \"PC4_mean\"  \"PC4_sd\"    \"PC5_mean\"  \"PC5_sd\"    \"PC6_mean\" \n[13] \"PC6_sd\"    \"PC7_mean\"  \"PC7_sd\"    \"PC8_mean\"  \"PC8_sd\"    \"PC9_mean\" \n[19] \"PC9_sd\"    \"PC10_mean\" \"PC10_sd\"   \"PC11_mean\" \"PC11_sd\"   \"PC12_mean\"\n[25] \"PC12_sd\"   \"PC13_mean\" \"PC13_sd\"   \"PC14_mean\" \"PC14_sd\"   \"PC15_mean\"\n[31] \"PC15_sd\"   \"PC16_mean\" \"PC16_sd\"   \"PC17_mean\" \"PC17_sd\"   \"PC18_mean\"\n[37] \"PC18_sd\"   \"PC19_mean\" \"PC19_sd\"   \"PC20_mean\" \"PC20_sd\"  \n\n\n\n\n\n\n\n\n\n\n\n\nBelow is a visualization where we can observe the distribution of categorical variables in each cluster."
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#building-correlation-matrix-pairs-method",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#building-correlation-matrix-pairs-method",
    "title": "Hands-on Exercise 5",
    "section": "Building Correlation Matrix: pairs() method",
    "text": "Building Correlation Matrix: pairs() method\n\nBuilding a basic correlation matrix\n\npairs(wine[,1:11])\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\n\n\n\n\n\nDrawing the lower corner\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\n\n\n\n\n\nIncluding with correlation coefficients\n\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#visualising-correlation-matrix-ggcormat",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#visualising-correlation-matrix-ggcormat",
    "title": "Hands-on Exercise 5",
    "section": "Visualising Correlation Matrix: ggcormat()",
    "text": "Visualising Correlation Matrix: ggcormat()\n\nThe basic plot\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p &lt; 0.05\"\n)\n\n\n\n\n\n\n\n\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#building-multiple-plots",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#building-multiple-plots",
    "title": "Hands-on Exercise 5",
    "section": "Building multiple plots",
    "text": "Building multiple plots\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                          tl.srt = 40,  # 調整標籤角度\n                         tl.cex = 0.6  ),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#visualising-correlation-matrix-using-corrplot-package",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#visualising-correlation-matrix-using-corrplot-package",
    "title": "Hands-on Exercise 5",
    "section": "Visualising Correlation Matrix using corrplot Package",
    "text": "Visualising Correlation Matrix using corrplot Package\n\nGetting started with corrplot\n\nwine.cor &lt;- cor(wine[, 1:11])\ncorrplot(wine.cor)\n\n\n\n\n\n\n\n\n\n\nWorking with visual geometrics\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\n\nWorking with layout\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nWorking with mixed layout\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nCombining corrgram with the significant test\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\n\n\n\n\n\nReorder a corrgram\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nReordering a correlation matrix using hclust\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set-1",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set-1",
    "title": "Hands-on Exercise 5",
    "section": "Importing and Preparing The Data Set",
    "text": "Importing and Preparing The Data Set\n\nImporting the data set\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\n\n\nPreparing the data\n\nrow.names(wh) &lt;- wh$Country\n\n\n\nTransforming the data frame into a matrix\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-4",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-4",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(treemap, treemapify, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex5/In-class_Ex4.html",
    "href": "In-class_Ex/In-class_Ex5/In-class_Ex4.html",
    "title": "In-class exercise 4",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidymodels, ggstatsplot, tidyverse) \n\n\n#| message: false\n#| warning: false\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = FALSE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex5/In-class_Ex4.html#getting-started",
    "href": "In-class_Ex/In-class_Ex5/In-class_Ex4.html#getting-started",
    "title": "In-class exercise 4",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidymodels, ggstatsplot, tidyverse) \n\n\n#| message: false\n#| warning: false\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = FALSE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex5/In-class_Ex5.html",
    "href": "In-class_Ex/In-class_Ex5/In-class_Ex5.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "pacman::p_load(tidyverse, readxl, SmartEDA, easystats, gtsummary)\n\nImporting Data\n\ncar_resale&lt;- read_xls(\"data/ToyotaCorolla.xls\", \"data\")\n\n\nsummary(car_resale)\n\n       Id            Model               Price         Age_08_04    \n Min.   :   1.0   Length:1436        Min.   : 4350   Min.   : 1.00  \n 1st Qu.: 361.8   Class :character   1st Qu.: 8450   1st Qu.:44.00  \n Median : 721.5   Mode  :character   Median : 9900   Median :61.00  \n Mean   : 721.6                      Mean   :10731   Mean   :55.95  \n 3rd Qu.:1081.2                      3rd Qu.:11950   3rd Qu.:70.00  \n Max.   :1442.0                      Max.   :32500   Max.   :80.00  \n   Mfg_Month         Mfg_Year          KM         Quarterly_Tax   \n Min.   : 1.000   Min.   :1998   Min.   :     1   Min.   : 19.00  \n 1st Qu.: 3.000   1st Qu.:1998   1st Qu.: 43000   1st Qu.: 69.00  \n Median : 5.000   Median :1999   Median : 63390   Median : 85.00  \n Mean   : 5.549   Mean   :2000   Mean   : 68533   Mean   : 87.12  \n 3rd Qu.: 8.000   3rd Qu.:2001   3rd Qu.: 87021   3rd Qu.: 85.00  \n Max.   :12.000   Max.   :2004   Max.   :243000   Max.   :283.00  \n     Weight     Guarantee_Period    HP_Bin             CC_bin         \n Min.   :1000   Min.   : 3.000   Length:1436        Length:1436       \n 1st Qu.:1040   1st Qu.: 3.000   Class :character   Class :character  \n Median :1070   Median : 3.000   Mode  :character   Mode  :character  \n Mean   :1072   Mean   : 3.815                                        \n 3rd Qu.:1085   3rd Qu.: 3.000                                        \n Max.   :1615   Max.   :36.000                                        \n     Doors           Gears         Cylinders  Fuel_Type        \n Min.   :2.000   Min.   :3.000   Min.   :4   Length:1436       \n 1st Qu.:3.000   1st Qu.:5.000   1st Qu.:4   Class :character  \n Median :4.000   Median :5.000   Median :4   Mode  :character  \n Mean   :4.033   Mean   :5.026   Mean   :4                     \n 3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:4                     \n Max.   :5.000   Max.   :6.000   Max.   :4                     \n    Color             Met_Color        Automatic       Mfr_Guarantee   \n Length:1436        Min.   :0.0000   Min.   :0.00000   Min.   :0.0000  \n Class :character   1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000  \n Mode  :character   Median :1.0000   Median :0.00000   Median :0.0000  \n                    Mean   :0.6748   Mean   :0.05571   Mean   :0.4095  \n                    3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000  \n                    Max.   :1.0000   Max.   :1.00000   Max.   :1.0000  \n BOVAG_Guarantee       ABS            Airbag_1         Airbag_2     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.0000   Median :1.0000   Median :1.0000  \n Mean   :0.8955   Mean   :0.8134   Mean   :0.9708   Mean   :0.7228  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n     Airco        Automatic_airco   Boardcomputer      CD_Player     \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :0.00000   Median :0.0000   Median :0.0000  \n Mean   :0.5084   Mean   :0.05641   Mean   :0.2946   Mean   :0.2187  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.00000   Max.   :1.0000   Max.   :1.0000  \n  Central_Lock    Powered_Windows Power_Steering       Radio       \n Min.   :0.0000   Min.   :0.000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.000   Median :1.0000   Median :0.0000  \n Mean   :0.5801   Mean   :0.562   Mean   :0.9777   Mean   :0.1462  \n 3rd Qu.:1.0000   3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.000   Max.   :1.0000   Max.   :1.0000  \n   Mistlamps      Sport_Model     Backseat_Divider  Metallic_Rim   \n Min.   :0.000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.000   1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :0.000   Median :0.0000   Median :1.0000   Median :0.0000  \n Mean   :0.257   Mean   :0.3001   Mean   :0.7702   Mean   :0.2047  \n 3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Radio_cassette      Tow_Bar      \n Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000  \n Mean   :0.1455   Mean   :0.2779  \n 3rd Qu.:0.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000  \n\n\n\nglimpse(car_resale)\n\nRows: 1,436\nColumns: 38\n$ Id               &lt;dbl&gt; 81, 1, 2, 3, 4, 5, 6, 7, 8, 44, 45, 46, 47, 49, 51, 6…\n$ Model            &lt;chr&gt; \"TOYOTA Corolla 1.6 5drs 1 4/5-Doors\", \"TOYOTA Coroll…\n$ Price            &lt;dbl&gt; 18950, 13500, 13750, 13950, 14950, 13750, 12950, 1690…\n$ Age_08_04        &lt;dbl&gt; 25, 23, 23, 24, 26, 30, 32, 27, 30, 27, 22, 23, 27, 2…\n$ Mfg_Month        &lt;dbl&gt; 8, 10, 10, 9, 7, 3, 1, 6, 3, 6, 11, 10, 6, 11, 11, 11…\n$ Mfg_Year         &lt;dbl&gt; 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,…\n$ KM               &lt;dbl&gt; 20019, 46986, 72937, 41711, 48000, 38500, 61000, 9461…\n$ Quarterly_Tax    &lt;dbl&gt; 100, 210, 210, 210, 210, 210, 210, 210, 210, 234, 234…\n$ Weight           &lt;dbl&gt; 1180, 1165, 1165, 1165, 1165, 1170, 1170, 1245, 1245,…\n$ Guarantee_Period &lt;dbl&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,…\n$ HP_Bin           &lt;chr&gt; \"100-120\", \"&lt; 100\", \"&lt; 100\", \"&lt; 100\", \"&lt; 100\", \"&lt; 100…\n$ CC_bin           &lt;chr&gt; \"1600\", \"&gt;1600\", \"&gt;1600\", \"&gt;1600\", \"&gt;1600\", \"&gt;1600\", …\n$ Doors            &lt;dbl&gt; 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 3, 3,…\n$ Gears            &lt;dbl&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n$ Cylinders        &lt;dbl&gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,…\n$ Fuel_Type        &lt;chr&gt; \"Petrol\", \"Diesel\", \"Diesel\", \"Diesel\", \"Diesel\", \"Di…\n$ Color            &lt;chr&gt; \"Blue\", \"Blue\", \"Silver\", \"Blue\", \"Black\", \"Black\", \"…\n$ Met_Color        &lt;dbl&gt; 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,…\n$ Automatic        &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Mfr_Guarantee    &lt;dbl&gt; 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,…\n$ BOVAG_Guarantee  &lt;dbl&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ ABS              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airbag_1         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airbag_2         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airco            &lt;dbl&gt; 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Automatic_airco  &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,…\n$ Boardcomputer    &lt;dbl&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ CD_Player        &lt;dbl&gt; 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1,…\n$ Central_Lock     &lt;dbl&gt; 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Powered_Windows  &lt;dbl&gt; 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Power_Steering   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Radio            &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Mistlamps        &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Sport_Model      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,…\n$ Backseat_Divider &lt;dbl&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Metallic_Rim     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Radio_cassette   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Tow_Bar          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n\n\n\nlist(car_resale)\n\n[[1]]\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\nData Overview\n\ncar_resale %&gt;%\n  ExpData(type =1)\n\n                                          Descriptions     Value\n1                                   Sample size (nrow)      1436\n2                              No. of variables (ncol)        38\n3                    No. of numeric/interger variables        33\n4                              No. of factor variables         0\n5                                No. of text variables         5\n6                             No. of logical variables         0\n7                          No. of identifier variables         1\n8                                No. of date variables         0\n9             No. of zero variance variables (uniform)         1\n10               %. of variables having complete cases 100% (38)\n11   %. of variables having &gt;0% and &lt;50% missing cases    0% (0)\n12 %. of variables having &gt;=50% and &lt;90% missing cases    0% (0)\n13          %. of variables having &gt;=90% missing cases    0% (0)\n\n\n\ncar_resale %&gt;%\n  ExpData(type =2)\n\n   Index    Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1      1               Id       numeric     1436             0              0\n2      2            Model     character     1436             0              0\n3      3            Price       numeric     1436             0              0\n4      4        Age_08_04       numeric     1436             0              0\n5      5        Mfg_Month       numeric     1436             0              0\n6      6         Mfg_Year       numeric     1436             0              0\n7      7               KM       numeric     1436             0              0\n8      8    Quarterly_Tax       numeric     1436             0              0\n9      9           Weight       numeric     1436             0              0\n10    10 Guarantee_Period       numeric     1436             0              0\n11    11           HP_Bin     character     1436             0              0\n12    12           CC_bin     character     1436             0              0\n13    13            Doors       numeric     1436             0              0\n14    14            Gears       numeric     1436             0              0\n15    15        Cylinders       numeric     1436             0              0\n16    16        Fuel_Type     character     1436             0              0\n17    17            Color     character     1436             0              0\n18    18        Met_Color       numeric     1436             0              0\n19    19        Automatic       numeric     1436             0              0\n20    20    Mfr_Guarantee       numeric     1436             0              0\n21    21  BOVAG_Guarantee       numeric     1436             0              0\n22    22              ABS       numeric     1436             0              0\n23    23         Airbag_1       numeric     1436             0              0\n24    24         Airbag_2       numeric     1436             0              0\n25    25            Airco       numeric     1436             0              0\n26    26  Automatic_airco       numeric     1436             0              0\n27    27    Boardcomputer       numeric     1436             0              0\n28    28        CD_Player       numeric     1436             0              0\n29    29     Central_Lock       numeric     1436             0              0\n30    30  Powered_Windows       numeric     1436             0              0\n31    31   Power_Steering       numeric     1436             0              0\n32    32            Radio       numeric     1436             0              0\n33    33        Mistlamps       numeric     1436             0              0\n34    34      Sport_Model       numeric     1436             0              0\n35    35 Backseat_Divider       numeric     1436             0              0\n36    36     Metallic_Rim       numeric     1436             0              0\n37    37   Radio_cassette       numeric     1436             0              0\n38    38          Tow_Bar       numeric     1436             0              0\n   No_of_distinct_values\n1                   1436\n2                    372\n3                    236\n4                     77\n5                     12\n6                      7\n7                   1263\n8                     13\n9                     59\n10                     9\n11                     3\n12                     3\n13                     4\n14                     4\n15                     1\n16                     3\n17                    10\n18                     2\n19                     2\n20                     2\n21                     2\n22                     2\n23                     2\n24                     2\n25                     2\n26                     2\n27                     2\n28                     2\n29                     2\n30                     2\n31                     2\n32                     2\n33                     2\n34                     2\n35                     2\n36                     2\n37                     2\n38                     2\n\n\n\nsummary1 &lt;- car_resale %&gt;%\n  ExpData(type = 1)\n\n\ncolnames(car_resale)\n\n [1] \"Id\"               \"Model\"            \"Price\"            \"Age_08_04\"       \n [5] \"Mfg_Month\"        \"Mfg_Year\"         \"KM\"               \"Quarterly_Tax\"   \n [9] \"Weight\"           \"Guarantee_Period\" \"HP_Bin\"           \"CC_bin\"          \n[13] \"Doors\"            \"Gears\"            \"Cylinders\"        \"Fuel_Type\"       \n[17] \"Color\"            \"Met_Color\"        \"Automatic\"        \"Mfr_Guarantee\"   \n[21] \"BOVAG_Guarantee\"  \"ABS\"              \"Airbag_1\"         \"Airbag_2\"        \n[25] \"Airco\"            \"Automatic_airco\"  \"Boardcomputer\"    \"CD_Player\"       \n[29] \"Central_Lock\"     \"Powered_Windows\"  \"Power_Steering\"   \"Radio\"           \n[33] \"Mistlamps\"        \"Sport_Model\"      \"Backseat_Divider\" \"Metallic_Rim\"    \n[37] \"Radio_cassette\"   \"Tow_Bar\"         \n\n\n\ncol &lt;- c(\"Mfg_Month\", \"HP_Bin\", \"CC_bin\", \"Doors\", \"Gears\",\n         \"Cylinders\", \"Fuel_Type\", \"Color\", \"Met_Color\", \"Automatic\",\n         \"Mfr_Guarantee\", \"BOVAG_Guarantee\", \"ABS\", \"Airbag_1\",\n         \"Airbag_2\", \"Airco\", \"Automatic_airco\", \"Automatic_airco\", \n         \"Boardcomputer\", \"CD_Player\", \"Central_Lock\", \"Powered_Windows\",\n         \"Power_Steering\", \"Radio\",\"Mistlamps\", \"Sport_Model\", \"Backseat_Divider\",\n         \"Metallic_Rim\", \"Radio_cassette\", \"Tow_Bar\")\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \"data\") %&gt;%\n  mutate(Id = as.character(Id)) %&gt;%\n  mutate(across(all_of(col), as.factor))\n\n\ncar_resale %&gt;%\n  ExpNumViz(target= NULL, nlim=10, Page =c(2,2))\n\n$`0`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncar_resale %&gt;%\n  ExpNumViz(target= \"Price\", nlim=10, Page =c(2,2))\n\n$`0`\n\n\n\n\n\n\n\n\n\n\ncar_resale %&gt;%\n  ExpCatViz(target= NULL, col =\"sky blue\", clim=10, margin=2, Page =c(4,4), sample=16)\n\n$`0`"
  }
]