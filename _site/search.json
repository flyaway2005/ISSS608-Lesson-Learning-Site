[
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-Lesson Learning Site",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.\nWebsite owner: Chang Fang Yu\nOn this website, you will find her learning journey in ISSS608 Visual Analytics and Applications.\n\n\n\nThe picture sources from zh.pngtree.com"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-ridgeline-plot",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-ridgeline-plot",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)               \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)      \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)     \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "p &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactivity",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactivity",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "exam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)               \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)      \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)     \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "DT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on Exercise 3",
    "section": "Getting started",
    "text": "Getting started\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\nImporting the data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on Exercise 3",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\nBuilding a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\nBuilding the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "title": "Hands-on Exercise 3",
    "section": "Animated Data Visualisation: plotly",
    "text": "Animated Data Visualisation: plotly\n\nBuilding an animated bubble plot: ggplotly() method\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\nBuilding an animated bubble plot: plot_ly() method\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-1",
    "title": "Hands-on Exercise 4",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstalling and launching R packages\n\npacman::p_load(ggstatsplot, tidyverse, qqplotr)\n\n\n\nImporting data\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\nSignificant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\n\nSignificant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-2",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-2",
    "title": "Hands-on Exercise 4",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(readxl, performance, parameters, see)\n\n\nImporting Excel file: readxl methods\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\n\nMultiple Regression Model using lm()\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nModel Diagnostic: checking for multicolinearity:\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: checking normality assumption\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\ncheck_n &lt;- check_normality(model1)\nplot(check_n)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: Check model for homogeneity of variances\n\ncheck_h &lt;- check_heteroscedasticity(model1)\nplot(check_h)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: Complete check\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\n\n\nVisualising Regression Parameters: see methods\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\n\nVisualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-3",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-3",
    "title": "Hands-on Exercise 4",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstalling and loading the packages\n\npacman::p_load(plotly, crosstalk, DT, \n               ggdist, ggridges, colorspace,\n               gganimate, tidyverse)\n\n\n\nData import\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\nThe plotThe code\n\n\n\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n\n\nPlotting standard error bars of point estimates\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"cadetblue4\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\nPlotting confidence interval of point estimates\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"cadetblue4\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates with interactive error bars\n\nOriginal ExerciseSelf-Exercising\n\n\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"cadetblue4\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"coral2\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1), plot.title = element_text(size = 9, face = \"bold\")) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntransposed &lt;- my_sum %&gt;%\n  pivot_longer(cols = -RACE, names_to = \"Metric\", values_to = \"Value\") %&gt;%\n  pivot_wider(names_from = RACE, values_from = Value)\n\nggplotly(\n  ggplot(shared_df) +\n    geom_errorbar(aes(\n      x = reorder(RACE, -mean),\n      ymin = mean - 2.58 * se, \n      ymax = mean + 2.58 * se), \n      width = 0.2, \n      colour = \"cadetblue4\", \n      alpha = 0.9, \n      size = 0.5) +\n    geom_point(aes(\n      x = RACE, \n      y = mean, \n      text = paste(\"Race:\", `RACE`, \n                   \"&lt;br&gt;N:\", `n`,\n                   \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                   \"&lt;br&gt;99% CI:[\", \n                   round((mean - 2.58 * se), digits = 2), \",\",\n                   round((mean + 2.58 * se), digits = 2), \"]\")),\n      stat = \"identity\", \n      color = \"coral2\", \n      size = 1.5, \n      alpha = 1) + \n    xlab(\"Race\") + \n    ylab(\"Average Scores\") + \n    theme_minimal() +\n    theme(\n      axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1),\n      plot.title = element_text(size = 9, face = \"bold\")) +\n    ggtitle(\"99% Confidence interval of average maths scores by race\"), \n  tooltip = \"text\"\n)\n\n\n\n\ndatatable(transposed,\n          rownames = FALSE,\n          options = list(pageLength = 5, scrollX = TRUE))"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-ggdist-package",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-ggdist-package",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Uncertainty: ggdist package",
    "text": "Visualising Uncertainty: ggdist package\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_halfeye() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot + Halfeye\")\n\n\n\n\n\n\n\n\n\n95% Confidence level99% Confidence level\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS, color = RACE)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi, point_color = \"coral2\") +\n  labs(\n    title = \"Visualising 95% confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS, color = RACE)) +\n  stat_pointinterval(.width = 0.99,\n  .point = median,\n  .interval = qi, point_color = \"coral2\") +\n  labs(\n    title = \"Visualising 99% confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_eye(\n    show.legend = FALSE, slab_alpha = 0.5  ) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\ndevtools::install_github(\"wilkelab/ungeviz\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nset.seed(123) \n\nsummary_data &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarize(yintercept = mean(MATHS))\n\nggplot(data = exam, aes(x = factor(RACE), y = MATHS)) +\n  geom_point(position = position_jitter(height = 0.3, width = 0.05),\n             size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hline(data = summary_data, aes(yintercept = yintercept, group = RACE),\n             color = \"#D55E00\", size = 1) +\n  theme_bw() +\n  transition_states(RACE, transition_length = 1, state_length = 3)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#installing-and-launching-r-packages-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#installing-and-launching-r-packages-1",
    "title": "Hands-on Exercise 4",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods",
    "text": "FunnelPlotR methods\n\nFunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05)   \n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on Exercise 4",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods-1",
    "title": "Hands-on Exercise 4",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nPlotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position.inside = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html",
    "title": "In-class exercise 4",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidymodels, ggstatsplot, tidyverse) \n\n\n#| message: false\n#| warning: false\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = FALSE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#getting-started",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#getting-started",
    "title": "In-class exercise 4",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidymodels, ggstatsplot, tidyverse) \n\n\n#| message: false\n#| warning: false\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = FALSE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In this exercise, we are going to utilize The Ship Performance Clustering Dataset to perform a clustering analysis. This dataset comproses numerical and categorical features representing different ship types, operational characteristics and other facters, enabling the segmentation of vessels based on key performance metrics, providing insights into their efficiency, cost-effectiveness and operational behaviors.\n\n\nThis analysis was conducted by R Studio, leveraging various statistical and visualization packages to facilitate data preprocessing, clustering, and result interpretation. The following R packages were employed:\n\n\n\nThe Ship Performance Clustering\n\n\n\n\n\n\nData Information\n\n\n\nGlimpse() shows it consists of 2736 rows and 18 columns, including 1 date type, 5 categorical type, and 12 numerical type. By Datatable, We can check the detail of the dataset.\n\nDatatable\n\n\n\n\n&lt;div style=\"max-height: 250px; overflow-y: auto;\"&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nChecking for Duplicates and Missing Values Duplicates\n\n\n# A tibble: 0 × 18\n# ℹ 18 variables: Date &lt;date&gt;, Ship_Type &lt;chr&gt;, Route_Type &lt;chr&gt;,\n#   Engine_Type &lt;chr&gt;, Maintenance_Status &lt;chr&gt;, Speed_Over_Ground_knots &lt;dbl&gt;,\n#   Engine_Power_kW &lt;dbl&gt;, Distance_Traveled_nm &lt;dbl&gt;, Draft_meters &lt;dbl&gt;,\n#   Weather_Condition &lt;chr&gt;, Cargo_Weight_tons &lt;dbl&gt;,\n#   Operational_Cost_USD &lt;dbl&gt;, Revenue_per_Voyage_USD &lt;dbl&gt;,\n#   Turnaround_Time_hours &lt;dbl&gt;, Efficiency_nm_per_kWh &lt;dbl&gt;,\n#   Seasonal_Impact_Score &lt;dbl&gt;, Weekly_Voyage_Count &lt;dbl&gt;, …\n\n\nMissing Values\n\n\n[1] 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the box plot, we can check there is no outliers existng in the data set.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4.1.1. Drop ‘Date’ variable.\n\n\n\n\n\n\nCheck Result\n\n\n\n\n\n\n\n\n\n\nElbow MethodSilhouette MethodVisualize PC 1 vs.PC 2Visualize PC 3 vs.PC 4Visualize PC 2 vs.PC 3Visualize PC 4 vs.PC 5t-SNE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion of 5-1: k value may be 4 or 5\n\n\nResult\n\n\nImportance of components:\n                           PC1     PC2     PC3    PC4     PC5     PC6     PC7\nStandard deviation     1.22931 1.22052 1.17044 1.1595 1.14545 1.12314 1.08331\nProportion of Variance 0.05597 0.05517 0.05074 0.0498 0.04859 0.04672 0.04347\nCumulative Proportion  0.05597 0.11114 0.16188 0.2117 0.26027 0.30699 0.35046\n                           PC8     PC9    PC10    PC11    PC12    PC13    PC14\nStandard deviation     1.06506 1.05634 1.04087 1.03311 1.02705 1.01550 1.01142\nProportion of Variance 0.04201 0.04133 0.04013 0.03953 0.03907 0.03819 0.03789\nCumulative Proportion  0.39247 0.43380 0.47393 0.51346 0.55253 0.59072 0.62861\n                          PC15    PC16    PC17    PC18    PC19    PC20    PC21\nStandard deviation     1.00846 0.99455 0.98720 0.98076 0.97046 0.96342 0.95769\nProportion of Variance 0.03767 0.03663 0.03609 0.03563 0.03488 0.03438 0.03397\nCumulative Proportion  0.66627 0.70291 0.73900 0.77463 0.80951 0.84389 0.87786\n                         PC22    PC23    PC24    PC25    PC26   PC27\nStandard deviation     0.9467 0.93890 0.67589 0.66981 0.55879 0.5499\nProportion of Variance 0.0332 0.03265 0.01692 0.01662 0.01156 0.0112\nCumulative Proportion  0.9111 0.94370 0.96062 0.97724 0.98880 1.0000\n\n\nScreeplot\n\n\n\n\n\n\n\n\n\nPCA Plot\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the PCA results, we selected the top 20 components and transformed the data into a new dimension-reduced dataset.\n\n\n&lt;div style=\"max-height: 250px; overflow-y: auto;\"&gt;\n\n\n'data.frame':   2736 obs. of  20 variables:\n $ PC1 : num  1.835 -1.339 -0.118 -1.529 -0.606 ...\n $ PC2 : num  -1.598 0.834 -1.828 -1.362 -1.452 ...\n $ PC3 : num  0.961 -1.882 2.154 -0.646 -1.556 ...\n $ PC4 : num  -0.889 0.478 0.13 -0.246 -1.69 ...\n $ PC5 : num  -0.794 1.905 0.182 -1.284 0.257 ...\n $ PC6 : num  1.046 1.503 0.519 -0.792 -0.937 ...\n $ PC7 : num  -2.001 1.429 -0.611 -0.219 -0.905 ...\n $ PC8 : num  -1.379 0.825 0.934 0.877 0.346 ...\n $ PC9 : num  -0.2691 -0.397 0.2328 -0.0644 -0.0901 ...\n $ PC10: num  -2.362 1.222 0.56 -0.761 1.095 ...\n $ PC11: num  -1.1393 0.2342 0.4353 -0.0279 1.4516 ...\n $ PC12: num  0.475 -1.816 -0.447 0.358 0.163 ...\n $ PC13: num  0.854 1.38 1.815 -2.095 0.528 ...\n $ PC14: num  1.3991 -0.5687 -1.5502 0.5473 0.0841 ...\n $ PC15: num  3.625 2.247 -0.73 0.488 0.402 ...\n $ PC16: num  -1.1627 0.0195 0.4865 0.6074 -0.2149 ...\n $ PC17: num  -1.273 -0.371 -0.787 -1.16 1.564 ...\n $ PC18: num  -0.225 -1.431 -0.403 0.854 -1.884 ...\n $ PC19: num  1.0271 0.0631 1.472 -0.494 -0.6557 ...\n $ PC20: num  2.291 -1.227 0.831 1.637 -0.93 ...\n\n\n      PC1                PC2                PC3               PC4          \n Min.   :-3.01432   Min.   :-2.52201   Min.   :-2.5483   Min.   :-3.11758  \n 1st Qu.:-0.95375   1st Qu.:-1.13324   1st Qu.:-0.8967   1st Qu.:-0.76571  \n Median :-0.01518   Median :-0.03101   Median :-0.1213   Median :-0.01614  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.0000   Mean   : 0.00000  \n 3rd Qu.: 0.98313   3rd Qu.: 1.10441   3rd Qu.: 0.8573   3rd Qu.: 0.71267  \n Max.   : 2.84448   Max.   : 2.81929   Max.   : 3.2911   Max.   : 3.02968  \n      PC5                PC6                PC7               PC8         \n Min.   :-2.54816   Min.   :-2.91154   Min.   :-5.4967   Min.   :-4.7123  \n 1st Qu.:-0.83269   1st Qu.:-0.83418   1st Qu.:-0.4555   1st Qu.:-0.5105  \n Median :-0.05027   Median :-0.07617   Median : 0.1109   Median : 0.1139  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.0000   Mean   : 0.0000  \n 3rd Qu.: 0.72529   3rd Qu.: 0.81106   3rd Qu.: 0.6426   3rd Qu.: 0.7021  \n Max.   : 3.47545   Max.   : 3.65659   Max.   : 3.0375   Max.   : 2.5985  \n      PC9                PC10               PC11               PC12         \n Min.   :-2.78791   Min.   :-4.49716   Min.   :-4.24851   Min.   :-3.05970  \n 1st Qu.:-0.71284   1st Qu.:-0.53510   1st Qu.:-0.58336   1st Qu.:-0.71224  \n Median :-0.05219   Median : 0.01701   Median : 0.09646   Median :-0.02285  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.00000  \n 3rd Qu.: 0.64145   3rd Qu.: 0.58894   3rd Qu.: 0.70234   3rd Qu.: 0.62601  \n Max.   : 4.64415   Max.   : 4.16975   Max.   : 2.99947   Max.   : 4.30909  \n      PC13               PC14               PC15               PC16          \n Min.   :-3.20184   Min.   :-3.82512   Min.   :-3.51685   Min.   :-3.218382  \n 1st Qu.:-0.69823   1st Qu.:-0.65207   1st Qu.:-0.67127   1st Qu.:-0.685670  \n Median : 0.02795   Median : 0.01403   Median :-0.06691   Median : 0.003533  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.000000  \n 3rd Qu.: 0.70154   3rd Qu.: 0.66895   3rd Qu.: 0.65632   3rd Qu.: 0.691608  \n Max.   : 3.43389   Max.   : 3.91623   Max.   : 4.50409   Max.   : 3.164266  \n      PC17               PC18               PC19               PC20          \n Min.   :-3.39916   Min.   :-2.92469   Min.   :-3.04433   Min.   :-3.360612  \n 1st Qu.:-0.66693   1st Qu.:-0.67153   1st Qu.:-0.68163   1st Qu.:-0.650630  \n Median : 0.01188   Median :-0.01801   Median : 0.01822   Median : 0.003185  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.000000  \n 3rd Qu.: 0.67537   3rd Qu.: 0.69284   3rd Qu.: 0.67840   3rd Qu.: 0.661154  \n Max.   : 3.11837   Max.   : 3.02732   Max.   : 3.36982   Max.   : 3.346555  \n\n\n\n\n\nWhen k=4 ::: panel-tabset # Result(k=4)\n\n\n\n   1    2    3    4 \n 136  653 1304  643 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPerforming PCA\nRead the 2736 x 27 data matrix successfully!\nOpenMP is working. 1 threads.\nUsing no_dims = 2, perplexity = 30.000000, and theta = 0.500000\nComputing input similarities...\nBuilding tree...\nDone in 0.75 seconds (sparsity = 0.044053)!\nLearning embedding...\nIteration 50: error is 82.255653 (50 iterations in 0.53 seconds)\nIteration 100: error is 82.255665 (50 iterations in 0.99 seconds)\nIteration 150: error is 82.255658 (50 iterations in 1.08 seconds)\nIteration 200: error is 82.255657 (50 iterations in 1.49 seconds)\nIteration 250: error is 82.255660 (50 iterations in 2.09 seconds)\nIteration 300: error is 4.369731 (50 iterations in 1.95 seconds)\nIteration 350: error is 4.369731 (50 iterations in 0.83 seconds)\nIteration 400: error is 3.325305 (50 iterations in 0.57 seconds)\nIteration 450: error is 3.229833 (50 iterations in 0.34 seconds)\nIteration 500: error is 3.153486 (50 iterations in 0.29 seconds)\nIteration 550: error is 3.101725 (50 iterations in 0.26 seconds)\nIteration 600: error is 3.064564 (50 iterations in 0.25 seconds)\nIteration 650: error is 3.040216 (50 iterations in 0.36 seconds)\nIteration 700: error is 3.023584 (50 iterations in 0.44 seconds)\nIteration 750: error is 3.010692 (50 iterations in 0.30 seconds)\nIteration 800: error is 2.999769 (50 iterations in 0.29 seconds)\nIteration 850: error is 2.990804 (50 iterations in 0.28 seconds)\nIteration 900: error is 2.984069 (50 iterations in 0.26 seconds)\nIteration 950: error is 2.978989 (50 iterations in 0.25 seconds)\nIteration 1000: error is 2.974716 (50 iterations in 0.34 seconds)\nFitting performed in 13.20 seconds.\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion from k-means visualization: PC4 vs. PC5 has better clustering effect. Next, by PCA Loading plot, we can interpret the importance of features in reducing dimensionality while retaining essential information. The first 5 principal components (PCs) are selected ([, 1:5]), which means only the top five components are retained.\n\n\n\n\nPlot tablePCA Loading Heat Map\n\n\n\n\n                                          PC1           PC2           PC3\nMaintenance_Status                0.128251815 -0.0162969582  2.726352e-02\nSpeed_Over_Ground_knots           0.082825284  0.0098804691 -5.416541e-02\nEngine_Power_kW                   0.044085954 -0.0078857085 -3.902556e-02\nDistance_Traveled_nm              0.028684043 -0.0399258437  2.409480e-02\nDraft_meters                     -0.019964137 -0.0213657949  3.669434e-02\nCargo_Weight_tons                -0.103848451  0.0742718018 -3.037802e-02\nOperational_Cost_USD              0.007693788 -0.1084263312  1.898286e-02\nRevenue_per_Voyage_USD           -0.034455201 -0.0308735912 -6.362718e-05\nTurnaround_Time_hours            -0.047664123  0.0153243739  4.936373e-02\nEfficiency_nm_per_kWh             0.025382708  0.0348145047 -6.270278e-02\nSeasonal_Impact_Score             0.044837953  0.0423436823  3.682325e-02\nWeekly_Voyage_Count              -0.030280077  0.0359293883 -4.860365e-02\nAverage_Load_Percentage          -0.016461658  0.0295279053 -1.385874e-01\nEngine_Type_Heavy Fuel Oil (HFO)  0.617761358 -0.0002506609  1.213406e-01\nEngine_Type_None                  0.021334576  0.1367616230 -5.872313e-02\nEngine_Type_Steam Turbine        -0.627012984 -0.0522493413 -9.410100e-02\nRoute_Type_Long-haul             -0.118353694  0.0205804217  6.073459e-01\nRoute_Type_None                   0.100258472  0.0495254310 -2.952294e-02\nRoute_Type_Short-haul             0.239215209 -0.0792175316 -4.030481e-01\nRoute_Type_Transoceanic          -0.189967054  0.0102808145 -2.017091e-01\nShip_Type_Container Ship         -0.092594465 -0.1930774074  4.425036e-01\nShip_Type_Fish Carrier           -0.101792166  0.0027647013 -3.934127e-01\nShip_Type_None                    0.060454119  0.0452967334 -6.124867e-02\nShip_Type_Tanker                  0.142104333  0.1798073632  3.478853e-03\nWeather_Condition_Moderate        0.061723243 -0.6566034405 -6.264821e-02\nWeather_Condition_None           -0.125510064 -0.0053381902 -5.505294e-02\nWeather_Condition_Rough          -0.020848497  0.6636104076  3.305222e-02\n                                          PC4          PC5\nMaintenance_Status               -0.035910630 -0.110195055\nSpeed_Over_Ground_knots           0.043366223 -0.120924666\nEngine_Power_kW                   0.022937186 -0.033649842\nDistance_Traveled_nm              0.063226529  0.002606426\nDraft_meters                      0.023401841  0.073073489\nCargo_Weight_tons                -0.006785117 -0.012877591\nOperational_Cost_USD             -0.046978006  0.012787657\nRevenue_per_Voyage_USD           -0.027347697  0.090977727\nTurnaround_Time_hours            -0.023660700 -0.020196032\nEfficiency_nm_per_kWh            -0.034389074 -0.069381689\nSeasonal_Impact_Score             0.065813927  0.104082832\nWeekly_Voyage_Count              -0.037276276  0.045686206\nAverage_Load_Percentage           0.090391287 -0.090097125\nEngine_Type_Heavy Fuel Oil (HFO) -0.257638766  0.073421974\nEngine_Type_None                  0.033232391 -0.046095819\nEngine_Type_Steam Turbine         0.223491692 -0.062954913\nRoute_Type_Long-haul              0.196181896  0.403883577\nRoute_Type_None                  -0.006314836 -0.029779566\nRoute_Type_Short-haul             0.292633083  0.053625936\nRoute_Type_Transoceanic          -0.504437242 -0.430959824\nShip_Type_Container Ship         -0.297417607 -0.254426215\nShip_Type_Fish Carrier           -0.237960989  0.608720217\nShip_Type_None                   -0.025775537 -0.014403974\nShip_Type_Tanker                  0.544776392 -0.347953090\nWeather_Condition_Moderate        0.139877121 -0.051666052\nWeather_Condition_None           -0.109429498  0.091161279\nWeather_Condition_Rough          -0.054825603 -0.016373109\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we are going to perform variable importance analysis based on the PCA (Principal Component Analysis) loadings. It aims to identify the most influential variables in the dataset by analyzing their contributions across the first five principal components (PCs). Then we select the top 10 most contributing variables before proceeding with PCA. ### 5-6. Variable importance analysis\nThe variables we select:\n\n\n [1] \"Ship_Type_Fish Carrier\"           \"Route_Type_Long-haul\"            \n [3] \"Route_Type_Transoceanic\"          \"Ship_Type_Tanker\"                \n [5] \"Engine_Type_Heavy Fuel Oil (HFO)\" \"Weather_Condition_Moderate\"      \n [7] \"Engine_Type_Steam Turbine\"        \"Weather_Condition_Rough\"         \n [9] \"Ship_Type_Container Ship\"         \"Route_Type_Short-haul\"           \n\n\n\n\n\n\nPCA result2D plot\n\n\n\n\nImportance of components:\n                          PC1    PC2    PC3    PC4    PC5    PC6     PC7\nStandard deviation     1.2151 1.2122 1.1637 1.1535 1.1337 1.1107 0.74166\nProportion of Variance 0.1477 0.1469 0.1354 0.1331 0.1285 0.1234 0.05501\nCumulative Proportion  0.1477 0.2946 0.4300 0.5631 0.6916 0.8150 0.86999\n                           PC8     PC9    PC10\nStandard deviation     0.73503 0.61952 0.61324\nProportion of Variance 0.05403 0.03838 0.03761\nCumulative Proportion  0.92401 0.96239 1.00000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe select PC 1-3 to perform PCA 3D visualization and k means"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"coral3\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#preparing-the-data",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#preparing-the-data",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-ternary-diagram-with-r",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-ternary-diagram-with-r",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"coral3\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-1",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-1",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set",
    "title": "Hands-on Exercise 5",
    "section": "Importing and Preparing The Data Set",
    "text": "Importing and Preparing The Data Set\n\nImporting the data set\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\n\n\nPreparing the data\n\nrow.names(wh) &lt;- wh$Country\n\n\n\nTransforming the data frame into a matrix\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#static-heatmap",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#static-heatmap",
    "title": "Hands-on Exercise 5",
    "section": "Static Heatmap",
    "text": "Static Heatmap\n\nheatmap() of R Stats\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#creating-interactive-heatmap",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#creating-interactive-heatmap",
    "title": "Hands-on Exercise 5",
    "section": "Creating Interactive Heatmap",
    "text": "Creating Interactive Heatmap\n\nWorking with heatmaply\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\n\n\nData trasformation\nScaling method\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\nNormalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\nPercentising method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\nManual approach\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\n\nStatistical approach\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)\n\n\n\n\n\n\n\nSeriation\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")\n\n\n\n\n\n\n\nWorking with colour palettes\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Blues)\n\n\n\n\n\n\n\nThe finishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-2",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-2",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(GGally, parallelPlot, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-on Exercise 5",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-static-parallel-coordinates-plot",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-static-parallel-coordinates-plot",
    "title": "Hands-on Exercise 5",
    "section": "Plotting Static Parallel Coordinates Plot",
    "text": "Plotting Static Parallel Coordinates Plot\n\nPlotting a simple parallel coordinates\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\n\n\n\n\n\nPlotting a parallel coordinates with boxplot\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\n\n\n\n\n\n\nParallel coordinates with facet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\n\n\n\n\n\nRotating x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\n\n\nAdjusting the rotated x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "title": "Hands-on Exercise 5",
    "section": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods",
    "text": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods\n\nThe basic plot\n\nwh &lt;- wh %&gt;%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\n\nRotate axis label\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nChanging the colour scheme\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nParallel coordinates plot with histogram\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-3",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-3",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(treemap, treemapify, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling",
    "title": "Hands-on Exercise 5",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nImporting the data set\n\nrealis2018 &lt;- read_csv(\"data/realis2018.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling-and-manipulation",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling-and-manipulation",
    "title": "Hands-on Exercise 5",
    "section": "Data Wrangling and Manipulation",
    "text": "Data Wrangling and Manipulation\n\nGrouped summaries without the Pipe\n\nrealis2018_grouped &lt;- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised &lt;- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\n\nGrouped summaries with the pipe\n\nrealis2018_summarised &lt;- realis2018 %&gt;% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %&gt;%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-with-treemap-package",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-with-treemap-package",
    "title": "Hands-on Exercise 5",
    "section": "Designing Treemap with treemap Package",
    "text": "Designing Treemap with treemap Package\n\nDesigning a static treemap\n\nrealis2018_selected &lt;- realis2018_summarised %&gt;%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")\n\n\n\nUsing the basic arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nWorking with vColor and type arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type = \"value\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThe “value” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThe “manual” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nWorking with algorithm argument\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"squarified\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nUsing sortID\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-using-treemapify-package",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-using-treemapify-package",
    "title": "Hands-on Exercise 5",
    "section": "Designing Treemap using treemapify Package",
    "text": "Designing Treemap using treemapify Package\n\nDesigning a basic treemap\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`),\n       layout = \"scol\",\n       start = \"bottomleft\") + \n  geom_treemap() +\n  scale_fill_gradient(low = \"light blue\", high = \"blue\")\n\n\n\n\n\n\n\n\n\n\nDefining hierarchy\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`),\n       start = \"topleft\") + \n  geom_treemap()\n\n\n\n\n\n\n\n\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap()\n\n\n\n\n\n\n\n\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"gray40\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"gray20\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-interactive-treemap-using-d3treer",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-interactive-treemap-using-d3treer",
    "title": "Hands-on Exercise 5",
    "section": "Designing Interactive Treemap using d3treeR",
    "text": "Designing Interactive Treemap using d3treeR\n\nInstalling d3treeR package\n\nlibrary(devtools)\ninstall_github(\"timelyportfolio/d3treeR\")\n\n\nlibrary(d3treeR)\n\n\n\nDesigning An Interactive Treemap\n\ntm &lt;- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\nd3tree(tm,rootname = \"Singapore\" )"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#overview",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#overview",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In this exercise, we are going to utilize The Ship Performance Clustering Dataset to perform a clustering analysis. This dataset comproses numerical and categorical features representing different ship types, operational characteristics and other facters, enabling the segmentation of vessels based on key performance metrics, providing insights into their efficiency, cost-effectiveness and operational behaviors.\n\n\nThis analysis was conducted by R Studio, leveraging various statistical and visualization packages to facilitate data preprocessing, clustering, and result interpretation. The following R packages were employed:\n\n\n\nThe Ship Performance Clustering"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#data-pre-processing",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#data-pre-processing",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Data Information\n\n\n\nGlimpse() shows it consists of 2736 rows and 18 columns, including 1 date type, 5 categorical type, and 12 numerical type. By Datatable, We can check the detail of the dataset.\n\nDatatable\n\n\n\n\n&lt;div style=\"max-height: 250px; overflow-y: auto;\"&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nChecking for Duplicates and Missing Values Duplicates\n\n\n# A tibble: 0 × 18\n# ℹ 18 variables: Date &lt;date&gt;, Ship_Type &lt;chr&gt;, Route_Type &lt;chr&gt;,\n#   Engine_Type &lt;chr&gt;, Maintenance_Status &lt;chr&gt;, Speed_Over_Ground_knots &lt;dbl&gt;,\n#   Engine_Power_kW &lt;dbl&gt;, Distance_Traveled_nm &lt;dbl&gt;, Draft_meters &lt;dbl&gt;,\n#   Weather_Condition &lt;chr&gt;, Cargo_Weight_tons &lt;dbl&gt;,\n#   Operational_Cost_USD &lt;dbl&gt;, Revenue_per_Voyage_USD &lt;dbl&gt;,\n#   Turnaround_Time_hours &lt;dbl&gt;, Efficiency_nm_per_kWh &lt;dbl&gt;,\n#   Seasonal_Impact_Score &lt;dbl&gt;, Weekly_Voyage_Count &lt;dbl&gt;, …\n\n\nMissing Values\n\n\n[1] 0"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysiseda",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysiseda",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "From the box plot, we can check there is no outliers existng in the data set."
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#prepare-data-for-clustering-analysis",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#prepare-data-for-clustering-analysis",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "4.1.1. Drop ‘Date’ variable.\n\n\n\n\n\n\nCheck Result"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#perform-clustering-analysis",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#perform-clustering-analysis",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Elbow MethodSilhouette MethodVisualize PC 1 vs.PC 2Visualize PC 3 vs.PC 4Visualize PC 2 vs.PC 3Visualize PC 4 vs.PC 5t-SNE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion of 5-1: k value may be 4 or 5\n\n\nResult\n\n\nImportance of components:\n                           PC1     PC2     PC3    PC4     PC5     PC6     PC7\nStandard deviation     1.22931 1.22052 1.17044 1.1595 1.14545 1.12314 1.08331\nProportion of Variance 0.05597 0.05517 0.05074 0.0498 0.04859 0.04672 0.04347\nCumulative Proportion  0.05597 0.11114 0.16188 0.2117 0.26027 0.30699 0.35046\n                           PC8     PC9    PC10    PC11    PC12    PC13    PC14\nStandard deviation     1.06506 1.05634 1.04087 1.03311 1.02705 1.01550 1.01142\nProportion of Variance 0.04201 0.04133 0.04013 0.03953 0.03907 0.03819 0.03789\nCumulative Proportion  0.39247 0.43380 0.47393 0.51346 0.55253 0.59072 0.62861\n                          PC15    PC16    PC17    PC18    PC19    PC20    PC21\nStandard deviation     1.00846 0.99455 0.98720 0.98076 0.97046 0.96342 0.95769\nProportion of Variance 0.03767 0.03663 0.03609 0.03563 0.03488 0.03438 0.03397\nCumulative Proportion  0.66627 0.70291 0.73900 0.77463 0.80951 0.84389 0.87786\n                         PC22    PC23    PC24    PC25    PC26   PC27\nStandard deviation     0.9467 0.93890 0.67589 0.66981 0.55879 0.5499\nProportion of Variance 0.0332 0.03265 0.01692 0.01662 0.01156 0.0112\nCumulative Proportion  0.9111 0.94370 0.96062 0.97724 0.98880 1.0000\n\n\nScreeplot\n\n\n\n\n\n\n\n\n\nPCA Plot\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the PCA results, we selected the top 20 components and transformed the data into a new dimension-reduced dataset.\n\n\n&lt;div style=\"max-height: 250px; overflow-y: auto;\"&gt;\n\n\n'data.frame':   2736 obs. of  20 variables:\n $ PC1 : num  1.835 -1.339 -0.118 -1.529 -0.606 ...\n $ PC2 : num  -1.598 0.834 -1.828 -1.362 -1.452 ...\n $ PC3 : num  0.961 -1.882 2.154 -0.646 -1.556 ...\n $ PC4 : num  -0.889 0.478 0.13 -0.246 -1.69 ...\n $ PC5 : num  -0.794 1.905 0.182 -1.284 0.257 ...\n $ PC6 : num  1.046 1.503 0.519 -0.792 -0.937 ...\n $ PC7 : num  -2.001 1.429 -0.611 -0.219 -0.905 ...\n $ PC8 : num  -1.379 0.825 0.934 0.877 0.346 ...\n $ PC9 : num  -0.2691 -0.397 0.2328 -0.0644 -0.0901 ...\n $ PC10: num  -2.362 1.222 0.56 -0.761 1.095 ...\n $ PC11: num  -1.1393 0.2342 0.4353 -0.0279 1.4516 ...\n $ PC12: num  0.475 -1.816 -0.447 0.358 0.163 ...\n $ PC13: num  0.854 1.38 1.815 -2.095 0.528 ...\n $ PC14: num  1.3991 -0.5687 -1.5502 0.5473 0.0841 ...\n $ PC15: num  3.625 2.247 -0.73 0.488 0.402 ...\n $ PC16: num  -1.1627 0.0195 0.4865 0.6074 -0.2149 ...\n $ PC17: num  -1.273 -0.371 -0.787 -1.16 1.564 ...\n $ PC18: num  -0.225 -1.431 -0.403 0.854 -1.884 ...\n $ PC19: num  1.0271 0.0631 1.472 -0.494 -0.6557 ...\n $ PC20: num  2.291 -1.227 0.831 1.637 -0.93 ...\n\n\n      PC1                PC2                PC3               PC4          \n Min.   :-3.01432   Min.   :-2.52201   Min.   :-2.5483   Min.   :-3.11758  \n 1st Qu.:-0.95375   1st Qu.:-1.13324   1st Qu.:-0.8967   1st Qu.:-0.76571  \n Median :-0.01518   Median :-0.03101   Median :-0.1213   Median :-0.01614  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.0000   Mean   : 0.00000  \n 3rd Qu.: 0.98313   3rd Qu.: 1.10441   3rd Qu.: 0.8573   3rd Qu.: 0.71267  \n Max.   : 2.84448   Max.   : 2.81929   Max.   : 3.2911   Max.   : 3.02968  \n      PC5                PC6                PC7               PC8         \n Min.   :-2.54816   Min.   :-2.91154   Min.   :-5.4967   Min.   :-4.7123  \n 1st Qu.:-0.83269   1st Qu.:-0.83418   1st Qu.:-0.4555   1st Qu.:-0.5105  \n Median :-0.05027   Median :-0.07617   Median : 0.1109   Median : 0.1139  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.0000   Mean   : 0.0000  \n 3rd Qu.: 0.72529   3rd Qu.: 0.81106   3rd Qu.: 0.6426   3rd Qu.: 0.7021  \n Max.   : 3.47545   Max.   : 3.65659   Max.   : 3.0375   Max.   : 2.5985  \n      PC9                PC10               PC11               PC12         \n Min.   :-2.78791   Min.   :-4.49716   Min.   :-4.24851   Min.   :-3.05970  \n 1st Qu.:-0.71284   1st Qu.:-0.53510   1st Qu.:-0.58336   1st Qu.:-0.71224  \n Median :-0.05219   Median : 0.01701   Median : 0.09646   Median :-0.02285  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.00000  \n 3rd Qu.: 0.64145   3rd Qu.: 0.58894   3rd Qu.: 0.70234   3rd Qu.: 0.62601  \n Max.   : 4.64415   Max.   : 4.16975   Max.   : 2.99947   Max.   : 4.30909  \n      PC13               PC14               PC15               PC16          \n Min.   :-3.20184   Min.   :-3.82512   Min.   :-3.51685   Min.   :-3.218382  \n 1st Qu.:-0.69823   1st Qu.:-0.65207   1st Qu.:-0.67127   1st Qu.:-0.685670  \n Median : 0.02795   Median : 0.01403   Median :-0.06691   Median : 0.003533  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.000000  \n 3rd Qu.: 0.70154   3rd Qu.: 0.66895   3rd Qu.: 0.65632   3rd Qu.: 0.691608  \n Max.   : 3.43389   Max.   : 3.91623   Max.   : 4.50409   Max.   : 3.164266  \n      PC17               PC18               PC19               PC20          \n Min.   :-3.39916   Min.   :-2.92469   Min.   :-3.04433   Min.   :-3.360612  \n 1st Qu.:-0.66693   1st Qu.:-0.67153   1st Qu.:-0.68163   1st Qu.:-0.650630  \n Median : 0.01188   Median :-0.01801   Median : 0.01822   Median : 0.003185  \n Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.00000   Mean   : 0.000000  \n 3rd Qu.: 0.67537   3rd Qu.: 0.69284   3rd Qu.: 0.67840   3rd Qu.: 0.661154  \n Max.   : 3.11837   Max.   : 3.02732   Max.   : 3.36982   Max.   : 3.346555  \n\n\n\n\n\nWhen k=4 ::: panel-tabset # Result(k=4)\n\n\n\n   1    2    3    4 \n 136  653 1304  643 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPerforming PCA\nRead the 2736 x 27 data matrix successfully!\nOpenMP is working. 1 threads.\nUsing no_dims = 2, perplexity = 30.000000, and theta = 0.500000\nComputing input similarities...\nBuilding tree...\nDone in 0.75 seconds (sparsity = 0.044053)!\nLearning embedding...\nIteration 50: error is 82.255653 (50 iterations in 0.53 seconds)\nIteration 100: error is 82.255665 (50 iterations in 0.99 seconds)\nIteration 150: error is 82.255658 (50 iterations in 1.08 seconds)\nIteration 200: error is 82.255657 (50 iterations in 1.49 seconds)\nIteration 250: error is 82.255660 (50 iterations in 2.09 seconds)\nIteration 300: error is 4.369731 (50 iterations in 1.95 seconds)\nIteration 350: error is 4.369731 (50 iterations in 0.83 seconds)\nIteration 400: error is 3.325305 (50 iterations in 0.57 seconds)\nIteration 450: error is 3.229833 (50 iterations in 0.34 seconds)\nIteration 500: error is 3.153486 (50 iterations in 0.29 seconds)\nIteration 550: error is 3.101725 (50 iterations in 0.26 seconds)\nIteration 600: error is 3.064564 (50 iterations in 0.25 seconds)\nIteration 650: error is 3.040216 (50 iterations in 0.36 seconds)\nIteration 700: error is 3.023584 (50 iterations in 0.44 seconds)\nIteration 750: error is 3.010692 (50 iterations in 0.30 seconds)\nIteration 800: error is 2.999769 (50 iterations in 0.29 seconds)\nIteration 850: error is 2.990804 (50 iterations in 0.28 seconds)\nIteration 900: error is 2.984069 (50 iterations in 0.26 seconds)\nIteration 950: error is 2.978989 (50 iterations in 0.25 seconds)\nIteration 1000: error is 2.974716 (50 iterations in 0.34 seconds)\nFitting performed in 13.20 seconds.\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion from k-means visualization: PC4 vs. PC5 has better clustering effect. Next, by PCA Loading plot, we can interpret the importance of features in reducing dimensionality while retaining essential information. The first 5 principal components (PCs) are selected ([, 1:5]), which means only the top five components are retained.\n\n\n\n\nPlot tablePCA Loading Heat Map\n\n\n\n\n                                          PC1           PC2           PC3\nMaintenance_Status                0.128251815 -0.0162969582  2.726352e-02\nSpeed_Over_Ground_knots           0.082825284  0.0098804691 -5.416541e-02\nEngine_Power_kW                   0.044085954 -0.0078857085 -3.902556e-02\nDistance_Traveled_nm              0.028684043 -0.0399258437  2.409480e-02\nDraft_meters                     -0.019964137 -0.0213657949  3.669434e-02\nCargo_Weight_tons                -0.103848451  0.0742718018 -3.037802e-02\nOperational_Cost_USD              0.007693788 -0.1084263312  1.898286e-02\nRevenue_per_Voyage_USD           -0.034455201 -0.0308735912 -6.362718e-05\nTurnaround_Time_hours            -0.047664123  0.0153243739  4.936373e-02\nEfficiency_nm_per_kWh             0.025382708  0.0348145047 -6.270278e-02\nSeasonal_Impact_Score             0.044837953  0.0423436823  3.682325e-02\nWeekly_Voyage_Count              -0.030280077  0.0359293883 -4.860365e-02\nAverage_Load_Percentage          -0.016461658  0.0295279053 -1.385874e-01\nEngine_Type_Heavy Fuel Oil (HFO)  0.617761358 -0.0002506609  1.213406e-01\nEngine_Type_None                  0.021334576  0.1367616230 -5.872313e-02\nEngine_Type_Steam Turbine        -0.627012984 -0.0522493413 -9.410100e-02\nRoute_Type_Long-haul             -0.118353694  0.0205804217  6.073459e-01\nRoute_Type_None                   0.100258472  0.0495254310 -2.952294e-02\nRoute_Type_Short-haul             0.239215209 -0.0792175316 -4.030481e-01\nRoute_Type_Transoceanic          -0.189967054  0.0102808145 -2.017091e-01\nShip_Type_Container Ship         -0.092594465 -0.1930774074  4.425036e-01\nShip_Type_Fish Carrier           -0.101792166  0.0027647013 -3.934127e-01\nShip_Type_None                    0.060454119  0.0452967334 -6.124867e-02\nShip_Type_Tanker                  0.142104333  0.1798073632  3.478853e-03\nWeather_Condition_Moderate        0.061723243 -0.6566034405 -6.264821e-02\nWeather_Condition_None           -0.125510064 -0.0053381902 -5.505294e-02\nWeather_Condition_Rough          -0.020848497  0.6636104076  3.305222e-02\n                                          PC4          PC5\nMaintenance_Status               -0.035910630 -0.110195055\nSpeed_Over_Ground_knots           0.043366223 -0.120924666\nEngine_Power_kW                   0.022937186 -0.033649842\nDistance_Traveled_nm              0.063226529  0.002606426\nDraft_meters                      0.023401841  0.073073489\nCargo_Weight_tons                -0.006785117 -0.012877591\nOperational_Cost_USD             -0.046978006  0.012787657\nRevenue_per_Voyage_USD           -0.027347697  0.090977727\nTurnaround_Time_hours            -0.023660700 -0.020196032\nEfficiency_nm_per_kWh            -0.034389074 -0.069381689\nSeasonal_Impact_Score             0.065813927  0.104082832\nWeekly_Voyage_Count              -0.037276276  0.045686206\nAverage_Load_Percentage           0.090391287 -0.090097125\nEngine_Type_Heavy Fuel Oil (HFO) -0.257638766  0.073421974\nEngine_Type_None                  0.033232391 -0.046095819\nEngine_Type_Steam Turbine         0.223491692 -0.062954913\nRoute_Type_Long-haul              0.196181896  0.403883577\nRoute_Type_None                  -0.006314836 -0.029779566\nRoute_Type_Short-haul             0.292633083  0.053625936\nRoute_Type_Transoceanic          -0.504437242 -0.430959824\nShip_Type_Container Ship         -0.297417607 -0.254426215\nShip_Type_Fish Carrier           -0.237960989  0.608720217\nShip_Type_None                   -0.025775537 -0.014403974\nShip_Type_Tanker                  0.544776392 -0.347953090\nWeather_Condition_Moderate        0.139877121 -0.051666052\nWeather_Condition_None           -0.109429498  0.091161279\nWeather_Condition_Rough          -0.054825603 -0.016373109\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we are going to perform variable importance analysis based on the PCA (Principal Component Analysis) loadings. It aims to identify the most influential variables in the dataset by analyzing their contributions across the first five principal components (PCs). Then we select the top 10 most contributing variables before proceeding with PCA. ### 5-6. Variable importance analysis\nThe variables we select:\n\n\n [1] \"Ship_Type_Fish Carrier\"           \"Route_Type_Long-haul\"            \n [3] \"Route_Type_Transoceanic\"          \"Ship_Type_Tanker\"                \n [5] \"Engine_Type_Heavy Fuel Oil (HFO)\" \"Weather_Condition_Moderate\"      \n [7] \"Engine_Type_Steam Turbine\"        \"Weather_Condition_Rough\"         \n [9] \"Ship_Type_Container Ship\"         \"Route_Type_Short-haul\"           \n\n\n\n\n\n\nPCA result2D plot\n\n\n\n\nImportance of components:\n                          PC1    PC2    PC3    PC4    PC5    PC6     PC7\nStandard deviation     1.2151 1.2122 1.1637 1.1535 1.1337 1.1107 0.74166\nProportion of Variance 0.1477 0.1469 0.1354 0.1331 0.1285 0.1234 0.05501\nCumulative Proportion  0.1477 0.2946 0.4300 0.5631 0.6916 0.8150 0.86999\n                           PC8     PC9    PC10\nStandard deviation     0.73503 0.61952 0.61324\nProportion of Variance 0.05403 0.03838 0.03761\nCumulative Proportion  0.92401 0.96239 1.00000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe select PC 1-3 to perform PCA 3D visualization and k means"
  }
]