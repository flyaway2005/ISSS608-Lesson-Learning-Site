[
  {
    "objectID": "Takehome_Ex/Take-home_Ex2/take-home_Ex02.html",
    "href": "Takehome_Ex/Take-home_Ex2/take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "pacman::p_load(plotly, dplyr, scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)\n\n\nImport Data\n\nimport &lt;- read_excel(\"data/trade.xlsx\", sheet = \"T1\", skip = 10)\n\n\nhead(import)\n\n# A tibble: 6 × 266\n  `Data Series`       `2025 Jan` `2024 Dec` `2024 Nov` `2024 Oct` `2024 Sep`\n  &lt;chr&gt;                    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1 Total All Markets       54746.    56136.      51802.    51416.     49068. \n2 America                  6923.     7874.       7880.     8078.      9112  \n3 Antigua And Barbuda         0         0           0         0          0  \n4 Argentina                   4        12.5       116.        4.1        8.1\n5 Bahamas                     0         8.1         0         0          0  \n6 Bermuda                     0         0           0         0          0  \n# ℹ 260 more variables: `2024 Aug` &lt;dbl&gt;, `2024 Jul` &lt;dbl&gt;, `2024 Jun` &lt;dbl&gt;,\n#   `2024 May` &lt;dbl&gt;, `2024 Apr` &lt;dbl&gt;, `2024 Mar` &lt;dbl&gt;, `2024 Feb` &lt;dbl&gt;,\n#   `2024 Jan` &lt;dbl&gt;, `2023 Dec` &lt;dbl&gt;, `2023 Nov` &lt;dbl&gt;, `2023 Oct` &lt;dbl&gt;,\n#   `2023 Sep` &lt;dbl&gt;, `2023 Aug` &lt;dbl&gt;, `2023 Jul` &lt;dbl&gt;, `2023 Jun` &lt;dbl&gt;,\n#   `2023 May` &lt;dbl&gt;, `2023 Apr` &lt;dbl&gt;, `2023 Mar` &lt;dbl&gt;, `2023 Feb` &lt;dbl&gt;,\n#   `2023 Jan` &lt;dbl&gt;, `2022 Dec` &lt;dbl&gt;, `2022 Nov` &lt;dbl&gt;, `2022 Oct` &lt;dbl&gt;,\n#   `2022 Sep` &lt;dbl&gt;, `2022 Aug` &lt;dbl&gt;, `2022 Jul` &lt;dbl&gt;, `2022 Jun` &lt;dbl&gt;, …\n\n\n\nkable(head(import))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Series\n2025 Jan\n2024 Dec\n2024 Nov\n2024 Oct\n2024 Sep\n2024 Aug\n2024 Jul\n2024 Jun\n2024 May\n2024 Apr\n2024 Mar\n2024 Feb\n2024 Jan\n2023 Dec\n2023 Nov\n2023 Oct\n2023 Sep\n2023 Aug\n2023 Jul\n2023 Jun\n2023 May\n2023 Apr\n2023 Mar\n2023 Feb\n2023 Jan\n2022 Dec\n2022 Nov\n2022 Oct\n2022 Sep\n2022 Aug\n2022 Jul\n2022 Jun\n2022 May\n2022 Apr\n2022 Mar\n2022 Feb\n2022 Jan\n2021 Dec\n2021 Nov\n2021 Oct\n2021 Sep\n2021 Aug\n2021 Jul\n2021 Jun\n2021 May\n2021 Apr\n2021 Mar\n2021 Feb\n2021 Jan\n2020 Dec\n2020 Nov\n2020 Oct\n2020 Sep\n2020 Aug\n2020 Jul\n2020 Jun\n2020 May\n2020 Apr\n2020 Mar\n2020 Feb\n2020 Jan\n2019 Dec\n2019 Nov\n2019 Oct\n2019 Sep\n2019 Aug\n2019 Jul\n2019 Jun\n2019 May\n2019 Apr\n2019 Mar\n2019 Feb\n2019 Jan\n2018 Dec\n2018 Nov\n2018 Oct\n2018 Sep\n2018 Aug\n2018 Jul\n2018 Jun\n2018 May\n2018 Apr\n2018 Mar\n2018 Feb\n2018 Jan\n2017 Dec\n2017 Nov\n2017 Oct\n2017 Sep\n2017 Aug\n2017 Jul\n2017 Jun\n2017 May\n2017 Apr\n2017 Mar\n2017 Feb\n2017 Jan\n2016 Dec\n2016 Nov\n2016 Oct\n2016 Sep\n2016 Aug\n2016 Jul\n2016 Jun\n2016 May\n2016 Apr\n2016 Mar\n2016 Feb\n2016 Jan\n2015 Dec\n2015 Nov\n2015 Oct\n2015 Sep\n2015 Aug\n2015 Jul\n2015 Jun\n2015 May\n2015 Apr\n2015 Mar\n2015 Feb\n2015 Jan\n2014 Dec\n2014 Nov\n2014 Oct\n2014 Sep\n2014 Aug\n2014 Jul\n2014 Jun\n2014 May\n2014 Apr\n2014 Mar\n2014 Feb\n2014 Jan\n2013 Dec\n2013 Nov\n2013 Oct\n2013 Sep\n2013 Aug\n2013 Jul\n2013 Jun\n2013 May\n2013 Apr\n2013 Mar\n2013 Feb\n2013 Jan\n2012 Dec\n2012 Nov\n2012 Oct\n2012 Sep\n2012 Aug\n2012 Jul\n2012 Jun\n2012 May\n2012 Apr\n2012 Mar\n2012 Feb\n2012 Jan\n2011 Dec\n2011 Nov\n2011 Oct\n2011 Sep\n2011 Aug\n2011 Jul\n2011 Jun\n2011 May\n2011 Apr\n2011 Mar\n2011 Feb\n2011 Jan\n2010 Dec\n2010 Nov\n2010 Oct\n2010 Sep\n2010 Aug\n2010 Jul\n2010 Jun\n2010 May\n2010 Apr\n2010 Mar\n2010 Feb\n2010 Jan\n2009 Dec\n2009 Nov\n2009 Oct\n2009 Sep\n2009 Aug\n2009 Jul\n2009 Jun\n2009 May\n2009 Apr\n2009 Mar\n2009 Feb\n2009 Jan\n2008 Dec\n2008 Nov\n2008 Oct\n2008 Sep\n2008 Aug\n2008 Jul\n2008 Jun\n2008 May\n2008 Apr\n2008 Mar\n2008 Feb\n2008 Jan\n2007 Dec\n2007 Nov\n2007 Oct\n2007 Sep\n2007 Aug\n2007 Jul\n2007 Jun\n2007 May\n2007 Apr\n2007 Mar\n2007 Feb\n2007 Jan\n2006 Dec\n2006 Nov\n2006 Oct\n2006 Sep\n2006 Aug\n2006 Jul\n2006 Jun\n2006 May\n2006 Apr\n2006 Mar\n2006 Feb\n2006 Jan\n2005 Dec\n2005 Nov\n2005 Oct\n2005 Sep\n2005 Aug\n2005 Jul\n2005 Jun\n2005 May\n2005 Apr\n2005 Mar\n2005 Feb\n2005 Jan\n2004 Dec\n2004 Nov\n2004 Oct\n2004 Sep\n2004 Aug\n2004 Jul\n2004 Jun\n2004 May\n2004 Apr\n2004 Mar\n2004 Feb\n2004 Jan\n2003 Dec\n2003 Nov\n2003 Oct\n2003 Sep\n2003 Aug\n2003 Jul\n2003 Jun\n2003 May\n2003 Apr\n2003 Mar\n2003 Feb\n2003 Jan\n\n\n\n\nTotal All Markets\n54746.4\n56135.9\n51802.1\n51415.6\n49068.4\n49949.0\n52965.2\n48845.9\n52681.4\n52901.0\n51339.9\n45008.5\n49246.6\n45253.9\n49402.4\n51889.5\n48959.2\n49260.0\n46574.6\n46726.3\n45562.0\n44966.7\n51593.3\n42748.4\n44382.9\n49869.8\n50653.9\n53182.9\n55799.3\n58466.0\n61029.4\n59649.2\n57604.3\n56116.0\n58080.0\n44958.4\n50026.8\n54349.4\n50674.9\n47945.2\n45980.4\n44714.5\n46107.8\n45039.8\n41559.7\n45169.5\n47668.4\n37643.7\n39028.6\n40154.5\n38477.9\n38173.8\n38801.4\n36472.3\n37843.6\n35120.9\n31458.2\n35878.8\n40433.0\n39472.6\n41180.2\n41580.6\n42489.9\n42282.5\n39450.6\n40998.2\n42030.0\n38979.9\n42637.6\n41294.9\n40340.1\n36074.4\n41553.6\n42566.5\n45114.6\n47127.1\n41439.6\n43802.1\n44972.5\n41054.6\n42887.8\n38382.7\n39745.5\n34609.6\n38491.5\n40104.3\n41477.0\n39347.1\n35732.2\n38702.9\n36874.7\n36416.6\n39149.5\n34542.1\n39987.6\n33032.6\n36734.9\n39473.3\n37483.0\n33929.8\n32761.0\n33527.9\n31906.4\n34067.9\n32922.4\n32238.0\n33662.0\n30949.9\n30382.9\n34868.8\n33630.6\n35998.1\n35279.0\n35260.5\n37430.9\n36614.8\n33572.4\n36970.4\n38824.7\n29731.2\n35221.2\n38375.0\n35762.5\n41160.4\n40573.6\n36885.2\n40809.2\n38216.9\n41829.4\n42799.3\n43813.7\n37214.0\n41143.3\n38686.5\n38981.8\n44871.4\n41616.8\n40477.3\n43645.8\n39241.0\n41984.1\n42058.3\n38088.9\n35355.1\n40563.8\n37259.8\n40081.3\n41031.8\n37875.9\n38629.3\n38990.8\n41641.0\n42810.3\n39686.8\n43698.7\n40218.2\n40266.0\n38210.1\n41868.8\n39592.0\n38911.6\n42209.2\n37264.5\n39185.5\n39756.7\n38518.7\n43060.8\n32126.6\n37583.8\n36115.0\n35795.6\n35674.4\n35562.6\n36208.6\n38506.4\n37674.5\n33511.6\n36719.9\n36362.9\n30904.7\n33290.1\n33885.8\n31415.5\n32568.1\n33242.9\n30161.7\n31670.3\n29799.1\n27818.2\n27868.1\n27730.2\n26488.0\n25726.5\n29158.9\n32855.6\n38957.7\n41584.5\n38926.0\n43365.6\n40693.3\n38619.6\n40555.6\n38648.1\n33414.0\n38681.5\n34935.7\n36054.0\n37110.2\n32811.2\n33723.7\n34151.5\n34076.1\n32340.9\n31945.2\n32640.5\n27851.5\n30763.5\n33117.1\n31957.3\n31068.8\n32818.2\n34163.4\n33155.2\n33778.4\n32627.8\n29327.0\n31515.8\n29937.6\n27375.9\n30768.7\n29184.8\n32075.3\n29312.7\n29639.2\n27943.0\n28003.4\n26203.3\n26658.2\n28178.7\n21400.9\n24945.4\n25299.4\n24894.4\n26438.7\n25520.7\n25375.6\n26647.8\n24845.5\n24467.4\n24103.8\n25214.3\n20335.4\n21035.2\n22370.0\n20077.6\n22247.2\n20630.3\n19534.3\n19832.5\n19773.6\n18136.0\n19325.0\n20441.8\n17162.8\n18539.1\n\n\nAmerica\n6923.3\n7873.7\n7879.6\n8077.6\n9112.0\n8581.4\n8462.0\n7611.1\n8388.0\n8971.9\n7279.1\n6398.3\n6711.7\n7171.9\n7907.6\n7514.7\n6991.3\n8087.7\n6766.8\n7887.7\n6445.0\n6590.1\n7555.1\n6008.9\n6226.7\n6901.5\n7529.4\n7666.4\n7995.9\n8633.8\n7879.7\n8024.0\n8521.1\n7822.1\n7176.1\n5385.2\n5850.9\n6261.1\n6127.4\n6027.6\n5631.6\n5750.1\n5728.6\n5457.4\n5191.8\n6195.9\n5303.5\n4164.2\n4580.0\n4676.4\n4588.2\n4869.7\n4886.4\n4132.0\n4667.3\n4686.2\n4259.0\n5183.5\n5910.8\n5314.1\n5844.1\n5686.4\n6274.7\n5754.5\n5633.1\n6128.8\n5986.2\n5876.4\n5797.3\n6128.0\n5528.7\n5381.1\n5543.6\n6184.6\n6013.9\n6409.9\n5466.5\n6031.7\n5590.7\n5961.2\n5661.3\n5122.6\n5316.7\n4113.3\n4706.6\n5014.4\n4895.6\n4983.1\n4435.1\n4888.7\n4684.4\n5147.3\n5372.0\n4481.4\n5262.9\n4097.8\n4743.8\n4645.3\n4908.6\n4145.9\n4121.3\n4754.1\n4107.4\n4396.5\n4284.6\n4251.0\n4437.5\n3813.2\n3818.0\n4515.7\n4773.8\n4711.8\n5147.4\n4484.8\n4468.0\n4886.9\n4418.3\n4725.5\n5555.1\n3842.0\n4751.9\n5546.4\n5087.7\n5927.0\n4999.0\n5276.0\n4755.4\n4635.5\n5276.7\n6046.6\n6117.0\n5579.0\n5570.0\n4793.3\n5269.7\n5847.2\n6441.8\n5843.8\n6344.8\n5004.4\n5550.9\n5697.4\n4717.4\n5173.2\n5553.4\n4705.3\n4806.6\n5670.2\n5248.5\n5521.0\n5556.7\n5098.6\n5876.5\n5073.8\n5539.4\n5312.3\n5349.6\n5489.2\n6298.3\n4816.1\n5093.9\n5678.4\n4871.0\n5308.5\n5658.1\n5702.4\n5382.1\n4542.4\n4964.5\n4842.5\n5033.0\n4822.5\n4760.2\n5220.1\n5044.1\n5236.8\n4845.9\n5512.7\n5475.1\n4255.2\n4687.7\n4756.3\n4653.1\n4434.0\n4687.6\n4587.5\n4335.4\n4062.0\n3907.3\n4123.3\n4114.8\n4181.7\n4362.4\n4585.0\n4657.5\n5995.1\n5589.1\n5483.1\n5484.8\n5674.7\n5361.7\n5725.3\n5562.2\n4929.1\n4800.5\n4664.4\n4818.0\n5116.9\n4379.3\n4340.0\n4627.6\n4883.5\n4602.7\n4411.5\n5232.8\n4163.6\n4170.7\n6260.1\n5104.3\n4533.3\n4380.4\n4259.6\n4401.5\n4313.0\n4209.1\n3980.9\n4154.0\n4364.3\n3499.5\n3797.8\n3875.5\n4519.8\n3816.1\n4219.3\n3622.7\n3460.0\n3393.4\n3676.4\n3624.7\n2991.3\n2744.1\n2896.6\n2789.2\n3218.7\n3145.2\n3369.4\n4304.7\n3418.6\n3350.4\n3439.7\n3753.7\n2606.4\n2554.4\n2649.3\n2624.1\n3430.0\n3061.2\n3087.6\n2670.2\n2852.8\n2460.4\n2825.5\n3455.3\n2755.3\n2385.2\n\n\nAntigua And Barbuda\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.2\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n2.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.1\n0.0\n0.0\n0.0\n1.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.3\n0.4\n0.1\n0.4\n0.2\n0.3\n0.6\n0.7\n0.2\n0.7\n0.5\n1.6\n0.0\n0.4\n0.8\n1.2\n0.8\n0.7\n0.8\n0.9\n0.9\n0.6\n0.4\n0.2\n0.4\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.4\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n18.8\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\nArgentina\n4.0\n12.5\n116.2\n4.1\n8.1\n7.2\n6.6\n17.2\n13.9\n18.3\n42.4\n45.1\n35.6\n37.3\n40.4\n7.9\n5.7\n8.3\n8.8\n5.2\n8.6\n29.1\n6.9\n5.5\n8.3\n11.3\n6.8\n14.9\n13.2\n11.8\n10.3\n11.6\n16.4\n6.3\n6.7\n8.3\n9.7\n11.4\n6.8\n4.1\n6.4\n3.7\n5.2\n5.0\n5.0\n8.7\n3.1\n2.9\n22.0\n6.3\n29.7\n5.1\n3.6\n5.4\n33.6\n4.4\n5.1\n6.5\n16.5\n3.1\n6.2\n3.8\n5.5\n6.2\n3.7\n7.4\n8.8\n7.0\n5.6\n14.9\n6.1\n8.5\n13.2\n5.9\n6.6\n8.0\n6.4\n4.8\n6.4\n4.6\n4.2\n8.3\n10.0\n6.6\n15.0\n4.9\n5.4\n4.6\n6.4\n6.8\n6.3\n10.2\n8.2\n5.3\n8.1\n4.2\n7.0\n13.3\n10.2\n8.9\n9.3\n4.0\n5.8\n6.3\n10.6\n5.4\n6.9\n9.6\n16.7\n26.1\n16.9\n17.1\n25.2\n20.4\n20.2\n17.4\n16.7\n13.4\n12.9\n8.8\n9.7\n8.5\n25.6\n27.3\n10.4\n31.3\n10.5\n28.6\n26.7\n4.6\n5.6\n4.1\n29.8\n29.4\n27.5\n10.6\n11.2\n8.2\n27.3\n9.8\n5.2\n10.4\n8.9\n9.5\n7.6\n8.6\n6.9\n8.8\n6.9\n7.2\n7.7\n5.3\n5.1\n4.6\n6.6\n6.1\n7.3\n8.4\n7.4\n11.9\n10.1\n10.0\n11.3\n14.1\n7.9\n6.1\n6.1\n2.8\n6.4\n5.9\n6.2\n5.6\n6.6\n8.9\n4.3\n9.0\n6.7\n40.2\n4.9\n4.3\n3.5\n18.7\n5.9\n5.5\n4.0\n4.1\n4.1\n4.6\n4.1\n2.3\n5.3\n6.0\n15.2\n17.4\n13.1\n7.2\n10.7\n11.1\n6.9\n9.0\n4.5\n13.2\n4.2\n3.0\n4.7\n3.6\n4.1\n3.8\n6.1\n8.0\n12.0\n4.0\n3.5\n7.0\n4.8\n2.0\n6.5\n4.6\n4.3\n3.7\n2.8\n3.8\n3.2\n4.2\n27.5\n5.3\n2.0\n3.9\n3.9\n2.0\n3.7\n2.7\n4.3\n3.0\n4.8\n4.1\n3.4\n2.8\n3.4\n2.0\n2.4\n2.1\n2.8\n3.4\n3.9\n3.1\n3.2\n2.1\n2.8\n3.2\n2.2\n2.1\n1.4\n2.2\n1.3\n2.5\n2.9\n1.8\n3.3\n0.9\n1.9\n1.1\n1.8\n1.6\n2.3\n\n\nBahamas\n0.0\n8.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n19.8\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.2\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n14.7\n0.0\n0.0\n0.0\n0.0\n0.0\n7.3\n0.0\n0.0\n20.6\n0.0\n29.5\n0.0\n0.0\n33.3\n0.0\n0.0\n118.6\n0.0\n152.9\n0.1\n13.7\n6.2\n63.1\n0.0\n0.0\n0.0\n0.0\n37.1\n0.0\n0.0\n0.0\n0.0\n7.5\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n6.7\n0.1\n34.2\n0.0\n6.6\n0.0\n12.9\n0.0\n0.0\n0.4\n0.0\n2.0\n0.2\n0.1\n0.0\n0.4\n0.5\n2.6\n0.0\n0.1\n0.1\n0.0\n0.1\n0.1\n0.0\n0.0\n0.1\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.2\n0.0\n0.0\n0.0\n13.1\n0.1\n0.1\n0.0\n0.1\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n51.2\n0.0\n0.0\n0.0\n0.0\n65.0\n17.7\n0.0\n0.0\n1.5\n0.0\n0.1\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.1\n0.0\n0.0\n0.2\n0.0\n60.8\n0.0\n0.1\n63.2\n66.4\n109.0\n112.0\n115.0\n225.4\n124.5\n24.5\n0.1\n239.4\n121.4\n66.7\n0.0\n0.1\n112.7\n118.3\n105.5\n0.1\n111.0\n194.5\n172.8\n164.9\n43.4\n0.0\n36.9\n15.2\n21.0\n91.0\n0.0\n0.1\n0.2\n0.2\n49.4\n1.1\n59.1\n0.3\n74.9\n92.8\n129.4\n119.3\n22.5\n38.4\n11.7\n36.4\n11.2\n15.4\n0.0\n0.3\n202.6\n43.3\n55.1\n72.5\n181.3\n44.0\n0.3\n137.5\n132.6\n224.1\n98.1\n20.1\n23.0\n6.3\n4.8\n0.1\n37.9\n9.3\n27.4\n0.2\n9.9\n0.2\n6.2\n0.1\n11.2\n8.1\n9.9\n46.7\n0.2\n0.1\n0.2\n0.2\n0.2\n0.1\n0.1\n0.1\n0.3\n0.1\n0.3\n38.8\n0.5\n0.1\n0.5\n0.1\n0.2\n0.1\n0.3\n0.1\n0.2\n37.0\n0.1\n6.4\n0.2\n0.1\n0.3\n0.1\n0.4\n23.9\n0.8\n0.2\n0.3\n17.0\n8.4\n0.1\n0.1\n0.1\n7.9\n19.2\n\n\nBermuda\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.7\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.4\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.3\n0.5\n0.5\n0.1\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n\n\n\n\nexport &lt;- read_excel(\"data/trade.xlsx\", sheet = \"T2\", skip = 10)\n\n\nhead(export)\n\n# A tibble: 6 × 266\n  `Data Series`       `2025 Jan` `2024 Dec` `2024 Nov` `2024 Oct` `2024 Sep`\n  &lt;chr&gt;                    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1 Total All Markets      24672      23685.     23439.     22148.     21967. \n2 America                 4263.      3608.      3129.      2936.      3294. \n3 Antigua And Barbuda        8.8        7.1        8.3        7.7        8.2\n4 Argentina                  5.3        6          3.9        6.4        3  \n5 Bahamas                   51.4       48.1       60.5       36.1       59.3\n6 Bermuda                    2.7        7.7        0.5        5.4        0.7\n# ℹ 260 more variables: `2024 Aug` &lt;dbl&gt;, `2024 Jul` &lt;dbl&gt;, `2024 Jun` &lt;dbl&gt;,\n#   `2024 May` &lt;dbl&gt;, `2024 Apr` &lt;dbl&gt;, `2024 Mar` &lt;dbl&gt;, `2024 Feb` &lt;dbl&gt;,\n#   `2024 Jan` &lt;dbl&gt;, `2023 Dec` &lt;dbl&gt;, `2023 Nov` &lt;dbl&gt;, `2023 Oct` &lt;dbl&gt;,\n#   `2023 Sep` &lt;dbl&gt;, `2023 Aug` &lt;dbl&gt;, `2023 Jul` &lt;dbl&gt;, `2023 Jun` &lt;dbl&gt;,\n#   `2023 May` &lt;dbl&gt;, `2023 Apr` &lt;dbl&gt;, `2023 Mar` &lt;dbl&gt;, `2023 Feb` &lt;dbl&gt;,\n#   `2023 Jan` &lt;dbl&gt;, `2022 Dec` &lt;dbl&gt;, `2022 Nov` &lt;dbl&gt;, `2022 Oct` &lt;dbl&gt;,\n#   `2022 Sep` &lt;dbl&gt;, `2022 Aug` &lt;dbl&gt;, `2022 Jul` &lt;dbl&gt;, `2022 Jun` &lt;dbl&gt;, …\n\n\n\nkable(head(export))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Series\n2025 Jan\n2024 Dec\n2024 Nov\n2024 Oct\n2024 Sep\n2024 Aug\n2024 Jul\n2024 Jun\n2024 May\n2024 Apr\n2024 Mar\n2024 Feb\n2024 Jan\n2023 Dec\n2023 Nov\n2023 Oct\n2023 Sep\n2023 Aug\n2023 Jul\n2023 Jun\n2023 May\n2023 Apr\n2023 Mar\n2023 Feb\n2023 Jan\n2022 Dec\n2022 Nov\n2022 Oct\n2022 Sep\n2022 Aug\n2022 Jul\n2022 Jun\n2022 May\n2022 Apr\n2022 Mar\n2022 Feb\n2022 Jan\n2021 Dec\n2021 Nov\n2021 Oct\n2021 Sep\n2021 Aug\n2021 Jul\n2021 Jun\n2021 May\n2021 Apr\n2021 Mar\n2021 Feb\n2021 Jan\n2020 Dec\n2020 Nov\n2020 Oct\n2020 Sep\n2020 Aug\n2020 Jul\n2020 Jun\n2020 May\n2020 Apr\n2020 Mar\n2020 Feb\n2020 Jan\n2019 Dec\n2019 Nov\n2019 Oct\n2019 Sep\n2019 Aug\n2019 Jul\n2019 Jun\n2019 May\n2019 Apr\n2019 Mar\n2019 Feb\n2019 Jan\n2018 Dec\n2018 Nov\n2018 Oct\n2018 Sep\n2018 Aug\n2018 Jul\n2018 Jun\n2018 May\n2018 Apr\n2018 Mar\n2018 Feb\n2018 Jan\n2017 Dec\n2017 Nov\n2017 Oct\n2017 Sep\n2017 Aug\n2017 Jul\n2017 Jun\n2017 May\n2017 Apr\n2017 Mar\n2017 Feb\n2017 Jan\n2016 Dec\n2016 Nov\n2016 Oct\n2016 Sep\n2016 Aug\n2016 Jul\n2016 Jun\n2016 May\n2016 Apr\n2016 Mar\n2016 Feb\n2016 Jan\n2015 Dec\n2015 Nov\n2015 Oct\n2015 Sep\n2015 Aug\n2015 Jul\n2015 Jun\n2015 May\n2015 Apr\n2015 Mar\n2015 Feb\n2015 Jan\n2014 Dec\n2014 Nov\n2014 Oct\n2014 Sep\n2014 Aug\n2014 Jul\n2014 Jun\n2014 May\n2014 Apr\n2014 Mar\n2014 Feb\n2014 Jan\n2013 Dec\n2013 Nov\n2013 Oct\n2013 Sep\n2013 Aug\n2013 Jul\n2013 Jun\n2013 May\n2013 Apr\n2013 Mar\n2013 Feb\n2013 Jan\n2012 Dec\n2012 Nov\n2012 Oct\n2012 Sep\n2012 Aug\n2012 Jul\n2012 Jun\n2012 May\n2012 Apr\n2012 Mar\n2012 Feb\n2012 Jan\n2011 Dec\n2011 Nov\n2011 Oct\n2011 Sep\n2011 Aug\n2011 Jul\n2011 Jun\n2011 May\n2011 Apr\n2011 Mar\n2011 Feb\n2011 Jan\n2010 Dec\n2010 Nov\n2010 Oct\n2010 Sep\n2010 Aug\n2010 Jul\n2010 Jun\n2010 May\n2010 Apr\n2010 Mar\n2010 Feb\n2010 Jan\n2009 Dec\n2009 Nov\n2009 Oct\n2009 Sep\n2009 Aug\n2009 Jul\n2009 Jun\n2009 May\n2009 Apr\n2009 Mar\n2009 Feb\n2009 Jan\n2008 Dec\n2008 Nov\n2008 Oct\n2008 Sep\n2008 Aug\n2008 Jul\n2008 Jun\n2008 May\n2008 Apr\n2008 Mar\n2008 Feb\n2008 Jan\n2007 Dec\n2007 Nov\n2007 Oct\n2007 Sep\n2007 Aug\n2007 Jul\n2007 Jun\n2007 May\n2007 Apr\n2007 Mar\n2007 Feb\n2007 Jan\n2006 Dec\n2006 Nov\n2006 Oct\n2006 Sep\n2006 Aug\n2006 Jul\n2006 Jun\n2006 May\n2006 Apr\n2006 Mar\n2006 Feb\n2006 Jan\n2005 Dec\n2005 Nov\n2005 Oct\n2005 Sep\n2005 Aug\n2005 Jul\n2005 Jun\n2005 May\n2005 Apr\n2005 Mar\n2005 Feb\n2005 Jan\n2004 Dec\n2004 Nov\n2004 Oct\n2004 Sep\n2004 Aug\n2004 Jul\n2004 Jun\n2004 May\n2004 Apr\n2004 Mar\n2004 Feb\n2004 Jan\n2003 Dec\n2003 Nov\n2003 Oct\n2003 Sep\n2003 Aug\n2003 Jul\n2003 Jun\n2003 May\n2003 Apr\n2003 Mar\n2003 Feb\n2003 Jan\n\n\n\n\nTotal All Markets\n24672.0\n23684.7\n23438.7\n22147.8\n21966.7\n23984.0\n26421.3\n22945.7\n25555.3\n24062.9\n24093.9\n23159.9\n25136.8\n22546.0\n24833.9\n26297.7\n23093.3\n23134.7\n22445.5\n23470.0\n23026.6\n24015.0\n27554.9\n22273.8\n22361.4\n24423.6\n24976.4\n25546.0\n27479.1\n30220.5\n30998.1\n30072.1\n29142.3\n28376.1\n29495.6\n24202.3\n24736.8\n26075.1\n26480.9\n23992.9\n22928.6\n23119.3\n23284.6\n23737.8\n21616.3\n22801.9\n25218.4\n19517.4\n20202.2\n20137.9\n18017.3\n18651.6\n18815.7\n20063.2\n19502.9\n18021.1\n16915.5\n19246.4\n22373.5\n21069.5\n21635.0\n20385.0\n21027.8\n21927.3\n19546.0\n20850.4\n21144.2\n19933.0\n23259.1\n21486.6\n20723.8\n19909.7\n21400.7\n21093.1\n24480.7\n26021.8\n22549.9\n24732.0\n23569.5\n23385.7\n25908.0\n23078.8\n22997.9\n20113.2\n23207.3\n23287.9\n23434.9\n22545.5\n20428.5\n21594.6\n19856.1\n21088.2\n22282.2\n20736.5\n23098.2\n20545.0\n20404.3\n21516.2\n20283.0\n18278.5\n19014.9\n18194.4\n18547.8\n19591.8\n20068.4\n18822.0\n17947.9\n15024.3\n16643.9\n18332.7\n17321.0\n20189.5\n19701.7\n18999.3\n21909.5\n21109.2\n19637.1\n20829.5\n23159.6\n16622.1\n19921.7\n20793.6\n20041.9\n22476.2\n22797.5\n23707.0\n23475.4\n22555.3\n22942.4\n23976.2\n22279.1\n22219.8\n22513.7\n22119.6\n21501.6\n24112.2\n23868.5\n22578.8\n24041.1\n22544.3\n22157.5\n22973.9\n22806.5\n20123.7\n22389.0\n21102.4\n22994.7\n24825.7\n22273.7\n23230.6\n23067.8\n24121.7\n25067.4\n24135.8\n25063.4\n26337.0\n22948.8\n24644.1\n23382.7\n22829.0\n24403.9\n26302.9\n23385.0\n23554.3\n22893.8\n23029.6\n24934.1\n19710.8\n22659.0\n21397.5\n20754.3\n22881.8\n21820.7\n22392.6\n20570.6\n21016.7\n20174.3\n21633.5\n20832.7\n17671.1\n17889.8\n19404.7\n18866.9\n17864.5\n18615.7\n17459.2\n18233.2\n16391.2\n15149.1\n15538.8\n15748.8\n13393.6\n13544.0\n14339.9\n17554.7\n20099.6\n22702.3\n22719.7\n23970.8\n21655.1\n20358.7\n22332.4\n21135.5\n18976.4\n21881.5\n19544.7\n20384.7\n21609.9\n20435.3\n19902.7\n20233.2\n19725.2\n19348.1\n18783.4\n19971.9\n15446.6\n19562.0\n17564.9\n19359.8\n18964.0\n19500.2\n19302.6\n19041.4\n20398.8\n19481.9\n17989.8\n20235.3\n17720.4\n17830.7\n20549.8\n18738.1\n19489.1\n18509.5\n18645.0\n16940.7\n16897.4\n16272.7\n15873.0\n16702.9\n14155.7\n14701.6\n16119.8\n15694.3\n16453.4\n16484.8\n15612.6\n15452.7\n15205.3\n14527.2\n14202.5\n14810.0\n12917.7\n12730.7\n13759.3\n12504.9\n13733.4\n13541.1\n11785.1\n12646.8\n12169.3\n11905.6\n12258.4\n12707.3\n10658.0\n12888.7\n\n\nAmerica\n4263.1\n3607.9\n3128.7\n2935.5\n3294.2\n3447.8\n5094.3\n3298.2\n3722.3\n3494.1\n3381.5\n3921.7\n3807.8\n3425.0\n4007.9\n3468.8\n3743.2\n3508.5\n4378.6\n3742.1\n3455.4\n4700.6\n5589.5\n3230.4\n3199.4\n3398.3\n3571.6\n3879.4\n3905.9\n4598.1\n3691.7\n4460.3\n3546.5\n3974.5\n4967.3\n3075.2\n3857.0\n3321.9\n3579.7\n3102.2\n3301.5\n3027.3\n2941.7\n3252.9\n3369.2\n3243.6\n3709.1\n2891.3\n2750.3\n3552.7\n3024.1\n2781.2\n2528.1\n2891.2\n4517.1\n2949.0\n4066.3\n4604.8\n3687.7\n3331.4\n3453.7\n2315.5\n2702.5\n2581.5\n2651.7\n2707.0\n3074.8\n2979.7\n3624.5\n2732.8\n3078.2\n3013.0\n2774.2\n2617.9\n2952.5\n3223.4\n3155.5\n3334.0\n3240.9\n3066.1\n3641.8\n3118.8\n3168.5\n2512.2\n2694.2\n2298.9\n2264.2\n2448.9\n2250.9\n2442.1\n2141.5\n2397.2\n2649.7\n2485.3\n2812.1\n2063.9\n2233.2\n1990.2\n2206.1\n1900.4\n2391.2\n2340.0\n2582.0\n2767.7\n2532.1\n2355.0\n2301.0\n1911.5\n1938.3\n2029.5\n2163.4\n2718.2\n2475.5\n2636.1\n2672.8\n2823.6\n2537.4\n2809.9\n3037.4\n1983.5\n2422.1\n2445.2\n2566.2\n2537.5\n2968.7\n3132.9\n2980.8\n3104.9\n2702.0\n3162.9\n2726.7\n2822.4\n2838.7\n2798.7\n2719.9\n3030.1\n3144.3\n3148.4\n3137.4\n3170.1\n3027.4\n3250.7\n3217.4\n2561.4\n3052.2\n2341.8\n2983.5\n3593.8\n2958.0\n3223.0\n3034.8\n3144.9\n3189.1\n3386.2\n3229.7\n3934.4\n3729.8\n3688.2\n2987.9\n3143.5\n3118.8\n3476.3\n3397.8\n3584.0\n3014.9\n3535.6\n4463.9\n2908.2\n3072.7\n2741.1\n2743.5\n3822.3\n3596.9\n3267.5\n2770.1\n3039.3\n2666.8\n3893.0\n2638.7\n2543.8\n2635.1\n2728.5\n3150.7\n2749.4\n2909.3\n2921.2\n2864.0\n3157.3\n2185.8\n2804.0\n2379.1\n2210.4\n2094.8\n2293.6\n3514.2\n3032.7\n3454.8\n3313.6\n3062.2\n3194.5\n2877.1\n3197.9\n3810.8\n3027.5\n3680.7\n3082.4\n3443.7\n3595.2\n3394.0\n3507.8\n3398.9\n3272.5\n3143.6\n3266.9\n3374.4\n2793.5\n3324.6\n2433.7\n2910.5\n3145.4\n3225.3\n3150.5\n3303.1\n3023.6\n2906.2\n3125.9\n3443.2\n2760.6\n2472.6\n2945.9\n2857.5\n2740.3\n2664.4\n2574.8\n2529.2\n2374.6\n2200.0\n2256.7\n2555.9\n2403.4\n2379.1\n2410.1\n2457.3\n2601.7\n2715.4\n2729.2\n2760.0\n2583.9\n2650.4\n2350.8\n2560.9\n2017.2\n2127.4\n2387.9\n2208.3\n2553.3\n2339.6\n2060.7\n2236.7\n2421.4\n2379.6\n2349.3\n2384.9\n2081.9\n2679.1\n\n\nAntigua And Barbuda\n8.8\n7.1\n8.3\n7.7\n8.2\n9.3\n10.0\n8.4\n15.4\n18.3\n8.9\n14.7\n11.1\n10.5\n13.9\n6.3\n11.3\n15.0\n8.1\n6.6\n7.8\n9.4\n12.9\n11.3\n5.5\n9.0\n12.9\n6.3\n12.4\n11.4\n11.8\n9.6\n13.0\n13.1\n12.6\n8.6\n10.3\n10.4\n8.0\n6.3\n8.3\n4.5\n6.3\n9.4\n8.1\n7.4\n10.5\n8.2\n6.5\n6.8\n7.1\n6.4\n8.1\n3.8\n2.8\n5.0\n4.0\n7.9\n13.0\n10.5\n20.1\n3.6\n7.9\n10.4\n9.3\n9.7\n11.5\n11.7\n15.4\n12.4\n9.8\n10.9\n9.0\n15.4\n19.0\n9.3\n11.8\n14.4\n13.0\n12.6\n10.4\n12.4\n14.4\n15.2\n10.4\n9.7\n12.1\n14.4\n13.3\n12.5\n11.2\n16.5\n16.5\n12.7\n16.9\n12.6\n15.5\n18.3\n16.7\n16.4\n14.4\n14.4\n12.0\n16.1\n15.1\n12.4\n9.7\n9.3\n14.6\n17.1\n20.1\n19.1\n21.5\n25.9\n30.1\n31.7\n31.0\n20.1\n24.5\n16.5\n25.5\n20.2\n29.2\n27.9\n32.2\n30.0\n42.3\n37.2\n36.5\n27.1\n28.1\n31.9\n37.3\n28.2\n39.3\n26.2\n45.6\n33.1\n41.2\n31.1\n32.2\n41.0\n35.8\n45.3\n34.5\n35.5\n40.6\n26.6\n42.5\n47.3\n34.8\n56.3\n67.7\n61.0\n41.5\n54.3\n61.5\n41.0\n53.5\n55.4\n53.1\n59.8\n53.2\n55.6\n54.8\n61.9\n60.7\n52.7\n60.7\n39.6\n45.4\n48.0\n52.4\n51.1\n57.7\n49.4\n56.7\n41.7\n46.8\n50.1\n42.6\n44.4\n63.2\n37.2\n42.0\n41.6\n32.1\n32.1\n30.8\n22.4\n23.4\n19.7\n18.0\n20.9\n38.0\n57.6\n58.2\n72.6\n62.2\n58.1\n53.3\n34.0\n38.8\n36.8\n38.8\n33.9\n36.6\n24.0\n29.9\n20.5\n21.4\n29.7\n24.8\n18.9\n16.3\n16.1\n17.8\n15.8\n14.1\n17.8\n15.4\n15.9\n19.0\n14.5\n17.1\n16.6\n22.3\n21.3\n19.9\n20.9\n21.7\n18.9\n20.9\n20.5\n15.1\n13.7\n14.8\n11.7\n9.1\n10.9\n9.7\n10.0\n19.4\n14.4\n12.4\n12.2\n14.9\n8.8\n11.8\n11.7\n29.7\n10.3\n11.1\n7.4\n7.7\n7.3\n7.8\n8.7\n6.3\n6.8\n7.0\n7.1\n4.5\n8.7\n5.1\n\n\nArgentina\n5.3\n6.0\n3.9\n6.4\n3.0\n4.3\n3.6\n3.9\n4.8\n3.8\n18.9\n4.3\n4.5\n3.3\n3.0\n1.9\n4.0\n2.7\n4.7\n2.2\n3.3\n2.3\n6.7\n6.1\n3.9\n1.6\n4.2\n3.6\n23.8\n19.1\n3.0\n4.8\n7.6\n7.0\n3.9\n4.4\n4.8\n3.8\n2.4\n2.4\n1.8\n2.7\n4.4\n2.6\n4.1\n2.8\n15.7\n9.0\n1.5\n3.0\n17.0\n12.3\n8.6\n11.9\n9.9\n6.3\n1.0\n14.3\n2.1\n2.0\n6.8\n2.3\n2.2\n9.6\n1.6\n5.0\n7.5\n13.1\n7.8\n7.7\n5.2\n1.7\n3.8\n4.9\n3.6\n3.3\n7.2\n2.4\n2.3\n3.0\n3.6\n6.4\n2.7\n2.4\n2.7\n3.5\n3.0\n13.8\n4.8\n5.5\n4.3\n3.8\n4.8\n2.7\n5.7\n3.0\n4.9\n4.0\n3.7\n2.7\n3.4\n9.1\n16.6\n43.6\n8.0\n2.1\n4.1\n3.3\n3.2\n5.1\n2.8\n4.8\n2.8\n4.0\n4.4\n4.8\n4.1\n4.4\n4.4\n4.1\n4.6\n3.8\n10.7\n2.3\n3.3\n3.1\n4.6\n5.9\n5.9\n9.5\n58.4\n9.2\n28.9\n3.3\n3.5\n8.0\n5.7\n2.9\n6.6\n5.2\n5.5\n6.6\n5.0\n2.8\n5.5\n3.7\n7.2\n7.8\n3.2\n5.9\n5.4\n6.6\n29.5\n5.5\n3.8\n3.0\n10.5\n11.8\n5.1\n13.2\n11.8\n6.6\n10.7\n5.6\n4.7\n8.8\n19.2\n12.7\n7.6\n7.1\n14.5\n10.9\n17.5\n17.9\n19.3\n24.2\n9.5\n17.7\n5.4\n3.2\n4.6\n4.4\n4.4\n3.3\n3.8\n3.0\n3.1\n2.7\n3.4\n13.7\n3.6\n3.3\n4.2\n5.4\n34.0\n8.9\n53.7\n4.5\n12.2\n5.5\n5.0\n6.1\n5.1\n7.3\n5.4\n4.6\n7.0\n6.3\n5.7\n4.3\n4.8\n5.8\n4.4\n4.6\n8.7\n4.2\n24.0\n5.7\n5.8\n6.0\n2.9\n4.2\n4.2\n6.0\n4.0\n6.0\n7.2\n9.6\n7.3\n8.4\n8.3\n7.5\n4.6\n9.0\n5.8\n4.2\n3.7\n3.6\n4.0\n3.1\n4.4\n3.1\n2.8\n4.5\n5.6\n3.8\n3.1\n3.1\n204.4\n3.1\n2.9\n3.0\n3.0\n2.9\n1.7\n2.5\n3.6\n21.0\n2.4\n1.8\n2.5\n3.1\n1.4\n0.8\n0.7\n\n\nBahamas\n51.4\n48.1\n60.5\n36.1\n59.3\n77.3\n80.1\n79.8\n71.4\n78.1\n84.9\n71.5\n101.7\n85.0\n75.1\n92.6\n75.5\n63.9\n58.9\n64.0\n74.4\n75.3\n83.3\n73.3\n104.7\n92.4\n101.8\n101.3\n118.8\n141.8\n115.5\n141.4\n118.6\n105.3\n76.1\n88.0\n100.3\n89.7\n90.1\n74.3\n90.4\n84.4\n79.2\n76.3\n68.8\n61.6\n87.6\n62.8\n74.0\n63.9\n51.8\n51.8\n45.7\n47.9\n47.8\n35.4\n40.5\n55.5\n82.6\n109.9\n125.9\n19.6\n40.0\n57.1\n55.3\n84.6\n74.4\n62.4\n86.8\n65.0\n74.3\n72.1\n73.7\n82.8\n105.5\n98.2\n103.2\n88.4\n94.3\n88.9\n93.0\n90.5\n78.0\n88.6\n89.5\n78.9\n63.3\n82.1\n64.0\n70.4\n51.4\n60.7\n68.3\n75.3\n58.5\n76.4\n47.8\n54.5\n60.6\n45.4\n50.7\n57.9\n54.0\n53.8\n48.1\n36.8\n33.3\n42.1\n47.2\n65.1\n51.2\n54.6\n62.9\n58.0\n65.6\n63.4\n56.4\n64.4\n70.9\n62.3\n73.4\n76.3\n96.3\n98.3\n113.8\n76.1\n102.6\n90.8\n114.2\n115.5\n91.7\n120.8\n150.4\n95.2\n109.1\n105.6\n68.0\n116.3\n97.4\n89.1\n92.0\n118.6\n83.4\n120.8\n92.4\n81.0\n84.6\n74.5\n104.3\n73.7\n109.6\n134.0\n107.8\n123.7\n116.9\n112.1\n135.8\n97.2\n96.3\n97.6\n132.0\n94.6\n114.7\n127.0\n77.7\n113.8\n97.7\n104.0\n84.8\n81.9\n90.6\n57.9\n75.9\n63.4\n81.0\n80.1\n80.8\n78.8\n85.9\n83.5\n90.7\n74.7\n66.3\n71.2\n73.3\n68.6\n76.7\n47.9\n53.1\n37.3\n49.0\n54.7\n37.2\n42.1\n69.5\n77.6\n144.3\n125.4\n94.8\n106.6\n85.0\n106.5\n63.8\n68.0\n65.8\n75.5\n59.8\n60.5\n49.6\n50.2\n44.2\n42.5\n45.6\n41.8\n48.8\n35.2\n40.2\n29.0\n38.6\n35.9\n39.2\n37.7\n35.2\n39.2\n33.4\n44.0\n45.4\n31.1\n34.1\n30.8\n45.7\n36.9\n48.9\n35.7\n32.6\n26.7\n37.7\n28.8\n21.6\n26.4\n27.8\n27.2\n21.7\n13.9\n25.6\n16.4\n17.3\n25.2\n23.7\n29.4\n19.9\n19.8\n26.8\n20.4\n15.2\n22.3\n20.6\n18.8\n20.5\n21.0\n25.5\n22.2\n21.3\n26.1\n23.0\n\n\nBermuda\n2.7\n7.7\n0.5\n5.4\n0.7\n5.5\n2.9\n2.5\n1.4\n10.8\n2.4\n8.1\n0.4\n4.6\n2.1\n6.2\n3.5\n6.3\n1.8\n2.6\n7.7\n5.4\n6.4\n4.8\n14.5\n1.0\n17.5\n19.8\n8.0\n11.2\n4.2\n17.3\n9.0\n1.0\n9.2\n20.4\n14.3\n5.2\n6.3\n11.7\n2.2\n11.2\n4.3\n1.3\n5.2\n4.5\n7.0\n6.8\n3.0\n7.1\n5.3\n3.9\n4.5\n2.7\n2.7\n2.0\n3.6\n2.3\n1.8\n10.8\n16.9\n4.6\n3.9\n5.6\n5.5\n5.4\n8.2\n3.0\n1.5\n10.7\n4.3\n10.1\n7.7\n2.1\n9.0\n11.5\n5.5\n5.3\n5.3\n13.9\n16.7\n17.6\n14.8\n10.6\n9.4\n5.7\n10.6\n11.5\n13.2\n10.9\n5.1\n16.9\n14.4\n12.4\n14.1\n5.6\n15.9\n7.4\n9.3\n5.3\n6.7\n13.7\n6.4\n10.0\n10.6\n3.7\n6.3\n11.2\n13.1\n6.5\n14.8\n11.5\n11.3\n8.7\n14.9\n15.4\n22.1\n16.7\n22.6\n15.2\n23.6\n21.8\n16.1\n37.0\n27.2\n31.8\n34.3\n32.2\n50.3\n28.5\n28.3\n40.0\n46.7\n45.9\n31.4\n39.4\n54.2\n35.0\n28.9\n35.6\n27.9\n36.9\n45.8\n27.4\n30.6\n23.7\n22.9\n29.3\n38.1\n33.6\n28.2\n22.3\n41.8\n31.4\n30.5\n25.7\n36.6\n34.5\n28.5\n33.3\n30.2\n33.3\n19.9\n26.5\n10.6\n27.4\n14.3\n18.6\n25.2\n21.9\n9.7\n16.9\n26.7\n12.6\n10.5\n14.9\n12.3\n22.7\n12.8\n23.6\n13.3\n19.4\n19.2\n15.7\n23.8\n15.5\n15.2\n13.5\n14.1\n20.5\n14.6\n11.6\n7.3\n5.8\n21.8\n21.0\n40.4\n47.8\n33.6\n32.5\n25.9\n27.5\n23.6\n32.0\n22.3\n26.8\n10.4\n15.0\n8.8\n18.0\n13.3\n5.4\n6.6\n10.1\n11.4\n7.3\n9.5\n2.7\n3.5\n13.1\n8.4\n7.1\n13.6\n9.1\n14.2\n5.5\n6.5\n5.8\n6.1\n5.2\n9.3\n4.7\n5.6\n5.0\n4.3\n3.5\n3.2\n1.2\n0.0\n1.0\n2.8\n4.6\n1.7\n5.2\n1.8\n3.5\n1.5\n3.5\n4.7\n1.5\n2.0\n1.3\n1.2\n1.6\n0.4\n1.8\n3.2\n1.4\n2.0\n2.9\n2.8\n3.3\n2.7\n2.1\n3.1\n\n\n\n\n\n\n\nPrepare data\nStep 1: Deriving month and year fields\n\nimport_long &lt;- import %&gt;%\n  pivot_longer(cols = -`Data Series`, \n               names_to = \"Month_Year\", \n               values_to = \"Value\")\n\nimport_long &lt;- import_long %&gt;%\n  mutate(\n    Year = as.numeric(sub(\" .*\", \"\", Month_Year)),  \n    Month = factor(sub(\"^[0-9]+ \", \"\", Month_Year), \n                   levels = month.abb, \n                   ordered = TRUE)\n  )\n\n\nhead(import_long)\n\n# A tibble: 6 × 5\n  `Data Series`     Month_Year  Value  Year Month\n  &lt;chr&gt;             &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;ord&gt;\n1 Total All Markets 2025 Jan   54746.  2025 Jan  \n2 Total All Markets 2024 Dec   56136.  2024 Dec  \n3 Total All Markets 2024 Nov   51802.  2024 Nov  \n4 Total All Markets 2024 Oct   51416.  2024 Oct  \n5 Total All Markets 2024 Sep   49068.  2024 Sep  \n6 Total All Markets 2024 Aug   49949   2024 Aug  \n\n\n\nexport_long &lt;- export %&gt;%\n  pivot_longer(cols = -`Data Series`, \n               names_to = \"Month_Year\", \n               values_to = \"Value\")\n\n\nexport_long &lt;- export_long %&gt;%\n  mutate(\n    Year = as.numeric(sub(\" .*\", \"\", Month_Year)),  \n    Month = factor(sub(\"^[0-9]+ \", \"\", Month_Year), \n                   levels = month.abb, \n                   ordered = TRUE)\n  )\n\n\nhead(export_long)\n\n# A tibble: 6 × 5\n  `Data Series`     Month_Year  Value  Year Month\n  &lt;chr&gt;             &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;ord&gt;\n1 Total All Markets 2025 Jan   24672   2025 Jan  \n2 Total All Markets 2024 Dec   23685.  2024 Dec  \n3 Total All Markets 2024 Nov   23439.  2024 Nov  \n4 Total All Markets 2024 Oct   22148.  2024 Oct  \n5 Total All Markets 2024 Sep   21967.  2024 Sep  \n6 Total All Markets 2024 Aug   23984   2024 Aug  \n\n\nStep 2: Extracting the target year (2020 - 2024)\n\ni_total_market &lt;- import_long %&gt;%\n  filter(`Data Series` == \"Total All Markets\" & Year &gt;= 2020 & Year &lt;= 2024)\n\n\ne_total_market &lt;- export_long %&gt;%\n  filter(`Data Series` == \"Total All Markets\" & Year &gt;= 2020 & Year &lt;= 2024)\n\nStep 3: Plot Cycle plot, make it interactive, and convert the units from million SGD to billion SGD\n\ntotal_combined &lt;- i_total_market %&gt;%\n  left_join(e_total_market, by = c(\"Year\", \"Month\"), suffix = c(\"_import\", \"_export\")) %&gt;%\n  mutate(Value = (Value_import + Value_export) / 1000, Type = \"Total (Import + Export)\") %&gt;%  \n  select(Year, Month, Value, Type)\n\ntotal_market &lt;- bind_rows(\n  i_total_market %&gt;% mutate(Type = \"Import\", Value = Value / 1000),\n  e_total_market %&gt;% mutate(Type = \"Export\", Value = Value / 1000),\n  total_combined\n)\n\naverage_values &lt;- total_market %&gt;%\n  group_by(Type, Month) %&gt;%\n  summarise(AvgValue = mean(Value, na.rm = TRUE), .groups = \"drop\")\n\np &lt;- ggplot(total_market, aes(x = Year, y = Value, group = interaction(Month, Type), color = Type, \n                              text = paste(\"Year:\", Year, \"&lt;br&gt;Value:\", round(Value, 2), \"Billion SGD\", \"&lt;br&gt;Type:\", Type))) +\n  geom_line(size = 0.8) +  \n\n\n  geom_hline(data = average_values, aes(yintercept = AvgValue, color = Type), \n             linetype = \"dashed\", size = 0.5) +\n\n  facet_grid(~Month) +  \n  \n  scale_color_manual(values = c(\"Import\" = \"blue\", \"Export\" = \"green\", \"Total (Import + Export)\" = \"orange\")) +  \n  \n  labs(title = \"Total Merchandise Import & Export (2020-2024) with Total Sum\",\n       color = \"Category\",\n       x = \"\", \n       y = \"Trade Value (in Billion SGD)\") +  \n\n  theme_minimal() +  \n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n# ASEAN Countries\nASEAN &lt;- c(\"Brunei\", \"Cambodia\", \"Indonesia\", \"Laos\", \"Malaysia\", \"Myanmar\", \n           \"Philippines\", \"Singapore\", \"Thailand\", \"Vietnam\")\n\n# Main trade partners\nselected_partners &lt;- c(\"United States\", \"Europe\", \"China\", \"Japan\", \"Australia\", \n                       \"Hong Kong\", \"United Kingdom\", \"Switzerland\", \"India\", \"ASEAN\")\n\n# Sum the total import amount of 2019 and 2023\ntrade_summary &lt;- import_long %&gt;%\n  filter(Year %in% c(2019, 2023)) %&gt;%  \n  group_by(`Data Series`, Year) %&gt;%\n  summarise(Total_Import = sum(Value, na.rm = TRUE) / 1000) %&gt;%  # convert from million to billion\n  ungroup() %&gt;%\n\n  mutate(`Data Series` = ifelse(`Data Series` %in% ASEAN, \"ASEAN\", `Data Series`)) %&gt;%\n  group_by(`Data Series`, Year) %&gt;%\n  summarise(Total_Import = round(sum(Total_Import, na.rm = TRUE), 2)) %&gt;%  \n  ungroup() %&gt;%\n  filter(`Data Series` %in% selected_partners) %&gt;%  \n  mutate(Year = factor(Year, levels = c(2019, 2023)))  \n\n# slopegraph\nnewggslopegraph(trade_summary, Year, Total_Import, `Data Series`,\n                Title = \"Trade in Services (2019 vs 2023)\",\n                SubTitle = \"Comparison of Major Importing Partners in All Markets (in Billion SGD)\",\n                Caption = \"Data Source: Merchandise Trade By Region And Selected Market (Imports)\") +\n  theme_minimal()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-Lesson Learning Site",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.\nWebsite owner: Chang Fang Yu\nOn this website, you will find her learning journey in ISSS608 Visual Analytics and Applications.\n\n\n\nThe picture sources from zh.pngtree.com"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html",
    "title": "In-class exercise 4",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidymodels, ggstatsplot, tidyverse) \n\n\n#| message: false\n#| warning: false\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = FALSE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#getting-started",
    "href": "In-class_Ex/In-class_Ex4/In-class_Ex4.html#getting-started",
    "title": "In-class exercise 4",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidymodels, ggstatsplot, tidyverse) \n\n\n#| message: false\n#| warning: false\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = FALSE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"coral3\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#preparing-the-data",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#preparing-the-data",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-ternary-diagram-with-r",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-ternary-diagram-with-r",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"coral3\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-1",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-1",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set",
    "title": "Hands-on Exercise 5",
    "section": "Importing and Preparing The Data Set",
    "text": "Importing and Preparing The Data Set\n\nImporting Data\n\nwine &lt;- read_csv(\"data/wine_quality.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#building-correlation-matrix-pairs-method",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#building-correlation-matrix-pairs-method",
    "title": "Hands-on Exercise 5",
    "section": "Building Correlation Matrix: pairs() method",
    "text": "Building Correlation Matrix: pairs() method\n\nBuilding a basic correlation matrix\n\npairs(wine[,1:11])\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\n\n\n\n\n\nDrawing the lower corner\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\n\n\n\n\n\nIncluding with correlation coefficients\n\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#visualising-correlation-matrix-ggcormat",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#visualising-correlation-matrix-ggcormat",
    "title": "Hands-on Exercise 5",
    "section": "Visualising Correlation Matrix: ggcormat()",
    "text": "Visualising Correlation Matrix: ggcormat()\n\nThe basic plot\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p &lt; 0.05\"\n)\n\n\n\n\n\n\n\n\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#building-multiple-plots",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#building-multiple-plots",
    "title": "Hands-on Exercise 5",
    "section": "Building multiple plots",
    "text": "Building multiple plots\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                          tl.srt = 40,  # 調整標籤角度\n                         tl.cex = 0.6  ),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#visualising-correlation-matrix-using-corrplot-package",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#visualising-correlation-matrix-using-corrplot-package",
    "title": "Hands-on Exercise 5",
    "section": "Visualising Correlation Matrix using corrplot Package",
    "text": "Visualising Correlation Matrix using corrplot Package\n\nGetting started with corrplot\n\nwine.cor &lt;- cor(wine[, 1:11])\ncorrplot(wine.cor)\n\n\n\n\n\n\n\n\n\n\nWorking with visual geometrics\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\n\nWorking with layout\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nWorking with mixed layout\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nCombining corrgram with the significant test\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\n\n\n\n\n\nReorder a corrgram\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nReordering a correlation matrix using hclust\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-2",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-2",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set-1",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#importing-and-preparing-the-data-set-1",
    "title": "Hands-on Exercise 5",
    "section": "Importing and Preparing The Data Set",
    "text": "Importing and Preparing The Data Set\n\nImporting the data set\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\n\n\nPreparing the data\n\nrow.names(wh) &lt;- wh$Country\n\n\n\nTransforming the data frame into a matrix\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#static-heatmap",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#static-heatmap",
    "title": "Hands-on Exercise 5",
    "section": "Static Heatmap",
    "text": "Static Heatmap\n\nheatmap() of R Stats\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#creating-interactive-heatmap",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#creating-interactive-heatmap",
    "title": "Hands-on Exercise 5",
    "section": "Creating Interactive Heatmap",
    "text": "Creating Interactive Heatmap\n\nWorking with heatmaply\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\n\n\nData trasformation\nScaling method\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\nNormalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\nPercentising method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\nManual approach\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\n\nStatistical approach\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)\n\n\n\n\n\n\n\nSeriation\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")\n\n\n\n\n\n\n\nWorking with colour palettes\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Blues)\n\n\n\n\n\n\n\nThe finishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-3",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-3",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(GGally, parallelPlot, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-on Exercise 5",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-static-parallel-coordinates-plot",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-static-parallel-coordinates-plot",
    "title": "Hands-on Exercise 5",
    "section": "Plotting Static Parallel Coordinates Plot",
    "text": "Plotting Static Parallel Coordinates Plot\n\nPlotting a simple parallel coordinates\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\n\n\n\n\n\nPlotting a parallel coordinates with boxplot\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\n\n\n\n\n\n\nParallel coordinates with facet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\n\n\n\n\n\nRotating x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\n\n\nAdjusting the rotated x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "title": "Hands-on Exercise 5",
    "section": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods",
    "text": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods\n\nThe basic plot\n\nwh &lt;- wh %&gt;%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\n\nRotate axis label\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nChanging the colour scheme\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nParallel coordinates plot with histogram\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-4",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-4",
    "title": "Hands-on Exercise 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(treemap, treemapify, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling",
    "title": "Hands-on Exercise 5",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nImporting the data set\n\nrealis2018 &lt;- read_csv(\"data/realis2018.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling-and-manipulation",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#data-wrangling-and-manipulation",
    "title": "Hands-on Exercise 5",
    "section": "Data Wrangling and Manipulation",
    "text": "Data Wrangling and Manipulation\n\nGrouped summaries without the Pipe\n\nrealis2018_grouped &lt;- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised &lt;- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\n\nGrouped summaries with the pipe\n\nrealis2018_summarised &lt;- realis2018 %&gt;% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %&gt;%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-with-treemap-package",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-with-treemap-package",
    "title": "Hands-on Exercise 5",
    "section": "Designing Treemap with treemap Package",
    "text": "Designing Treemap with treemap Package\n\nDesigning a static treemap\n\nrealis2018_selected &lt;- realis2018_summarised %&gt;%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")\n\n\n\nUsing the basic arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nWorking with vColor and type arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type = \"value\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThe “value” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThe “manual” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nWorking with algorithm argument\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"squarified\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nUsing sortID\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-using-treemapify-package",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-treemap-using-treemapify-package",
    "title": "Hands-on Exercise 5",
    "section": "Designing Treemap using treemapify Package",
    "text": "Designing Treemap using treemapify Package\n\nDesigning a basic treemap\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`),\n       layout = \"scol\",\n       start = \"bottomleft\") + \n  geom_treemap() +\n  scale_fill_gradient(low = \"light blue\", high = \"blue\")\n\n\n\n\n\n\n\n\n\n\nDefining hierarchy\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`),\n       start = \"topleft\") + \n  geom_treemap()\n\n\n\n\n\n\n\n\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap()\n\n\n\n\n\n\n\n\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"gray40\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"gray20\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-interactive-treemap-using-d3treer",
    "href": "Handson_Ex/handson_ex05/Hands-on_Ex05.html#designing-interactive-treemap-using-d3treer",
    "title": "Hands-on Exercise 5",
    "section": "Designing Interactive Treemap using d3treeR",
    "text": "Designing Interactive Treemap using d3treeR\n\nInstalling d3treeR package\n\nlibrary(devtools)\ninstall_github(\"timelyportfolio/d3treeR\")\n\n\nlibrary(d3treeR)\n\n\n\nDesigning An Interactive Treemap\n\ntm &lt;- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\nd3tree(tm,rootname = \"Singapore\" )"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)               \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)      \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)     \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "p &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactivity",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactivity",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "exam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)               \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)      \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)     \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "DT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on Exercise 3",
    "section": "Getting started",
    "text": "Getting started\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\nImporting the data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on Exercise 3",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\nBuilding a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\nBuilding the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "href": "Handson_Ex/handson_ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "title": "Hands-on Exercise 3",
    "section": "Animated Data Visualisation: plotly",
    "text": "Animated Data Visualisation: plotly\n\nBuilding an animated bubble plot: ggplotly() method\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\nBuilding an animated bubble plot: plot_ly() method\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Handson_Ex/handson_ex01/Hands-on_Ex01.html",
    "href": "Handson_Ex/handson_ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below use p_load() of Pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"Data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()   \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()     \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()  \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()   \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)    \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)  \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#getting-started",
    "href": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#getting-started",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below use p_load() of Pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"Data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "href": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "R Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS))"
  },
  {
    "objectID": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "href": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()   \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()     \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()  \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()   \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "href": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)    \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)  \n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "href": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "href": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "href": "Handson_Ex/handson_ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I’m Fang Yu(Iris). This is my personal website to publish my learning journey in ISSS608 Visaul Analytics and Applications."
  },
  {
    "objectID": "Handson_Ex/handson_ex00/Handson_Ex00.html",
    "href": "Handson_Ex/handson_ex00/Handson_Ex00.html",
    "title": "Hands-on Exercise 00 : working with tidyverse",
    "section": "",
    "text": "Getting Started\nLoading tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)\n\n\n\nImporting data\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")\n\n\n\nPivoting data\n\npopdata_long &lt;- popdata_fat %&gt;%\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\")\n\n\n\nExport and Import R data files(.rds)\n\n#|eval: FALSE\nwrite_rds(popdata_long, \"data/popData_long.rds\")\n\n\n#|echo: FALSE\npopdata_long &lt;- read_rds(\"data/popdata_long.rds\")\n\n\n\nSelect and filter columns\n\nrealis2019_filtered &lt;- realis2019 %&gt;%\nselect(`Project Name`, `Type of Sale`, `Transacted Price ($)`, `Property Type`, `Unit Price ($ psm)`) %&gt;%\n  filter(`Property Type` == \"Condominium\"| \n           `Property Type` == \"Apartment\") %&gt;%\n  filter(`Type of Sale` == \"New Sale\") %&gt;%\n  filter(`Unit Price ($ psm)` &lt;= 11000)"
  },
  {
    "objectID": "Handson_Ex/handson_ex02/Hands-on_Ex02.html",
    "href": "Handson_Ex/handson_ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point(color = \"darkslategray3\") +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_bw() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"deepskyblue3\", \n                 fill=\"darkslategray3\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"cyan4\", \n                 fill=\"azure1\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"deepskyblue3\", \n                 fill=\"darkslategray3\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"deepskyblue3\", \n                 fill=\"darkslategray3\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point(color = \"darkslategray3\") +\n  geom_smooth(method=lm, \n              size=0.5) + \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores vs. Maths scores for Primary 3\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_pander() & theme(axis.title.x = element_text(size=8, margin = margin(t=5)),#above\n                          axis.title.y = element_text(size=8, margin = margin(r=5)),\n                          axis.text.x = element_text(size = 8),  \n                          axis.text.y = element_text(size = 6),\n                          plot.title = element_text(size = 10))"
  },
  {
    "objectID": "Handson_Ex/handson_ex02/Hands-on_Ex02.html#getting-started",
    "href": "Handson_Ex/handson_ex02/Hands-on_Ex02.html#getting-started",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Handson_Ex/handson_ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point(color = \"darkslategray3\") +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Handson_Ex/handson_ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_bw() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"deepskyblue3\", \n                 fill=\"darkslategray3\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"cyan4\", \n                 fill=\"azure1\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Handson_Ex/handson_ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"deepskyblue3\", \n                 fill=\"darkslategray3\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"deepskyblue3\", \n                 fill=\"darkslategray3\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point(color = \"darkslategray3\") +\n  geom_smooth(method=lm, \n              size=0.5) + \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores vs. Maths scores for Primary 3\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_pander() & theme(axis.title.x = element_text(size=8, margin = margin(t=5)),#above\n                          axis.title.y = element_text(size=8, margin = margin(r=5)),\n                          axis.text.x = element_text(size = 8),  \n                          axis.text.y = element_text(size = 6),\n                          plot.title = element_text(size = 10))"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-ridgeline-plot",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-ridgeline-plot",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-1",
    "title": "Hands-on Exercise 4",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstalling and launching R packages\n\npacman::p_load(ggstatsplot, tidyverse, qqplotr)\n\n\n\nImporting data\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\nSignificant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\n\nSignificant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-2",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-2",
    "title": "Hands-on Exercise 4",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(readxl, performance, parameters, see)\n\n\nImporting Excel file: readxl methods\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\n\nMultiple Regression Model using lm()\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nModel Diagnostic: checking for multicolinearity:\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: checking normality assumption\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\ncheck_n &lt;- check_normality(model1)\nplot(check_n)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: Check model for homogeneity of variances\n\ncheck_h &lt;- check_heteroscedasticity(model1)\nplot(check_h)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: Complete check\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\n\n\nVisualising Regression Parameters: see methods\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\n\nVisualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-3",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#getting-started-3",
    "title": "Hands-on Exercise 4",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstalling and loading the packages\n\npacman::p_load(plotly, crosstalk, DT, \n               ggdist, ggridges, colorspace,\n               gganimate, tidyverse)\n\n\n\nData import\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\nThe plotThe code\n\n\n\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n\n\nPlotting standard error bars of point estimates\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"cadetblue4\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\nPlotting confidence interval of point estimates\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"cadetblue4\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates with interactive error bars\n\nOriginal ExerciseSelf-Exercising\n\n\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"cadetblue4\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"coral2\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1), plot.title = element_text(size = 9, face = \"bold\")) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntransposed &lt;- my_sum %&gt;%\n  pivot_longer(cols = -RACE, names_to = \"Metric\", values_to = \"Value\") %&gt;%\n  pivot_wider(names_from = RACE, values_from = Value)\n\nggplotly(\n  ggplot(shared_df) +\n    geom_errorbar(aes(\n      x = reorder(RACE, -mean),\n      ymin = mean - 2.58 * se, \n      ymax = mean + 2.58 * se), \n      width = 0.2, \n      colour = \"cadetblue4\", \n      alpha = 0.9, \n      size = 0.5) +\n    geom_point(aes(\n      x = RACE, \n      y = mean, \n      text = paste(\"Race:\", `RACE`, \n                   \"&lt;br&gt;N:\", `n`,\n                   \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                   \"&lt;br&gt;99% CI:[\", \n                   round((mean - 2.58 * se), digits = 2), \",\",\n                   round((mean + 2.58 * se), digits = 2), \"]\")),\n      stat = \"identity\", \n      color = \"coral2\", \n      size = 1.5, \n      alpha = 1) + \n    xlab(\"Race\") + \n    ylab(\"Average Scores\") + \n    theme_minimal() +\n    theme(\n      axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1),\n      plot.title = element_text(size = 9, face = \"bold\")) +\n    ggtitle(\"99% Confidence interval of average maths scores by race\"), \n  tooltip = \"text\"\n)\n\n\n\n\ndatatable(transposed,\n          rownames = FALSE,\n          options = list(pageLength = 5, scrollX = TRUE))"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-ggdist-package",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-ggdist-package",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Uncertainty: ggdist package",
    "text": "Visualising Uncertainty: ggdist package\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_halfeye() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot + Halfeye\")\n\n\n\n\n\n\n\n\n\n95% Confidence level99% Confidence level\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS, color = RACE)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi, point_color = \"coral2\") +\n  labs(\n    title = \"Visualising 95% confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS, color = RACE)) +\n  stat_pointinterval(.width = 0.99,\n  .point = median,\n  .interval = qi, point_color = \"coral2\") +\n  labs(\n    title = \"Visualising 99% confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_eye(\n    show.legend = FALSE, slab_alpha = 0.5  ) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\ndevtools::install_github(\"wilkelab/ungeviz\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nset.seed(123) \n\nsummary_data &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarize(yintercept = mean(MATHS))\n\nggplot(data = exam, aes(x = factor(RACE), y = MATHS)) +\n  geom_point(position = position_jitter(height = 0.3, width = 0.05),\n             size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hline(data = summary_data, aes(yintercept = yintercept, group = RACE),\n             color = \"#D55E00\", size = 1) +\n  theme_bw() +\n  transition_states(RACE, transition_length = 1, state_length = 3)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#installing-and-launching-r-packages-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#installing-and-launching-r-packages-1",
    "title": "Hands-on Exercise 4",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods",
    "text": "FunnelPlotR methods\n\nFunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05)   \n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on Exercise 4",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods-1",
    "href": "Handson_Ex/handson_ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods-1",
    "title": "Hands-on Exercise 4",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nPlotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position.inside = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Handson_Ex/handson_ex07/handson_Ex07.html",
    "href": "Handson_Ex/handson_ex07/handson_Ex07.html",
    "title": "Hands-on exercise 7",
    "section": "",
    "text": "pacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)\n\n\n\n\n\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\n\n\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\n\n\n\nStep 1: Deriving weekday and hour of day fields.\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\nStep 2: Deriving the attacks tibble data frame.\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\nTable after data preparing\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\n\n\n\n\nUse “theme_tufte()” to remove unnecessary chart junk: No border, no axis lines, no grids.\n\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\n\n\ntop_countries &lt;- attacks %&gt;%\n  count(source_country) %&gt;%\n  top_n(4, n) %&gt;%\n  pull(source_country)\n\ngrouped &lt;- attacks %&gt;%\n  filter(source_country %in% top_countries) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, aes(hour, wkday, fill = n)) +\n  geom_tile(color = \"white\", size = 0.1) +\n  theme_tufte(base_family = \"Helvetica\") +\n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                      low = \"sky blue\",\n                      high = \"dark blue\") +\n  labs(x = NULL, y = NULL,\n       title = \"Attacks by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6)) +\n  facet_wrap(~ source_country)\n\n\n\n\n\n\n\n\n\n\n\nStep 1: Deriving attack by country object\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\nStep 2: Preparing the tidy data frame\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\nStep 3: Plotting Multiple Calendar Heatmaps\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\n\nStep 1: Data Import\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\nStep 2: Deriving month and year fields\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\n\nStep 3: Extracting the target country\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\nStep 4: Computing year average arrivals by month\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\nStep 5: Plotting the cycle plot\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")\n\n\n\n\n\n\n\n\n\n\n\nStep 1: Data Import\n\nrice &lt;- read_csv(\"data/rice.csv\")\n\nStep 2: Plotting the slopegraph\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Chang Fang Yu\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex07/handson_Ex07.html#getting-started",
    "href": "Handson_Ex/handson_ex07/handson_Ex07.html#getting-started",
    "title": "Hands-on exercise 7",
    "section": "",
    "text": "pacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)\n\n\n\n\n\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\n\n\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\n\n\n\nStep 1: Deriving weekday and hour of day fields.\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\nStep 2: Deriving the attacks tibble data frame.\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\nTable after data preparing\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11"
  },
  {
    "objectID": "Handson_Ex/handson_ex07/handson_Ex07.html#builing-the-calendar-heatmaps",
    "href": "Handson_Ex/handson_ex07/handson_Ex07.html#builing-the-calendar-heatmaps",
    "title": "Hands-on exercise 7",
    "section": "",
    "text": "Use “theme_tufte()” to remove unnecessary chart junk: No border, no axis lines, no grids.\n\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Handson_Ex/handson_ex07/handson_Ex07.html#building-multiple-calendar-heatmaps",
    "href": "Handson_Ex/handson_ex07/handson_Ex07.html#building-multiple-calendar-heatmaps",
    "title": "Hands-on exercise 7",
    "section": "",
    "text": "top_countries &lt;- attacks %&gt;%\n  count(source_country) %&gt;%\n  top_n(4, n) %&gt;%\n  pull(source_country)\n\ngrouped &lt;- attacks %&gt;%\n  filter(source_country %in% top_countries) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, aes(hour, wkday, fill = n)) +\n  geom_tile(color = \"white\", size = 0.1) +\n  theme_tufte(base_family = \"Helvetica\") +\n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                      low = \"sky blue\",\n                      high = \"dark blue\") +\n  labs(x = NULL, y = NULL,\n       title = \"Attacks by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6)) +\n  facet_wrap(~ source_country)"
  },
  {
    "objectID": "Handson_Ex/handson_ex07/handson_Ex07.html#plotting-multiple-calendar-heatmaps",
    "href": "Handson_Ex/handson_ex07/handson_Ex07.html#plotting-multiple-calendar-heatmaps",
    "title": "Hands-on exercise 7",
    "section": "",
    "text": "Step 1: Deriving attack by country object\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\nStep 2: Preparing the tidy data frame\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\nStep 3: Plotting Multiple Calendar Heatmaps\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Handson_Ex/handson_ex07/handson_Ex07.html#plotting-cycle-plot",
    "href": "Handson_Ex/handson_ex07/handson_Ex07.html#plotting-cycle-plot",
    "title": "Hands-on exercise 7",
    "section": "",
    "text": "Step 1: Data Import\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\nStep 2: Deriving month and year fields\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\n\nStep 3: Extracting the target country\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\nStep 4: Computing year average arrivals by month\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\nStep 5: Plotting the cycle plot\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")"
  },
  {
    "objectID": "Handson_Ex/handson_ex07/handson_Ex07.html#plotting-slopegraph",
    "href": "Handson_Ex/handson_ex07/handson_Ex07.html#plotting-slopegraph",
    "title": "Hands-on exercise 7",
    "section": "",
    "text": "Step 1: Data Import\n\nrice &lt;- read_csv(\"data/rice.csv\")\n\nStep 2: Plotting the slopegraph\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Chang Fang Yu\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex5/In-class_Ex5.html",
    "href": "In-class_Ex/In-class_Ex5/In-class_Ex5.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "pacman::p_load(tidyverse, readxl, SmartEDA, easystats, gtsummary, ggstatsplot)\n\nImporting Data\n\ncar_resale&lt;- read_xls(\"data/ToyotaCorolla.xls\", \"data\")\n\n\nsummary(car_resale)\n\n       Id            Model               Price         Age_08_04    \n Min.   :   1.0   Length:1436        Min.   : 4350   Min.   : 1.00  \n 1st Qu.: 361.8   Class :character   1st Qu.: 8450   1st Qu.:44.00  \n Median : 721.5   Mode  :character   Median : 9900   Median :61.00  \n Mean   : 721.6                      Mean   :10731   Mean   :55.95  \n 3rd Qu.:1081.2                      3rd Qu.:11950   3rd Qu.:70.00  \n Max.   :1442.0                      Max.   :32500   Max.   :80.00  \n   Mfg_Month         Mfg_Year          KM         Quarterly_Tax   \n Min.   : 1.000   Min.   :1998   Min.   :     1   Min.   : 19.00  \n 1st Qu.: 3.000   1st Qu.:1998   1st Qu.: 43000   1st Qu.: 69.00  \n Median : 5.000   Median :1999   Median : 63390   Median : 85.00  \n Mean   : 5.549   Mean   :2000   Mean   : 68533   Mean   : 87.12  \n 3rd Qu.: 8.000   3rd Qu.:2001   3rd Qu.: 87021   3rd Qu.: 85.00  \n Max.   :12.000   Max.   :2004   Max.   :243000   Max.   :283.00  \n     Weight     Guarantee_Period    HP_Bin             CC_bin         \n Min.   :1000   Min.   : 3.000   Length:1436        Length:1436       \n 1st Qu.:1040   1st Qu.: 3.000   Class :character   Class :character  \n Median :1070   Median : 3.000   Mode  :character   Mode  :character  \n Mean   :1072   Mean   : 3.815                                        \n 3rd Qu.:1085   3rd Qu.: 3.000                                        \n Max.   :1615   Max.   :36.000                                        \n     Doors           Gears         Cylinders  Fuel_Type        \n Min.   :2.000   Min.   :3.000   Min.   :4   Length:1436       \n 1st Qu.:3.000   1st Qu.:5.000   1st Qu.:4   Class :character  \n Median :4.000   Median :5.000   Median :4   Mode  :character  \n Mean   :4.033   Mean   :5.026   Mean   :4                     \n 3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:4                     \n Max.   :5.000   Max.   :6.000   Max.   :4                     \n    Color             Met_Color        Automatic       Mfr_Guarantee   \n Length:1436        Min.   :0.0000   Min.   :0.00000   Min.   :0.0000  \n Class :character   1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000  \n Mode  :character   Median :1.0000   Median :0.00000   Median :0.0000  \n                    Mean   :0.6748   Mean   :0.05571   Mean   :0.4095  \n                    3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000  \n                    Max.   :1.0000   Max.   :1.00000   Max.   :1.0000  \n BOVAG_Guarantee       ABS            Airbag_1         Airbag_2     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.0000   Median :1.0000   Median :1.0000  \n Mean   :0.8955   Mean   :0.8134   Mean   :0.9708   Mean   :0.7228  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n     Airco        Automatic_airco   Boardcomputer      CD_Player     \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :0.00000   Median :0.0000   Median :0.0000  \n Mean   :0.5084   Mean   :0.05641   Mean   :0.2946   Mean   :0.2187  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.00000   Max.   :1.0000   Max.   :1.0000  \n  Central_Lock    Powered_Windows Power_Steering       Radio       \n Min.   :0.0000   Min.   :0.000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.000   Median :1.0000   Median :0.0000  \n Mean   :0.5801   Mean   :0.562   Mean   :0.9777   Mean   :0.1462  \n 3rd Qu.:1.0000   3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.000   Max.   :1.0000   Max.   :1.0000  \n   Mistlamps      Sport_Model     Backseat_Divider  Metallic_Rim   \n Min.   :0.000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.000   1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :0.000   Median :0.0000   Median :1.0000   Median :0.0000  \n Mean   :0.257   Mean   :0.3001   Mean   :0.7702   Mean   :0.2047  \n 3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Radio_cassette      Tow_Bar      \n Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000  \n Mean   :0.1455   Mean   :0.2779  \n 3rd Qu.:0.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000  \n\n\n\nglimpse(car_resale)\n\nRows: 1,436\nColumns: 38\n$ Id               &lt;dbl&gt; 81, 1, 2, 3, 4, 5, 6, 7, 8, 44, 45, 46, 47, 49, 51, 6…\n$ Model            &lt;chr&gt; \"TOYOTA Corolla 1.6 5drs 1 4/5-Doors\", \"TOYOTA Coroll…\n$ Price            &lt;dbl&gt; 18950, 13500, 13750, 13950, 14950, 13750, 12950, 1690…\n$ Age_08_04        &lt;dbl&gt; 25, 23, 23, 24, 26, 30, 32, 27, 30, 27, 22, 23, 27, 2…\n$ Mfg_Month        &lt;dbl&gt; 8, 10, 10, 9, 7, 3, 1, 6, 3, 6, 11, 10, 6, 11, 11, 11…\n$ Mfg_Year         &lt;dbl&gt; 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,…\n$ KM               &lt;dbl&gt; 20019, 46986, 72937, 41711, 48000, 38500, 61000, 9461…\n$ Quarterly_Tax    &lt;dbl&gt; 100, 210, 210, 210, 210, 210, 210, 210, 210, 234, 234…\n$ Weight           &lt;dbl&gt; 1180, 1165, 1165, 1165, 1165, 1170, 1170, 1245, 1245,…\n$ Guarantee_Period &lt;dbl&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,…\n$ HP_Bin           &lt;chr&gt; \"100-120\", \"&lt; 100\", \"&lt; 100\", \"&lt; 100\", \"&lt; 100\", \"&lt; 100…\n$ CC_bin           &lt;chr&gt; \"1600\", \"&gt;1600\", \"&gt;1600\", \"&gt;1600\", \"&gt;1600\", \"&gt;1600\", …\n$ Doors            &lt;dbl&gt; 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 3, 3,…\n$ Gears            &lt;dbl&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n$ Cylinders        &lt;dbl&gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,…\n$ Fuel_Type        &lt;chr&gt; \"Petrol\", \"Diesel\", \"Diesel\", \"Diesel\", \"Diesel\", \"Di…\n$ Color            &lt;chr&gt; \"Blue\", \"Blue\", \"Silver\", \"Blue\", \"Black\", \"Black\", \"…\n$ Met_Color        &lt;dbl&gt; 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,…\n$ Automatic        &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Mfr_Guarantee    &lt;dbl&gt; 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,…\n$ BOVAG_Guarantee  &lt;dbl&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ ABS              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airbag_1         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airbag_2         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airco            &lt;dbl&gt; 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Automatic_airco  &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,…\n$ Boardcomputer    &lt;dbl&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ CD_Player        &lt;dbl&gt; 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1,…\n$ Central_Lock     &lt;dbl&gt; 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Powered_Windows  &lt;dbl&gt; 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Power_Steering   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Radio            &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Mistlamps        &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Sport_Model      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,…\n$ Backseat_Divider &lt;dbl&gt; 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Metallic_Rim     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Radio_cassette   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Tow_Bar          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n\n\n\nlist(car_resale)\n\n[[1]]\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\nData Overview\n\ncar_resale %&gt;%\n  ExpData(type =1)\n\n                                          Descriptions     Value\n1                                   Sample size (nrow)      1436\n2                              No. of variables (ncol)        38\n3                    No. of numeric/interger variables        33\n4                              No. of factor variables         0\n5                                No. of text variables         5\n6                             No. of logical variables         0\n7                          No. of identifier variables         1\n8                                No. of date variables         0\n9             No. of zero variance variables (uniform)         1\n10               %. of variables having complete cases 100% (38)\n11   %. of variables having &gt;0% and &lt;50% missing cases    0% (0)\n12 %. of variables having &gt;=50% and &lt;90% missing cases    0% (0)\n13          %. of variables having &gt;=90% missing cases    0% (0)\n\n\n\ncar_resale %&gt;%\n  ExpData(type =2)\n\n   Index    Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1      1               Id       numeric     1436             0              0\n2      2            Model     character     1436             0              0\n3      3            Price       numeric     1436             0              0\n4      4        Age_08_04       numeric     1436             0              0\n5      5        Mfg_Month       numeric     1436             0              0\n6      6         Mfg_Year       numeric     1436             0              0\n7      7               KM       numeric     1436             0              0\n8      8    Quarterly_Tax       numeric     1436             0              0\n9      9           Weight       numeric     1436             0              0\n10    10 Guarantee_Period       numeric     1436             0              0\n11    11           HP_Bin     character     1436             0              0\n12    12           CC_bin     character     1436             0              0\n13    13            Doors       numeric     1436             0              0\n14    14            Gears       numeric     1436             0              0\n15    15        Cylinders       numeric     1436             0              0\n16    16        Fuel_Type     character     1436             0              0\n17    17            Color     character     1436             0              0\n18    18        Met_Color       numeric     1436             0              0\n19    19        Automatic       numeric     1436             0              0\n20    20    Mfr_Guarantee       numeric     1436             0              0\n21    21  BOVAG_Guarantee       numeric     1436             0              0\n22    22              ABS       numeric     1436             0              0\n23    23         Airbag_1       numeric     1436             0              0\n24    24         Airbag_2       numeric     1436             0              0\n25    25            Airco       numeric     1436             0              0\n26    26  Automatic_airco       numeric     1436             0              0\n27    27    Boardcomputer       numeric     1436             0              0\n28    28        CD_Player       numeric     1436             0              0\n29    29     Central_Lock       numeric     1436             0              0\n30    30  Powered_Windows       numeric     1436             0              0\n31    31   Power_Steering       numeric     1436             0              0\n32    32            Radio       numeric     1436             0              0\n33    33        Mistlamps       numeric     1436             0              0\n34    34      Sport_Model       numeric     1436             0              0\n35    35 Backseat_Divider       numeric     1436             0              0\n36    36     Metallic_Rim       numeric     1436             0              0\n37    37   Radio_cassette       numeric     1436             0              0\n38    38          Tow_Bar       numeric     1436             0              0\n   No_of_distinct_values\n1                   1436\n2                    372\n3                    236\n4                     77\n5                     12\n6                      7\n7                   1263\n8                     13\n9                     59\n10                     9\n11                     3\n12                     3\n13                     4\n14                     4\n15                     1\n16                     3\n17                    10\n18                     2\n19                     2\n20                     2\n21                     2\n22                     2\n23                     2\n24                     2\n25                     2\n26                     2\n27                     2\n28                     2\n29                     2\n30                     2\n31                     2\n32                     2\n33                     2\n34                     2\n35                     2\n36                     2\n37                     2\n38                     2\n\n\n\nsummary1 &lt;- car_resale %&gt;%\n  ExpData(type = 1)\n\n\ncolnames(car_resale)\n\n [1] \"Id\"               \"Model\"            \"Price\"            \"Age_08_04\"       \n [5] \"Mfg_Month\"        \"Mfg_Year\"         \"KM\"               \"Quarterly_Tax\"   \n [9] \"Weight\"           \"Guarantee_Period\" \"HP_Bin\"           \"CC_bin\"          \n[13] \"Doors\"            \"Gears\"            \"Cylinders\"        \"Fuel_Type\"       \n[17] \"Color\"            \"Met_Color\"        \"Automatic\"        \"Mfr_Guarantee\"   \n[21] \"BOVAG_Guarantee\"  \"ABS\"              \"Airbag_1\"         \"Airbag_2\"        \n[25] \"Airco\"            \"Automatic_airco\"  \"Boardcomputer\"    \"CD_Player\"       \n[29] \"Central_Lock\"     \"Powered_Windows\"  \"Power_Steering\"   \"Radio\"           \n[33] \"Mistlamps\"        \"Sport_Model\"      \"Backseat_Divider\" \"Metallic_Rim\"    \n[37] \"Radio_cassette\"   \"Tow_Bar\"         \n\n\n\ncol &lt;- c(\"Mfg_Month\", \"HP_Bin\", \"CC_bin\", \"Doors\", \"Gears\",\n         \"Cylinders\", \"Fuel_Type\", \"Color\", \"Met_Color\", \"Automatic\",\n         \"Mfr_Guarantee\", \"BOVAG_Guarantee\", \"ABS\", \"Airbag_1\",\n         \"Airbag_2\", \"Airco\", \"Automatic_airco\", \"Automatic_airco\", \n         \"Boardcomputer\", \"CD_Player\", \"Central_Lock\", \"Powered_Windows\",\n         \"Power_Steering\", \"Radio\",\"Mistlamps\", \"Sport_Model\", \"Backseat_Divider\",\n         \"Metallic_Rim\", \"Radio_cassette\", \"Tow_Bar\")\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \"data\") %&gt;%\n  mutate(Id = as.character(Id)) %&gt;%\n  mutate(across(all_of(col), as.factor))\n\n\ncar_resale %&gt;%\n  ExpNumViz(target= NULL, nlim=10, Page =c(2,2))\n\n$`0`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncar_resale %&gt;%\n  ExpNumViz(target= \"Price\", nlim=10, Page =c(2,2))\n\n$`0`\n\n\n\n\n\n\n\n\n\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\nCheck collinearlity of model\n\ncheck_c &lt;- check_collinearity(model)\ncheck_c\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n\n\nCheck normality of model1\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, data = car_resale)\ncheck_normality(model1)\n\nWarning: Non-normality of residuals detected (p &lt; .001).\n\n\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + Weight + Guarantee_Period, data = car_resale)\ncheck_normality(model1)\n\nWarning: Non-normality of residuals detected (p &lt; .001).\n\n\n\n\nModel1\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, data = car_resale)\ncheck_collinearity(model1)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model1)\nplot(check_c)\n\n\n\n\n\n\n\n\n\ntbl_regression(model1, intercept = TRUE)\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\n(Intercept)\n-2,636,783\n-3,150,331, -2,123,236\n&lt;0.001\n\n\nAge_08_04\n-14\n-35, 7.1\n0.2\n\n\nMfg_Year\n1,315\n1,059, 1,571\n&lt;0.001\n\n\nKM\n-0.02\n-0.03, -0.02\n&lt;0.001\n\n\nWeight\n19\n17, 21\n&lt;0.001\n\n\nGuarantee_Period\n28\n3.8, 52\n0.023\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n\ntbl_regression(model1, intercept = TRUE) %&gt;%\n  add_glance_source_note(\n    label = list(sigma~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, AIC, statistic, p.value, sigma)\n  )\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n-2,636,783\n-3,150,331, -2,123,236\n&lt;0.001\n    Age_08_04\n-14\n-35, 7.1\n0.2\n    Mfg_Year\n1,315\n1,059, 1,571\n&lt;0.001\n    KM\n-0.02\n-0.03, -0.02\n&lt;0.001\n    Weight\n19\n17, 21\n&lt;0.001\n    Guarantee_Period\n28\n3.8, 52\n0.023\n  \n  \n    \n      R² = 0.859; Adjusted R² = 0.858; AIC = 24,819; Statistic = 1,737; p-value = &lt;0.001; σ = 1,366\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\np_model1 &lt;- parameters(model1)\n\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\nggcoefstats(model1, output = \"plot\")"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In this exercise, we are going to utilize the Ship Performance Clustering Dataset to perform a clustering analysis. This dataset compromises numerical and categorical features representing different ship types, operational characteristics and other facters, enabling the segmentation of vessels based on key performance metrics, providing insights into their efficiency, cost-effectiveness and operational behaviors.\n\n\nThis analysis was conducted by R Studio, leveraging various statistical and visualization packages to facilitate data preprocessing, clustering, and result interpretation. The following R packages were employed:\n\npacman::p_load(tidyverse, haven, knitr,\n               patchwork, ggthemes, scales,\n               ggridges, ggpubr, gganimate, ggraph,corrplot, ggstatsplot,\n              plotly, caret, fastDummies, factoextra, cluster, Rtsne, ggfortify, BiocManager, rgl, ggthemes, colorspace, ggdist, reshape2, scatterplot3d)\n\n\n\n\nThe Ship Performance Clustering\n\n\n\n\n\nShip &lt;- read_csv(\"data/Ship_Performance_Dataset.csv\")\n\n\n\nGlimpse() shows it consists of 2736 rows and 18 columns, including 1 date type, 5 categorical type, and 12 numerical type. By Datatable, We can check the detail of the dataset.\n\nGlimpseDatatable\n\n\n\nglimpse(Ship)\n\nRows: 2,736\nColumns: 18\n$ Date                    &lt;date&gt; 2023-06-04, 2023-06-11, 2023-06-18, 2023-06-2…\n$ Ship_Type               &lt;chr&gt; \"Container Ship\", \"Fish Carrier\", \"Container S…\n$ Route_Type              &lt;chr&gt; \"None\", \"Short-haul\", \"Long-haul\", \"Transocean…\n$ Engine_Type             &lt;chr&gt; \"Heavy Fuel Oil (HFO)\", \"Steam Turbine\", \"Dies…\n$ Maintenance_Status      &lt;chr&gt; \"Critical\", \"Good\", \"Fair\", \"Fair\", \"Fair\", \"F…\n$ Speed_Over_Ground_knots &lt;dbl&gt; 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         &lt;dbl&gt; 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    &lt;dbl&gt; 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            &lt;dbl&gt; 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       &lt;chr&gt; \"Moderate\", \"Rough\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       &lt;dbl&gt; 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    &lt;dbl&gt; 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  &lt;dbl&gt; 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   &lt;dbl&gt; 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   &lt;dbl&gt; 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   &lt;dbl&gt; 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     &lt;dbl&gt; 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage &lt;dbl&gt; 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n\n\n\n\n\nDT::datatable(Ship, class= \"compact\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Distribution of Numerical VariablesBox Plot of Numerical VariablesDistribution of Categorical Variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation:\nThe analysis of numerical variables through histograms and standardized box plots reveals a well-balanced dataset with consistent dispersion after standardization. Weekly_Voyage_Count shows a discrete pattern, while Operational_Cost_USD and Revenue_per_Voyage_USD exhibit high natural variance, which may impact business insights. The absence of extreme outliers ensures no single variable skews the dataset.\nCategorical variables are well-distributed with minimal missing data. Diesel, HFO, and Steam Turbine dominate engine types, maintenance status is evenly spread across “Critical,” “Fair,” and “Good,” and ship types and routes are diverse, with Tankers and Bulk Carriers being more frequent. Weather conditions mainly fall into “Calm,” “Moderate,” or “Rough.\n\n\n\n\n\nEngine TypeRoute TypeShip TypeWeather Condition\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation:\nOverall, operational costs do not vary significantly across different engine types, route types, ship types, and weather conditions. Diesel has the most concentrated distribution of operational costs. The route type with the highest median operational cost is Transoceanic. Among different weather conditions, None (possibly representing a mixed weather type) has the highest operational cost.\n\nEngine Type Vs Efficiency nm per kwhEngine Power kw vs. Engine Type\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation:\nNone type of engine has higher fuel efficiency. However, there is no significant difference in enginer Power across different engine type.\n\n\n\n\n\n\n\n\nDrop ‘Date’ variable.\nOne-hot encoding ‘Engine_Type, ’Route_Type’, ‘Ship_Type’, ‘Maintenance_Status’\n\n\n#| include: False\nShip_encoded &lt;- dummy_cols(Ship, \n                           select_columns = c(\"Engine_Type\", \"Route_Type\", \"Ship_Type\", \"Weather_Condition\", \"Maintenance_Status\"),\n                           remove_first_dummy = TRUE, \n                           remove_selected_columns = TRUE)\n\n\nCheck Result\n\n\nstr(Ship_encoded)  \n\ntibble [2,736 × 29] (S3: tbl_df/tbl/data.frame)\n $ Speed_Over_Ground_knots         : num [1:2736] 12.6 10.4 20.7 21.1 13.7 ...\n $ Engine_Power_kW                 : num [1:2736] 2063 1796 1649 915 1090 ...\n $ Distance_Traveled_nm            : num [1:2736] 1031 1060 659 1127 1445 ...\n $ Draft_meters                    : num [1:2736] 14.13 14.65 7.2 11.79 9.73 ...\n $ Cargo_Weight_tons               : num [1:2736] 1959 162 178 1737 261 ...\n $ Operational_Cost_USD            : num [1:2736] 483832 483388 448543 261350 287718 ...\n $ Revenue_per_Voyage_USD          : num [1:2736] 292183 883766 394019 87551 676121 ...\n $ Turnaround_Time_hours           : num [1:2736] 25.9 63.2 49.4 22.4 64.2 ...\n $ Efficiency_nm_per_kWh           : num [1:2736] 1.455 0.29 0.5 0.703 1.331 ...\n $ Seasonal_Impact_Score           : num [1:2736] 1.416 0.886 1.406 1.371 0.583 ...\n $ Weekly_Voyage_Count             : num [1:2736] 1 6 9 1 8 7 3 6 8 2 ...\n $ Average_Load_Percentage         : num [1:2736] 93.8 93.9 96.2 66.2 80 ...\n $ Engine_Type_Heavy Fuel Oil (HFO): int [1:2736] 1 0 0 0 0 1 1 0 1 0 ...\n $ Engine_Type_None                : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Engine_Type_Steam Turbine       : int [1:2736] 0 1 0 1 0 0 0 0 0 0 ...\n $ Route_Type_Long-haul            : int [1:2736] 0 0 1 0 0 1 0 0 0 1 ...\n $ Route_Type_None                 : int [1:2736] 1 0 0 0 0 0 0 0 0 0 ...\n $ Route_Type_Short-haul           : int [1:2736] 0 1 0 0 0 0 0 1 0 0 ...\n $ Route_Type_Transoceanic         : int [1:2736] 0 0 0 1 1 0 1 0 0 0 ...\n $ Ship_Type_Container Ship        : int [1:2736] 1 0 1 0 0 0 0 1 0 1 ...\n $ Ship_Type_Fish Carrier          : int [1:2736] 0 1 0 0 1 1 1 0 0 0 ...\n $ Ship_Type_None                  : int [1:2736] 0 0 0 0 0 0 0 0 1 0 ...\n $ Ship_Type_Tanker                : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Weather_Condition_Moderate      : int [1:2736] 1 0 1 1 1 0 0 1 1 0 ...\n $ Weather_Condition_None          : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Weather_Condition_Rough         : int [1:2736] 0 1 0 0 0 1 1 0 0 0 ...\n $ Maintenance_Status_Fair         : int [1:2736] 0 0 1 1 1 1 0 0 0 1 ...\n $ Maintenance_Status_Good         : int [1:2736] 0 1 0 0 0 0 0 0 1 0 ...\n $ Maintenance_Status_None         : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n\n\n\nPerform Normalization\n\n\nnumerical_vars &lt;- c(\"Speed_Over_Ground_knots\", \"Engine_Power_kW\", \"Distance_Traveled_nm\",\n                    \"Draft_meters\", \"Cargo_Weight_tons\", \"Operational_Cost_USD\",\n                    \"Revenue_per_Voyage_USD\", \"Turnaround_Time_hours\", \"Efficiency_nm_per_kWh\",\n                    \"Seasonal_Impact_Score\", \"Weekly_Voyage_Count\", \"Average_Load_Percentage\")\nShip_scaled &lt;- Ship_encoded \n\nShip_scaled[numerical_vars] &lt;- scale(Ship_scaled[numerical_vars])\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation:\nFrom the correlogram, we can see that there is almost no significant linear relationship between the variables.Thus, We need to perform Z-standardization and use PCA for dimensionality reduction to improve clustering effectiveness. Additionally, the Silhouette Score should be used to determine the optimal value of K.\n\n\n\n\n\n\n\nElbow MethodSilhouette Method\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBased on the Silhouette Method, the optimal number of clusters (K) is determined to be 3. This is identified as the value where the Silhouette Score is relatively higher compared to other K values, indicating better-defined clusters. While K=2 has the highest score, the next best local maximum occurs at K=3, making it a balanced choice for clustering.\nTherefore, K=3 is recommended for the clustering analysis, ensuring a good trade-off between cluster compactness and separation.\n\n\n\n\n\nImportance of components:\n                           PC1     PC2    PC3     PC4     PC5     PC6     PC7\nStandard deviation     1.24147 1.22404 1.2053 1.16804 1.15556 1.14377 1.12295\nProportion of Variance 0.05315 0.05166 0.0501 0.04705 0.04605 0.04511 0.04348\nCumulative Proportion  0.05315 0.10481 0.1549 0.20195 0.24800 0.29311 0.33659\n                           PC8     PC9    PC10    PC11    PC12    PC13    PC14\nStandard deviation     1.08146 1.06935 1.06292 1.04270 1.03616 1.02922 1.02355\nProportion of Variance 0.04033 0.03943 0.03896 0.03749 0.03702 0.03653 0.03613\nCumulative Proportion  0.37692 0.41635 0.45531 0.49280 0.52982 0.56635 0.60248\n                         PC15    PC16    PC17    PC18    PC19    PC20   PC21\nStandard deviation     1.0118 1.00777 0.99960 0.98735 0.98305 0.97878 0.9664\nProportion of Variance 0.0353 0.03502 0.03446 0.03362 0.03332 0.03303 0.0322\nCumulative Proportion  0.6378 0.67280 0.70725 0.74087 0.77419 0.80723 0.8394\n                         PC22    PC23    PC24    PC25    PC26    PC27    PC28\nStandard deviation     0.9572 0.94582 0.94161 0.68200 0.67419 0.65242 0.55855\nProportion of Variance 0.0316 0.03085 0.03057 0.01604 0.01567 0.01468 0.01076\nCumulative Proportion  0.8710 0.90187 0.93245 0.94848 0.96416 0.97884 0.98959\n                          PC29\nStandard deviation     0.54935\nProportion of Variance 0.01041\nCumulative Proportion  1.00000\n\n\nScreeplot\n\n\n\n\n\n\n\n\n\nObservation:\nFrom the PCA results and the Scree Plot, we can see that the cumulative variance explained by the first 20 principal components reaches 80.7%. However, the variance explained by each individual principal component is not very high. To reduce dimensionality while retaining the key information, we select only the first 20 principal components for analysis.\n\n\n\nFrom the PCA results, we selected the top 20 components and transformed the data into a new dimension-reduced dataset. When K = 3 PC 4 and PC5 show the best clsutering result. Hence We only show PC4 vs. PC5 2D plot and (PC3, PC4, PC5) 3D plot.\n\n\n\n\n\n\n\n\n\n\nNext, by PCA Loading plot, we can interpret the importance of features in reducing dimensionality while retaining essential information. The first 5 principal components (PCs) are selected ([, 1:5]), which means only the top five components are retained.\n\n\n\n\n\n\n\n\n\n\n\n\nThrough the PCA Loading Heatmap, we identified the key variables that significantly impact PC3, PC4, and PC5. Then, by comparing with the 3D clustering results, we determined which variables have the greatest influence on each cluster.\nCluster 1 (Red) - High Operational Cost & Low Efficiency\nKey Influencing Variables:\n\nHigh Operational Cost (Operational_Cost_USD, PC3, PC4)\nSteam Turbine Engine (Engine_Type_Steam Turbine, PC3, PC5)\nLow Revenue per Voyage (Revenue_per_Voyage_USD, PC3, PC5, negative correlation)\nTransoceanic Route (Route_Type_Transoceanic, PC3)\nLow Speed (Speed_Over_Ground_knots, PC4, PC5)\n\nBusiness Insights:\n\nThis cluster represents old, high-cost ships that typically use steam turbine engines and operate on long transoceanic routes with relatively low revenue generation.\nDue to high fuel consumption and low speed, these ships exhibit low operational efficiency.\n\nCluster 2 (Blue) - Short-haul, Low Cargo & Weather-affected Operations\nKey Influencing Variables:\n\nOperates in Harsh Weather Conditions (Weather_Condition_Rough, PC3, PC4, PC5)\nLow Cargo Weight (Cargo_Weight_tons, PC3, PC4, PC5, negative correlation)\nLow Voyage Frequency (Weekly_Voyage_Count, PC4)\nShort-haul Routes (Route_Type_Short-haul, PC5)\nFair Maintenance Status (Maintenance_Status_Fair, PC3)\n\nBusiness Insights:\n\nThese ships operate in challenging weather conditions, leading to lower voyage frequency and cargo loads.\nLikely to be ferries, small transport vessels, or specialized ships designed for extreme environments (e.g., polar regions or storm-prone areas).\nLower utilization rates may impact profitability.\n\nCluster 3 (Green) - High-Efficiency, High Revenue, Long-haul Ships\nKey Influencing Variables:\n\nLong Travel Distance (Distance_Traveled_nm, PC3, PC4)\nHigh Revenue per Voyage (Revenue_per_Voyage_USD, PC3, PC5)\nGood Maintenance Status (Maintenance_Status_Good, PC3, PC5)\nHigh Engine Power (Engine_Power_kW, PC4)\nLong-haul Routes (Route_Type_Long-haul, PC5)\nHigh Speed (Speed_Over_Ground_knots, PC4, PC5)\n\nBusiness Insights:\n\nThese ships demonstrate high efficiency and revenue generation, making them well-suited for long-haul, high-profit operations.\nGood maintenance conditions and high engine power enable optimal operational performance.\nLikely to be modern, fuel-efficient cargo ships or cruise liners.\n\nNext, we are going to dive deep into the characteristics of 3 cluster.\nFirst, calculate the mean of each cluster in PCA.\nBelow, we visualize the mean and standard deviation of each principal component (PC).\n\n\n\n\n\n [1] \"Cluster\"   \"PC1_mean\"  \"PC1_sd\"    \"PC2_mean\"  \"PC2_sd\"    \"PC3_mean\" \n [7] \"PC3_sd\"    \"PC4_mean\"  \"PC4_sd\"    \"PC5_mean\"  \"PC5_sd\"    \"PC6_mean\" \n[13] \"PC6_sd\"    \"PC7_mean\"  \"PC7_sd\"    \"PC8_mean\"  \"PC8_sd\"    \"PC9_mean\" \n[19] \"PC9_sd\"    \"PC10_mean\" \"PC10_sd\"   \"PC11_mean\" \"PC11_sd\"   \"PC12_mean\"\n[25] \"PC12_sd\"   \"PC13_mean\" \"PC13_sd\"   \"PC14_mean\" \"PC14_sd\"   \"PC15_mean\"\n[31] \"PC15_sd\"   \"PC16_mean\" \"PC16_sd\"   \"PC17_mean\" \"PC17_sd\"   \"PC18_mean\"\n[37] \"PC18_sd\"   \"PC19_mean\" \"PC19_sd\"   \"PC20_mean\" \"PC20_sd\"  \n\n\n\n\n\n\n\n\n\nObservation:\nFrom the plot above we can know that 1. PC1, PC3, PC4, PC5, and PC6 are the key features distinguishing different clusters. 2. PC3 (Operational Cost), PC4 (Speed), PC5 (Maintenance Status), and PC6 (Fuel Efficiency) are critical factors. 3. Cluster 1 (High Cost), Cluster 2 (Short-haul Navigation), and Cluster 3 (High-efficiency Long-haul) show significant differences in these characteristics.\n\n\n\nBelow is a visualization where we can observe the distribution of categorical variables in each cluster.\n\n\n\n\n\n\n\n\n\nThis stacked bar chart shows the distribution of categorical features across different clusters. Each cluster is represented by a bar, and the different colors indicate the proportion of each categorical feature within the cluster.\nKey observation:\n\nEngine Type Distribution Across Clusters\n\n\nCluster 1 has a high proportion of Engine_Type_None\nCluster 2 has a significant proportion of Engine_Type_Heavy Fuel Oil (HFO) and Engine_Type_Steam Turbine, while cluster 3 has more proportion of Engine_Type_Steam Turbine than Engine_Type_Heavy Fuel Oil (HFO).\n\n2. Maintenance Status Differences\n\nAll three clusters have an even distribution across the tree maintenance status.\n\n3. Route Type Variations\n\nAll three clusters have an even distribution across the four route types.\n\n4. Ship Type Distribution\n\nCluster 1, 2 has a higher proportion of Ship_Type_Tanker and Ship_Type_Fish Carrier\nCluster 3 have more Ship_Type_Carrier suggesting a focus on cargo and fishing ships.\n\n5. Weather Conditions\n\nCluster 1 and Cluster 2 have a more balanced mix of Weather_Condition_Moderate and Weather_Condition_Rough.\nCluster 3 has a higher proportion of Weather_Condition_None.\n\n\n\n\n\nThe clustering analysis reveals three distinct fleet segments, each with unique operational characteristics.\nCluster 1 (Red) consists of older, high-cost vessels, primarily utilizing steam turbine engines and operating on transoceanic routes. These ships exhibit low operational efficiency, with high fuel consumption, lower speeds, and reduced revenue per voyage. They also have a higher proportion of tankers and fish carriers, indicating their primary role in transporting bulk goods or specific cargo types. Despite being evenly distributed across maintenance statuses, these vessels likely require modernization or fuel optimization to remain competitive.\nCluster 2 (Blue) represents short-haul vessels that operate with low cargo weight and lower voyage frequency, often navigating harsh weather conditions. These ships frequently use heavy fuel oil (HFO) or steam turbine engines, suggesting potential cost inefficiencies due to fuel consumption. Their balanced mix of moderate and rough weather conditions implies they operate in challenging environments, possibly coastal regions or storm-prone areas. With a significant proportion of tankers and fish carriers, these vessels may serve niche markets but face profitability challenges due to lower utilization rates.\nCluster 3 (Green) includes modern, high-efficiency cargo ships designed for long-haul operations, covering greater distances at higher speeds. These vessels generate high revenue per voyage, supported by strong engine power and well-maintained conditions. With a higher proportion of cargo carriers, this cluster is optimized for large-scale transport, making it the most cost-effective fleet segment. They also tend to operate in calmer weather conditions, reducing operational risks.\nAcross all clusters, route types and maintenance statuses are evenly distributed, ensuring no specific segment dominates a particular operational category. However, Cluster 1 and Cluster 2 contain more tankers and fish carriers, whereas Cluster 3 is dominated by cargo carriers, reinforcing its role in efficient, high-revenue transport. These insights highlight the need for modernization in Cluster 1, risk mitigation strategies in Cluster 2, and potential expansion opportunities for the efficient vessels in Cluster 3.\n\n\n\nR for Visual Analytics Rstudio/Cheatsheets"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#overview",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#overview",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In this exercise, we are going to utilize the Ship Performance Clustering Dataset to perform a clustering analysis. This dataset compromises numerical and categorical features representing different ship types, operational characteristics and other facters, enabling the segmentation of vessels based on key performance metrics, providing insights into their efficiency, cost-effectiveness and operational behaviors.\n\n\nThis analysis was conducted by R Studio, leveraging various statistical and visualization packages to facilitate data preprocessing, clustering, and result interpretation. The following R packages were employed:\n\npacman::p_load(tidyverse, haven, knitr,\n               patchwork, ggthemes, scales,\n               ggridges, ggpubr, gganimate, ggraph,corrplot, ggstatsplot,\n              plotly, caret, fastDummies, factoextra, cluster, Rtsne, ggfortify, BiocManager, rgl, ggthemes, colorspace, ggdist, reshape2, scatterplot3d)\n\n\n\n\nThe Ship Performance Clustering"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#data-pre-processing",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#data-pre-processing",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Ship &lt;- read_csv(\"data/Ship_Performance_Dataset.csv\")\n\n\n\nGlimpse() shows it consists of 2736 rows and 18 columns, including 1 date type, 5 categorical type, and 12 numerical type. By Datatable, We can check the detail of the dataset.\n\nGlimpseDatatable\n\n\n\nglimpse(Ship)\n\nRows: 2,736\nColumns: 18\n$ Date                    &lt;date&gt; 2023-06-04, 2023-06-11, 2023-06-18, 2023-06-2…\n$ Ship_Type               &lt;chr&gt; \"Container Ship\", \"Fish Carrier\", \"Container S…\n$ Route_Type              &lt;chr&gt; \"None\", \"Short-haul\", \"Long-haul\", \"Transocean…\n$ Engine_Type             &lt;chr&gt; \"Heavy Fuel Oil (HFO)\", \"Steam Turbine\", \"Dies…\n$ Maintenance_Status      &lt;chr&gt; \"Critical\", \"Good\", \"Fair\", \"Fair\", \"Fair\", \"F…\n$ Speed_Over_Ground_knots &lt;dbl&gt; 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         &lt;dbl&gt; 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    &lt;dbl&gt; 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            &lt;dbl&gt; 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       &lt;chr&gt; \"Moderate\", \"Rough\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       &lt;dbl&gt; 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    &lt;dbl&gt; 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  &lt;dbl&gt; 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   &lt;dbl&gt; 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   &lt;dbl&gt; 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   &lt;dbl&gt; 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     &lt;dbl&gt; 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage &lt;dbl&gt; 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n\n\n\n\n\nDT::datatable(Ship, class= \"compact\")"
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysiseda",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysiseda",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The Distribution of Numerical VariablesBox Plot of Numerical VariablesDistribution of Categorical Variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation:\nThe analysis of numerical variables through histograms and standardized box plots reveals a well-balanced dataset with consistent dispersion after standardization. Weekly_Voyage_Count shows a discrete pattern, while Operational_Cost_USD and Revenue_per_Voyage_USD exhibit high natural variance, which may impact business insights. The absence of extreme outliers ensures no single variable skews the dataset.\nCategorical variables are well-distributed with minimal missing data. Diesel, HFO, and Steam Turbine dominate engine types, maintenance status is evenly spread across “Critical,” “Fair,” and “Good,” and ship types and routes are diverse, with Tankers and Bulk Carriers being more frequent. Weather conditions mainly fall into “Calm,” “Moderate,” or “Rough.\n\n\n\n\n\nEngine TypeRoute TypeShip TypeWeather Condition\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation:\nOverall, operational costs do not vary significantly across different engine types, route types, ship types, and weather conditions. Diesel has the most concentrated distribution of operational costs. The route type with the highest median operational cost is Transoceanic. Among different weather conditions, None (possibly representing a mixed weather type) has the highest operational cost.\n\nEngine Type Vs Efficiency nm per kwhEngine Power kw vs. Engine Type\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation:\nNone type of engine has higher fuel efficiency. However, there is no significant difference in enginer Power across different engine type."
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#prepare-data-for-clustering-analysis",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#prepare-data-for-clustering-analysis",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Drop ‘Date’ variable.\nOne-hot encoding ‘Engine_Type, ’Route_Type’, ‘Ship_Type’, ‘Maintenance_Status’\n\n\n#| include: False\nShip_encoded &lt;- dummy_cols(Ship, \n                           select_columns = c(\"Engine_Type\", \"Route_Type\", \"Ship_Type\", \"Weather_Condition\", \"Maintenance_Status\"),\n                           remove_first_dummy = TRUE, \n                           remove_selected_columns = TRUE)\n\n\nCheck Result\n\n\nstr(Ship_encoded)  \n\ntibble [2,736 × 29] (S3: tbl_df/tbl/data.frame)\n $ Speed_Over_Ground_knots         : num [1:2736] 12.6 10.4 20.7 21.1 13.7 ...\n $ Engine_Power_kW                 : num [1:2736] 2063 1796 1649 915 1090 ...\n $ Distance_Traveled_nm            : num [1:2736] 1031 1060 659 1127 1445 ...\n $ Draft_meters                    : num [1:2736] 14.13 14.65 7.2 11.79 9.73 ...\n $ Cargo_Weight_tons               : num [1:2736] 1959 162 178 1737 261 ...\n $ Operational_Cost_USD            : num [1:2736] 483832 483388 448543 261350 287718 ...\n $ Revenue_per_Voyage_USD          : num [1:2736] 292183 883766 394019 87551 676121 ...\n $ Turnaround_Time_hours           : num [1:2736] 25.9 63.2 49.4 22.4 64.2 ...\n $ Efficiency_nm_per_kWh           : num [1:2736] 1.455 0.29 0.5 0.703 1.331 ...\n $ Seasonal_Impact_Score           : num [1:2736] 1.416 0.886 1.406 1.371 0.583 ...\n $ Weekly_Voyage_Count             : num [1:2736] 1 6 9 1 8 7 3 6 8 2 ...\n $ Average_Load_Percentage         : num [1:2736] 93.8 93.9 96.2 66.2 80 ...\n $ Engine_Type_Heavy Fuel Oil (HFO): int [1:2736] 1 0 0 0 0 1 1 0 1 0 ...\n $ Engine_Type_None                : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Engine_Type_Steam Turbine       : int [1:2736] 0 1 0 1 0 0 0 0 0 0 ...\n $ Route_Type_Long-haul            : int [1:2736] 0 0 1 0 0 1 0 0 0 1 ...\n $ Route_Type_None                 : int [1:2736] 1 0 0 0 0 0 0 0 0 0 ...\n $ Route_Type_Short-haul           : int [1:2736] 0 1 0 0 0 0 0 1 0 0 ...\n $ Route_Type_Transoceanic         : int [1:2736] 0 0 0 1 1 0 1 0 0 0 ...\n $ Ship_Type_Container Ship        : int [1:2736] 1 0 1 0 0 0 0 1 0 1 ...\n $ Ship_Type_Fish Carrier          : int [1:2736] 0 1 0 0 1 1 1 0 0 0 ...\n $ Ship_Type_None                  : int [1:2736] 0 0 0 0 0 0 0 0 1 0 ...\n $ Ship_Type_Tanker                : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Weather_Condition_Moderate      : int [1:2736] 1 0 1 1 1 0 0 1 1 0 ...\n $ Weather_Condition_None          : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n $ Weather_Condition_Rough         : int [1:2736] 0 1 0 0 0 1 1 0 0 0 ...\n $ Maintenance_Status_Fair         : int [1:2736] 0 0 1 1 1 1 0 0 0 1 ...\n $ Maintenance_Status_Good         : int [1:2736] 0 1 0 0 0 0 0 0 1 0 ...\n $ Maintenance_Status_None         : int [1:2736] 0 0 0 0 0 0 0 0 0 0 ...\n\n\n\nPerform Normalization\n\n\nnumerical_vars &lt;- c(\"Speed_Over_Ground_knots\", \"Engine_Power_kW\", \"Distance_Traveled_nm\",\n                    \"Draft_meters\", \"Cargo_Weight_tons\", \"Operational_Cost_USD\",\n                    \"Revenue_per_Voyage_USD\", \"Turnaround_Time_hours\", \"Efficiency_nm_per_kWh\",\n                    \"Seasonal_Impact_Score\", \"Weekly_Voyage_Count\", \"Average_Load_Percentage\")\nShip_scaled &lt;- Ship_encoded \n\nShip_scaled[numerical_vars] &lt;- scale(Ship_scaled[numerical_vars])\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation:\nFrom the correlogram, we can see that there is almost no significant linear relationship between the variables.Thus, We need to perform Z-standardization and use PCA for dimensionality reduction to improve clustering effectiveness. Additionally, the Silhouette Score should be used to determine the optimal value of K."
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#perform-clustering-analysis",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#perform-clustering-analysis",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Elbow MethodSilhouette Method\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBased on the Silhouette Method, the optimal number of clusters (K) is determined to be 3. This is identified as the value where the Silhouette Score is relatively higher compared to other K values, indicating better-defined clusters. While K=2 has the highest score, the next best local maximum occurs at K=3, making it a balanced choice for clustering.\nTherefore, K=3 is recommended for the clustering analysis, ensuring a good trade-off between cluster compactness and separation.\n\n\n\n\n\nImportance of components:\n                           PC1     PC2    PC3     PC4     PC5     PC6     PC7\nStandard deviation     1.24147 1.22404 1.2053 1.16804 1.15556 1.14377 1.12295\nProportion of Variance 0.05315 0.05166 0.0501 0.04705 0.04605 0.04511 0.04348\nCumulative Proportion  0.05315 0.10481 0.1549 0.20195 0.24800 0.29311 0.33659\n                           PC8     PC9    PC10    PC11    PC12    PC13    PC14\nStandard deviation     1.08146 1.06935 1.06292 1.04270 1.03616 1.02922 1.02355\nProportion of Variance 0.04033 0.03943 0.03896 0.03749 0.03702 0.03653 0.03613\nCumulative Proportion  0.37692 0.41635 0.45531 0.49280 0.52982 0.56635 0.60248\n                         PC15    PC16    PC17    PC18    PC19    PC20   PC21\nStandard deviation     1.0118 1.00777 0.99960 0.98735 0.98305 0.97878 0.9664\nProportion of Variance 0.0353 0.03502 0.03446 0.03362 0.03332 0.03303 0.0322\nCumulative Proportion  0.6378 0.67280 0.70725 0.74087 0.77419 0.80723 0.8394\n                         PC22    PC23    PC24    PC25    PC26    PC27    PC28\nStandard deviation     0.9572 0.94582 0.94161 0.68200 0.67419 0.65242 0.55855\nProportion of Variance 0.0316 0.03085 0.03057 0.01604 0.01567 0.01468 0.01076\nCumulative Proportion  0.8710 0.90187 0.93245 0.94848 0.96416 0.97884 0.98959\n                          PC29\nStandard deviation     0.54935\nProportion of Variance 0.01041\nCumulative Proportion  1.00000\n\n\nScreeplot\n\n\n\n\n\n\n\n\n\nObservation:\nFrom the PCA results and the Scree Plot, we can see that the cumulative variance explained by the first 20 principal components reaches 80.7%. However, the variance explained by each individual principal component is not very high. To reduce dimensionality while retaining the key information, we select only the first 20 principal components for analysis.\n\n\n\nFrom the PCA results, we selected the top 20 components and transformed the data into a new dimension-reduced dataset. When K = 3 PC 4 and PC5 show the best clsutering result. Hence We only show PC4 vs. PC5 2D plot and (PC3, PC4, PC5) 3D plot.\n\n\n\n\n\n\n\n\n\n\nNext, by PCA Loading plot, we can interpret the importance of features in reducing dimensionality while retaining essential information. The first 5 principal components (PCs) are selected ([, 1:5]), which means only the top five components are retained.\n\n\n\n\n\n\n\n\n\n\n\n\nThrough the PCA Loading Heatmap, we identified the key variables that significantly impact PC3, PC4, and PC5. Then, by comparing with the 3D clustering results, we determined which variables have the greatest influence on each cluster.\nCluster 1 (Red) - High Operational Cost & Low Efficiency\nKey Influencing Variables:\n\nHigh Operational Cost (Operational_Cost_USD, PC3, PC4)\nSteam Turbine Engine (Engine_Type_Steam Turbine, PC3, PC5)\nLow Revenue per Voyage (Revenue_per_Voyage_USD, PC3, PC5, negative correlation)\nTransoceanic Route (Route_Type_Transoceanic, PC3)\nLow Speed (Speed_Over_Ground_knots, PC4, PC5)\n\nBusiness Insights:\n\nThis cluster represents old, high-cost ships that typically use steam turbine engines and operate on long transoceanic routes with relatively low revenue generation.\nDue to high fuel consumption and low speed, these ships exhibit low operational efficiency.\n\nCluster 2 (Blue) - Short-haul, Low Cargo & Weather-affected Operations\nKey Influencing Variables:\n\nOperates in Harsh Weather Conditions (Weather_Condition_Rough, PC3, PC4, PC5)\nLow Cargo Weight (Cargo_Weight_tons, PC3, PC4, PC5, negative correlation)\nLow Voyage Frequency (Weekly_Voyage_Count, PC4)\nShort-haul Routes (Route_Type_Short-haul, PC5)\nFair Maintenance Status (Maintenance_Status_Fair, PC3)\n\nBusiness Insights:\n\nThese ships operate in challenging weather conditions, leading to lower voyage frequency and cargo loads.\nLikely to be ferries, small transport vessels, or specialized ships designed for extreme environments (e.g., polar regions or storm-prone areas).\nLower utilization rates may impact profitability.\n\nCluster 3 (Green) - High-Efficiency, High Revenue, Long-haul Ships\nKey Influencing Variables:\n\nLong Travel Distance (Distance_Traveled_nm, PC3, PC4)\nHigh Revenue per Voyage (Revenue_per_Voyage_USD, PC3, PC5)\nGood Maintenance Status (Maintenance_Status_Good, PC3, PC5)\nHigh Engine Power (Engine_Power_kW, PC4)\nLong-haul Routes (Route_Type_Long-haul, PC5)\nHigh Speed (Speed_Over_Ground_knots, PC4, PC5)\n\nBusiness Insights:\n\nThese ships demonstrate high efficiency and revenue generation, making them well-suited for long-haul, high-profit operations.\nGood maintenance conditions and high engine power enable optimal operational performance.\nLikely to be modern, fuel-efficient cargo ships or cruise liners.\n\nNext, we are going to dive deep into the characteristics of 3 cluster.\nFirst, calculate the mean of each cluster in PCA.\nBelow, we visualize the mean and standard deviation of each principal component (PC).\n\n\n\n\n\n [1] \"Cluster\"   \"PC1_mean\"  \"PC1_sd\"    \"PC2_mean\"  \"PC2_sd\"    \"PC3_mean\" \n [7] \"PC3_sd\"    \"PC4_mean\"  \"PC4_sd\"    \"PC5_mean\"  \"PC5_sd\"    \"PC6_mean\" \n[13] \"PC6_sd\"    \"PC7_mean\"  \"PC7_sd\"    \"PC8_mean\"  \"PC8_sd\"    \"PC9_mean\" \n[19] \"PC9_sd\"    \"PC10_mean\" \"PC10_sd\"   \"PC11_mean\" \"PC11_sd\"   \"PC12_mean\"\n[25] \"PC12_sd\"   \"PC13_mean\" \"PC13_sd\"   \"PC14_mean\" \"PC14_sd\"   \"PC15_mean\"\n[31] \"PC15_sd\"   \"PC16_mean\" \"PC16_sd\"   \"PC17_mean\" \"PC17_sd\"   \"PC18_mean\"\n[37] \"PC18_sd\"   \"PC19_mean\" \"PC19_sd\"   \"PC20_mean\" \"PC20_sd\"  \n\n\n\n\n\n\n\n\n\nObservation:\nFrom the plot above we can know that 1. PC1, PC3, PC4, PC5, and PC6 are the key features distinguishing different clusters. 2. PC3 (Operational Cost), PC4 (Speed), PC5 (Maintenance Status), and PC6 (Fuel Efficiency) are critical factors. 3. Cluster 1 (High Cost), Cluster 2 (Short-haul Navigation), and Cluster 3 (High-efficiency Long-haul) show significant differences in these characteristics.\n\n\n\nBelow is a visualization where we can observe the distribution of categorical variables in each cluster.\n\n\n\n\n\n\n\n\n\nThis stacked bar chart shows the distribution of categorical features across different clusters. Each cluster is represented by a bar, and the different colors indicate the proportion of each categorical feature within the cluster.\nKey observation:\n\nEngine Type Distribution Across Clusters\n\n\nCluster 1 has a high proportion of Engine_Type_None\nCluster 2 has a significant proportion of Engine_Type_Heavy Fuel Oil (HFO) and Engine_Type_Steam Turbine, while cluster 3 has more proportion of Engine_Type_Steam Turbine than Engine_Type_Heavy Fuel Oil (HFO).\n\n2. Maintenance Status Differences\n\nAll three clusters have an even distribution across the tree maintenance status.\n\n3. Route Type Variations\n\nAll three clusters have an even distribution across the four route types.\n\n4. Ship Type Distribution\n\nCluster 1, 2 has a higher proportion of Ship_Type_Tanker and Ship_Type_Fish Carrier\nCluster 3 have more Ship_Type_Carrier suggesting a focus on cargo and fishing ships.\n\n5. Weather Conditions\n\nCluster 1 and Cluster 2 have a more balanced mix of Weather_Condition_Moderate and Weather_Condition_Rough.\nCluster 3 has a higher proportion of Weather_Condition_None."
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#summary-and-conclusion",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#summary-and-conclusion",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The clustering analysis reveals three distinct fleet segments, each with unique operational characteristics.\nCluster 1 (Red) consists of older, high-cost vessels, primarily utilizing steam turbine engines and operating on transoceanic routes. These ships exhibit low operational efficiency, with high fuel consumption, lower speeds, and reduced revenue per voyage. They also have a higher proportion of tankers and fish carriers, indicating their primary role in transporting bulk goods or specific cargo types. Despite being evenly distributed across maintenance statuses, these vessels likely require modernization or fuel optimization to remain competitive.\nCluster 2 (Blue) represents short-haul vessels that operate with low cargo weight and lower voyage frequency, often navigating harsh weather conditions. These ships frequently use heavy fuel oil (HFO) or steam turbine engines, suggesting potential cost inefficiencies due to fuel consumption. Their balanced mix of moderate and rough weather conditions implies they operate in challenging environments, possibly coastal regions or storm-prone areas. With a significant proportion of tankers and fish carriers, these vessels may serve niche markets but face profitability challenges due to lower utilization rates.\nCluster 3 (Green) includes modern, high-efficiency cargo ships designed for long-haul operations, covering greater distances at higher speeds. These vessels generate high revenue per voyage, supported by strong engine power and well-maintained conditions. With a higher proportion of cargo carriers, this cluster is optimized for large-scale transport, making it the most cost-effective fleet segment. They also tend to operate in calmer weather conditions, reducing operational risks.\nAcross all clusters, route types and maintenance statuses are evenly distributed, ensuring no specific segment dominates a particular operational category. However, Cluster 1 and Cluster 2 contain more tankers and fish carriers, whereas Cluster 3 is dominated by cargo carriers, reinforcing its role in efficient, high-revenue transport. These insights highlight the need for modernization in Cluster 1, risk mitigation strategies in Cluster 2, and potential expansion opportunities for the efficient vessels in Cluster 3."
  },
  {
    "objectID": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#references",
    "href": "Takehome_Ex/Take-home_Ex1/Take-home_Ex1.html#references",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "R for Visual Analytics Rstudio/Cheatsheets"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex7/In-class_Ex7.html",
    "href": "In-class_Ex/In-class_Ex7/In-class_Ex7.html",
    "title": "In-class Exercise 7",
    "section": "",
    "text": "pacman::p_load(tidyverse, tsibble, feasts, fable, seasonal)\nts_data &lt;- read_csv(\"visitor_arrivals_by_air.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#visualising-time-series-data",
    "href": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#visualising-time-series-data",
    "title": "In-class Exercise 7",
    "section": "Visualising Time-series Data",
    "text": "Visualising Time-series Data\n\nVisualising single time-series: ggplot2 methods\n\nts_longer &lt;- ts_data %&gt;%\n  pivot_longer(cols = c(2:34),\n               names_to = \"Country\",\n               values_to = \"Arrivals\")\nts_longer %&gt;%\n  filter(Country == \"Taiwan\") %&gt;%\n  ggplot(aes(x = `Month-Year`, \n             y = Arrivals))+\n  geom_line(size = 0.5)\n\n\n\n\n\n\n\n\n\n\nPlotting multiple time-series data with ggplot2 methods\n\nggplot(data = ts_longer, \n       aes(x = `Month-Year`, \n           y = Arrivals,\n           color = Country))+\n  geom_line(size = 0.5) +\n  theme(legend.position = \"bottom\", \n        legend.box.spacing = unit(0.5, \"cm\"))\n\n\n\n\n\n\n\n\n\nggplot(data = ts_longer, \n       aes(x = `Month-Year`, \n           y = Arrivals))+\n  geom_line(size = 0.5) +\n  facet_wrap(~ Country,\n             ncol = 3,\n             scales = \"free_y\") +\n  theme_bw()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#visual-analysis-of-time-series-data",
    "href": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#visual-analysis-of-time-series-data",
    "title": "In-class Exercise 7",
    "section": "Visual Analysis of Time-series Data",
    "text": "Visual Analysis of Time-series Data\n\ntsibble_longer &lt;- ts_tsibble %&gt;%\n  pivot_longer(cols = c(2:34),\n               names_to = \"Country\",\n               values_to = \"Arrivals\")\n\n\nVisual Analysis of Seasonality with Seasonal Plot\n\ntsibble_longer %&gt;%\n  filter(Country == \"Italy\" |\n         Country == \"Vietnam\" |\n         Country == \"United Kingdom\" |\n         Country == \"Germany\") %&gt;% \n  gg_season(Arrivals)\n\n\n\n\n\n\n\n\n\n\nVisual Analysis of Seasonality with Cycle Plot\n\ntsibble_longer %&gt;%\n  filter(Country == \"Vietnam\" |\n         Country == \"Italy\") %&gt;% \n  autoplot(Arrivals) + \n  facet_grid(Country ~ ., scales = \"free_y\")\n\n\n\n\n\n\n\n\n\ntsibble_longer %&gt;%\n  filter(Country == \"Vietnam\" |\n         Country == \"Italy\") %&gt;% \n  gg_subseries(Arrivals)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#time-series-decomposition",
    "href": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#time-series-decomposition",
    "title": "In-class Exercise 7",
    "section": "Time series decomposition",
    "text": "Time series decomposition\n\nSingle time series decomposition\n\ntsibble_longer %&gt;%\n  filter(`Country` == \"Vietnam\") %&gt;%\n  ACF(Arrivals) %&gt;% \n  autoplot()\n\n\n\n\n\n\n\n\n\ntsibble_longer %&gt;%\n  filter(`Country` == \"Vietnam\") %&gt;%\n  PACF(Arrivals) %&gt;% \n  autoplot()\n\n\n\n\n\n\n\n\n\n\nMultiple time-series decomposition\n\ntsibble_longer %&gt;%\n  filter(`Country` == \"Vietnam\" |\n         `Country` == \"Italy\" |\n         `Country` == \"United Kingdom\" |\n         `Country` == \"China\") %&gt;%\n  ACF(Arrivals) %&gt;%\n  autoplot()\n\n\n\n\n\n\n\n\n\ntsibble_longer %&gt;%\n  filter(`Country` == \"Vietnam\" |\n         `Country` == \"Italy\" |\n         `Country` == \"United Kingdom\" |\n         `Country` == \"China\") %&gt;%\n  PACF(Arrivals) %&gt;%\n  autoplot()\n\n\n\n\n\n\n\n\n\n\nComposite plot of time series decomposition\n\ntsibble_longer %&gt;%\n  filter(`Country` == \"Vietnam\") %&gt;%\n  gg_tsdisplay(Arrivals)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#visual-stl-diagnostics",
    "href": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#visual-stl-diagnostics",
    "title": "In-class Exercise 7",
    "section": "Visual STL Diagnostics",
    "text": "Visual STL Diagnostics\n\nVisual STL diagnostics with feasts\n\ntsibble_longer %&gt;%\n  filter(`Country` == \"Vietnam\") %&gt;%\n  model(stl = STL(Arrivals)) %&gt;%\n  components() %&gt;%\n  autoplot()\n\n\n\n\n\n\n\n\n\n\nClassical Decomposition with feasts\n\ntsibble_longer %&gt;%\n  filter(`Country` == \"Vietnam\") %&gt;%\n  model(\n    classical_decomposition(\n      Arrivals, type = \"additive\")) %&gt;%\n  components() %&gt;%\n  autoplot()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#visual-forecasting",
    "href": "In-class_Ex/In-class_Ex7/In-class_Ex7.html#visual-forecasting",
    "title": "In-class Exercise 7",
    "section": "Visual Forecasting",
    "text": "Visual Forecasting\n\nTime Series Data Sampling\n\nvietnam_ts &lt;- tsibble_longer %&gt;%\n  filter(Country == \"Vietnam\") %&gt;% \n  mutate(Type = if_else(\n    `Month-Year` &gt;= \"2019-01-01\", \n    \"Hold-out\", \"Training\"))\nvietnam_train &lt;- vietnam_ts %&gt;%\n  filter(`Month-Year` &lt; \"2019-01-01\")\n\n\n\nExploratory Data Analysis (EDA): Time Series Data\n\nvietnam_train %&gt;%\n  model(stl = STL(Arrivals)) %&gt;%\n  components() %&gt;%\n  autoplot()\n\n\n\n\n\n\n\n\n\n\nFitting forecasting models\n\nfit_ses &lt;- vietnam_train %&gt;%\n  model(ETS(Arrivals ~ error(\"A\") \n            + trend(\"N\") \n            + season(\"N\")))\nfit_ses\n\n# A mable: 1 x 2\n# Key:     Country [1]\n  Country `ETS(Arrivals ~ error(\"A\") + trend(\"N\") + season(\"N\"))`\n  &lt;chr&gt;                                                   &lt;model&gt;\n1 Vietnam                                            &lt;ETS(A,N,N)&gt;\n\n\n\nExamine Model Assumptions\n\ngg_tsresiduals(fit_ses)\n\n\n\n\n\n\n\n\n\n\nThe model details\n\nfit_ses %&gt;%\n  report()\n\nSeries: Arrivals \nModel: ETS(A,N,N) \n  Smoothing parameters:\n    alpha = 0.9998995 \n\n  Initial states:\n     l[0]\n 10312.99\n\n  sigma^2:  27939164\n\n     AIC     AICc      BIC \n2911.726 2911.913 2920.374 \n\n\n\n\nTrend method\n\nvietnam_H &lt;- vietnam_train %&gt;%\n  model(`Holt's method` = \n          ETS(Arrivals ~ error(\"A\") +\n                trend(\"A\") + \n                season(\"N\")))\nvietnam_H %&gt;% report()\n\nSeries: Arrivals \nModel: ETS(A,A,N) \n  Smoothing parameters:\n    alpha = 0.9998995 \n    beta  = 0.0001004625 \n\n  Initial states:\n     l[0]     b[0]\n 13673.29 525.8859\n\n  sigma^2:  28584805\n\n     AIC     AICc      BIC \n2916.695 2917.171 2931.109 \n\n\n\n\nDamped Trend Method\n\nvietnam_HAd &lt;- vietnam_train %&gt;%\n  model(`Holt's method` = \n          ETS(Arrivals ~ error(\"A\") +\n                trend(\"Ad\") + \n                season(\"N\")))\nvietnam_HAd %&gt;% report()\n\nSeries: Arrivals \nModel: ETS(A,Ad,N) \n  Smoothing parameters:\n    alpha = 0.9998999 \n    beta  = 0.0001098602 \n    phi   = 0.9784562 \n\n  Initial states:\n     l[0]   b[0]\n 13257.28 523.54\n\n  sigma^2:  28641536\n\n     AIC     AICc      BIC \n2917.921 2918.593 2935.218 \n\n\n\n\nResult\n\ngg_tsresiduals(vietnam_H)\n\n\n\n\n\n\n\n\n\ngg_tsresiduals(vietnam_HAd)"
  }
]