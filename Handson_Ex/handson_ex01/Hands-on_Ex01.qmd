---
title: "Hands-on Exercise 1"
author: "Chang Fang Yu"
date-modified: "last-modified"
execute:
  echo: True
---
#  A Layered Grammar of Graphics: ggplot2 methods
## Getting Started

### Install and launching R packages

The code chunk below use p_load() of Pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.

```{r}
pacman::p_load(tidyverse)
```

### Importing the data

```{r}
exam_data <- read_csv("Data/Exam_data.csv")
```

### Plotting a simple bar chart

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) +
  geom_bar()
```


## R Graphics VS ggplot

::: {.panel-tabset}
### R Graphics
```{r}
hist(exam_data$MATHS)
```

### ggplot2
```{r}
ggplot(data=exam_data, aes(x = MATHS)) +
  geom_histogram(bins=10, 
                 boundary = 100,
                 color="black", 
                 fill="grey") +
  ggtitle("Distribution of Maths scores")
```
:::
###  Essential Grammatical Elements in ggplot2: data
```{R}
ggplot(data=exam_data)

```
### Essential Grammatical Elements in ggplot2: Aesthetic mappings
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS))

```
##  Essential Grammatical Elements in ggplot2: geom
### Geometric Objects: geom_bar
```{R}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()

```
### Geometric Objects: geom_dotplot
```{R}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(dotsize = 0.5)
```
```{R}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,         
               dotsize = 0.5) +      
  scale_y_continuous(NULL,           
                     breaks = NULL)  

```
### Geometric Objects: geom_histogram()
```{R}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram()   
```
### Modifying a geometric object by changing geom()
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")  

```
###  Modifying a geometric object by changing aes()
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           fill = GENDER)) +
  geom_histogram(bins=20, 
                 color="grey30")

```
### Geometric Objects: geom-density()
```{R}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_density()     

```

```{R}
ggplot(data=exam_data, 
       aes(x = MATHS, 
           colour = GENDER)) +
  geom_density()
```
### Geometric Objects: geom_boxplot
```{R}
ggplot(data=exam_data, 
       aes(y = MATHS,       
           x= GENDER)) +    
  geom_boxplot()  

```
```{R}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot(notch=TRUE)

```
### Geometric Objects: geom_violin
```{R}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_violin()

```
### Geometric Objects: geom_point()
```{R}
#| echo: true
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point()   

```
### geom objects can be combined
```{R}
#| echo: true
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot() +                    
  geom_point(position="jitter", 
             size = 0.5)  

```
##  Essential Grammatical Elements in ggplot2: stat
### Working with stat()
```{R}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot()

```
### Working with stat - the stat_summary() method
```{R}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  stat_summary(geom = "point",       
               fun = "mean",         
               colour ="red",        
               size=4)    
```
### Working with stat - the geom() method
```{R}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  geom_point(stat="summary",        
             fun="mean",           
             colour="red",          
             size=4)  
```
###  Adding a best fit curve on a scatterplot?
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(size=0.5)

```
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              linewidth=0.5)
```
## Essential Grammatical Elements in ggplot2: Facets
### Working with facet_wrap()
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_wrap(~ CLASS)

```
### facet_grid() function
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_grid(~ CLASS)
```
##  Essential Grammatical Elements in ggplot2: Coordinates
### Working with Coordinate
```{R}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```
```{R}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()

```
###  Changing the y- and x-axis range
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, size=0.5)
```
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
```
## Essential Grammatical Elements in ggplot2: themes
### Working with theme
```{R}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_gray()
```
```{R}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_classic()
```
```{R}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_minimal()
```

